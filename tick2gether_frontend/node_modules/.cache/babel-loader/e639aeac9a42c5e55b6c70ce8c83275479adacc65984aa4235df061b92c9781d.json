{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:8080/ws';\nconst WebSocketTestComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  let stompClient = null;\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup WebSocket connection on component unmount\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n  const connectWebSocket = () => {\n    const socket = new SockJS(SOCKET_URL);\n    stompClient = Stomp.over(socket);\n    const token = localStorage.getItem('jwtToken');\n    const headers = token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n    stompClient.connect(headers, () => {\n      console.log('Connected to WebSocket');\n\n      // Subscribe to user-specific queue for tasks\n      stompClient.subscribe('/user/1/queue/tasks', message => {\n        handleWebSocketMessage(message);\n      });\n      console.log(`Subscribed to /user/1/queue/tasks`);\n    }, error => {\n      console.error('Error connecting to WebSocket:', error);\n      setTimeout(() => connectWebSocket(), 5000); // Retry connection\n    });\n  };\n  const handleWebSocketMessage = message => {\n    console.log('Received raw message: ', message);\n    if (message.body) {\n      try {\n        const parsedMessage = JSON.parse(message.body);\n        console.log('Parsed message: ', parsedMessage);\n        setMessages(prevMessages => [...prevMessages, parsedMessage]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message:', error);\n      }\n    } else {\n      console.error('Message body is missing or undefined');\n    }\n  };\n  const disconnectWebSocket = () => {\n    if (stompClient) {\n      stompClient.disconnect(() => {\n        console.log('Disconnected from WebSocket');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketTestComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketTestComponent;\nexport default WebSocketTestComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTestComponent\");","map":{"version":3,"names":["React","useEffect","useState","Stomp","SockJS","jsxDEV","_jsxDEV","SOCKET_URL","WebSocketTestComponent","_s","messages","setMessages","stompClient","connectWebSocket","disconnectWebSocket","socket","over","token","localStorage","getItem","headers","Authorization","connect","console","log","subscribe","message","handleWebSocketMessage","error","setTimeout","body","parsedMessage","JSON","parse","prevMessages","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nconst WebSocketTestComponent = () => {\n  const [messages, setMessages] = useState([]);\n  let stompClient = null;\n\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup WebSocket connection on component unmount\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n\n  const connectWebSocket = () => {\n    const socket = new SockJS(SOCKET_URL);\n    stompClient = Stomp.over(socket);\n\n    const token = localStorage.getItem('jwtToken');\n    const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n    stompClient.connect(headers, () => {\n      console.log('Connected to WebSocket');\n\n      // Subscribe to user-specific queue for tasks\n      stompClient.subscribe('/user/1/queue/tasks', (message) => {\n        handleWebSocketMessage(message);\n      });\n      console.log(`Subscribed to /user/1/queue/tasks`);\n    }, (error) => {\n      console.error('Error connecting to WebSocket:', error);\n      setTimeout(() => connectWebSocket(), 5000); // Retry connection\n    });\n  };\n\n  const handleWebSocketMessage = (message) => {\n    console.log('Received raw message: ', message);\n    if (message.body) {\n      try {\n        const parsedMessage = JSON.parse(message.body);\n        console.log('Parsed message: ', parsedMessage);\n        setMessages((prevMessages) => [...prevMessages, parsedMessage]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message:', error);\n      }\n    } else {\n      console.error('Message body is missing or undefined');\n    }\n  };\n\n  const disconnectWebSocket = () => {\n    if (stompClient) {\n      stompClient.disconnect(() => {\n        console.log('Disconnected from WebSocket');\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Test Component</h2>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{JSON.stringify(message)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketTestComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}