{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { XIcon, DeleteIcon, AddIcon, iconMap, lightIconMap, customCategoryIcon, customCategoryLightIcon } from '../icons';\nimport AddCategoryPopUp from './AddCategoryPopUp';\nimport { addCategory, deleteCategory as apiDeleteCategory, fetchAllUsers } from '../api';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport { fetchTasks, deleteTask, fetchUserId, fetchEmail, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport { categorizeTasks } from '../utils/categorizeTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n        const fetchedUsers = await fetchAllUsers();\n        setUsers(fetchedUsers);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        ...updatedData\n      } = message;\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = {\n              ...prevTasks[taskIndex],\n              ...updatedData\n            };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, {\n              taskId,\n              ...updatedData\n            }];\n          }\n        }\n        return prevTasks;\n      });\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(cat => cat.categoryId === addedTask.categoryId);\n        if (!categoryExists) {\n          fetchCategories(userId).then(fetchedCategories => {\n            const updatedCategories = fetchedCategories.map(category => ({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            }));\n            setCategories(updatedCategories);\n          });\n        }\n        return prevCategories;\n      });\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n        return uniqueTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    if (!selectedCategory) return;\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task);\n        return updatedTasks.filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    try {\n      await deleteCategory(id);\n      setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== id));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: filteredTasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId,\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            handleDeleteCategory: handleDeleteCategory,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"FsV5RWO0auew7GUhNbzZezuF1GI=\", true);\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","XIcon","DeleteIcon","AddIcon","iconMap","lightIconMap","customCategoryIcon","customCategoryLightIcon","AddCategoryPopUp","addCategory","deleteCategory","apiDeleteCategory","fetchAllUsers","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","fetchTasks","deleteTask","fetchUserId","fetchEmail","fetchCategories","connectWebSocket","disconnectWebSocket","categorizeTasks","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","users","setUsers","navigate","useNavigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Array","isArray","uniqueCategories","reduce","acc","category","some","cat","categoryId","push","icon","name","length","console","error","fetchedUsers","handleWebSocketMessage","message","log","type","taskId","updatedData","prevTasks","taskIndex","findIndex","task","updatedTasks","fetchIds","taskIds","map","categoryIds","handleAddNewTask","newTask","formattedTask","addedTask","addTask","prevCategories","categoryExists","then","updatedCategories","uniqueTasks","filter","index","self","t","sendUpdateTaskMessage","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","id","handleAddCategory","newCategory","warn","data","newCategoryObject","handleDeleteCategory","toggleDeleteMode","prevMode","handleEditTask","categorizedTasks","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { XIcon, DeleteIcon, AddIcon, iconMap, lightIconMap, customCategoryIcon, customCategoryLightIcon } from '../icons';\nimport AddCategoryPopUp from './AddCategoryPopUp';\nimport { addCategory, deleteCategory as apiDeleteCategory, fetchAllUsers } from '../api';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport { fetchTasks, deleteTask, fetchUserId, fetchEmail, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport { categorizeTasks } from '../utils/categorizeTasks';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon,\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n\n        const fetchedUsers = await fetchAllUsers();\n        setUsers(fetchedUsers);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n      const { type, taskId, ...updatedData } = message;\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedData };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, { taskId, ...updatedData }];\n          }\n        }\n        return prevTasks;\n      });\n    };\n\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(cat => cat.categoryId === addedTask.categoryId);\n        if (!categoryExists) {\n          fetchCategories(userId).then(fetchedCategories => {\n            const updatedCategories = fetchedCategories.map(category => ({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            }));\n            setCategories(updatedCategories);\n          });\n        }\n        return prevCategories;\n      });\n\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n        return uniqueTasks;\n      });\n\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.categoryId || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks.filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleDeleteCategory = async (id) => {\n    try {\n      await deleteCategory(id);\n      setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== id));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory?.categoryId] || [];\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categoriesFromBackend={categories}\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n              users={users}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.categoryId}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              handleDeleteCategory={handleDeleteCategory}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}