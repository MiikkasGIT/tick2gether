{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/components/EditTaskPopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon } from '../icons';\nimport Calendar from './Calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTaskPopUp({\n  todo,\n  onSaveTask,\n  onClose\n}) {\n  _s();\n  const [taskText, setTaskText] = useState(todo.text);\n  const [selectedDate, setSelectedDate] = useState(todo.deadlineDate || null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    try {\n      const response = await fetch(`/api/edit-task/${todo.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: taskText,\n          planDate: todo.planDate,\n          deadlineDate: selectedDate\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onSaveTask(data.task);\n        setShowTooltip(false);\n        onClose();\n      } else {\n        throw new Error('Failed to edit task');\n      }\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setShowCalendar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex items-center justify-between space-x-2 relative w-full h-[42px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type in what you have to do\",\n          className: `flex-grow h-full p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`,\n          value: taskText,\n          onChange: e => setTaskText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-full mt-2 text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\",\n          children: \"To Do Input cannot be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowCalendar(!showCalendar),\n          className: \"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(PlanTaskIcon, {\n            className: \"h-5 w-5 text-grayCustom-light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), selectedDate ? format(selectedDate, 'MMMM d') : 'Set Deadline']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-0 mt-2 w-full max-w-xs\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          selectedDate: selectedDate,\n          setSelectedDate: handleDateChange,\n          setShowCalendar: setShowCalendar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTaskPopUp, \"Z2zXzF3F1QET4TZNG+/8rLdxZtA=\");\n_c = EditTaskPopUp;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopUp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","format","PlanTaskIcon","Calendar","jsxDEV","_jsxDEV","EditTaskPopUp","todo","onSaveTask","onClose","_s","taskText","setTaskText","text","selectedDate","setSelectedDate","deadlineDate","showCalendar","setShowCalendar","showTooltip","setShowTooltip","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSubmit","e","preventDefault","trim","response","fetch","id","method","headers","body","JSON","stringify","planDate","ok","data","json","task","Error","error","console","handleDateChange","date","className","children","onSubmit","type","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/components/EditTaskPopUp.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon } from '../icons';\nimport Calendar from './Calendar';\n\nexport default function EditTaskPopUp({ todo, onSaveTask, onClose }) {\n  const [taskText, setTaskText] = useState(todo.text);\n  const [selectedDate, setSelectedDate] = useState(todo.deadlineDate || null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    try {\n      const response = await fetch(`/api/edit-task/${todo.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text: taskText,\n          planDate: todo.planDate,\n          deadlineDate: selectedDate,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        onSaveTask(data.task);\n        setShowTooltip(false);\n        onClose();\n      } else {\n        throw new Error('Failed to edit task');\n      }\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setShowCalendar(false);\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\">\n      <div ref={ref} className=\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\">\n        <form onSubmit={handleSubmit} className=\"flex items-center justify-between space-x-2 relative w-full h-[42px]\">\n          <input\n            type=\"text\"\n            placeholder=\"Type in what you have to do\"\n            className={`flex-grow h-full p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`}\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n          />\n          {showTooltip && (\n            <div className=\"absolute top-full mt-2 text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\">\n              To Do Input cannot be empty.\n            </div>\n          )}\n          <button\n            type=\"button\"\n            onClick={() => setShowCalendar(!showCalendar)}\n            className=\"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\"\n          >\n            <PlanTaskIcon className=\"h-5 w-5 text-grayCustom-light\" />\n            {selectedDate ? format(selectedDate, 'MMMM d') : 'Set Deadline'}\n          </button>\n          <button\n            type=\"submit\"\n            className=\"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\"\n          >\n            Edit\n          </button>\n        </form>\n        {showCalendar && (\n          <div className=\"absolute right-0 mt-2 w-full max-w-xs\">\n            <Calendar\n              selectedDate={selectedDate}\n              setSelectedDate={handleDateChange}\n              setShowCalendar={setShowCalendar}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,YAAY,QAAQ,UAAU;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,aAAaA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACS,IAAI,CAACM,IAAI,CAAC;EACnD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAACS,IAAI,CAACS,YAAY,IAAI,IAAI,CAAC;EAC3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMuB,GAAG,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAExBC,SAAS,CAAC,MAAM;IACd,SAASsB,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIF,GAAG,CAACG,OAAO,IAAI,CAACH,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtDjB,OAAO,CAAC,CAAC;MACX;IACF;IACAkB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACD,GAAG,CAAC,CAAC;EAET,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIrB,QAAQ,CAACsB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1Bb,cAAc,CAAC,IAAI,CAAC;MACpB;IACF;IACA,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB5B,IAAI,CAAC6B,EAAE,EAAE,EAAE;QACxDC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB5B,IAAI,EAAEF,QAAQ;UACd+B,QAAQ,EAAEnC,IAAI,CAACmC,QAAQ;UACvB1B,YAAY,EAAEF;QAChB,CAAC;MACH,CAAC,CAAC;MAEF,IAAIoB,QAAQ,CAACS,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCrC,UAAU,CAACoC,IAAI,CAACE,IAAI,CAAC;QACrB1B,cAAc,CAAC,KAAK,CAAC;QACrBX,OAAO,CAAC,CAAC;MACX,CAAC,MAAM;QACL,MAAM,IAAIsC,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIC,IAAI,IAAK;IACjCpC,eAAe,CAACoC,IAAI,CAAC;IACrBjC,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA;IAAK+C,SAAS,EAAC,+EAA+E;IAAAC,QAAA,eAC5FhD,OAAA;MAAKgB,GAAG,EAAEA,GAAI;MAAC+B,SAAS,EAAC,4FAA4F;MAAAC,QAAA,gBACnHhD,OAAA;QAAMiD,QAAQ,EAAExB,YAAa;QAACsB,SAAS,EAAC,sEAAsE;QAAAC,QAAA,gBAC5GhD,OAAA;UACEkD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,6BAA6B;UACzCJ,SAAS,EAAE,2HAA2HjC,WAAW,GAAG,gBAAgB,GAAG,iBAAiB,EAAG;UAC3LsC,KAAK,EAAE9C,QAAS;UAChB+C,QAAQ,EAAG3B,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACL,MAAM,CAAC+B,KAAK;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,EACD3C,WAAW,iBACVd,OAAA;UAAK+C,SAAS,EAAC,qIAAqI;UAAAC,QAAA,EAAC;QAErJ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN,eACDzD,OAAA;UACEkD,IAAI,EAAC,QAAQ;UACbQ,OAAO,EAAEA,CAAA,KAAM7C,eAAe,CAAC,CAACD,YAAY,CAAE;UAC9CmC,SAAS,EAAC,0JAA0J;UAAAC,QAAA,gBAEpKhD,OAAA,CAACH,YAAY;YAACkD,SAAS,EAAC;UAA+B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACzDhD,YAAY,GAAGb,MAAM,CAACa,YAAY,EAAE,QAAQ,CAAC,GAAG,cAAc;QAAA;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eACTzD,OAAA;UACEkD,IAAI,EAAC,QAAQ;UACbH,SAAS,EAAC,0JAA0J;UAAAC,QAAA,EACrK;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACN7C,YAAY,iBACXZ,OAAA;QAAK+C,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpDhD,OAAA,CAACF,QAAQ;UACPW,YAAY,EAAEA,YAAa;UAC3BC,eAAe,EAAEmC,gBAAiB;UAClChC,eAAe,EAAEA;QAAgB;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpD,EAAA,CAnGuBJ,aAAa;AAAA0D,EAAA,GAAb1D,aAAa;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}