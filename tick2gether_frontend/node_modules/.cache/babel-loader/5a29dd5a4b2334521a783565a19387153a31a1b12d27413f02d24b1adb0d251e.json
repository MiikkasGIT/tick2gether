{"ast":null,"code":"export const STANDARD_CATEGORIES = [{\n  id: 1,\n  name: 'All Tasks'\n}, {\n  id: 2,\n  name: 'Today'\n}, {\n  id: 3,\n  name: 'Planned'\n}, {\n  id: 4,\n  name: 'Any Time'\n}, {\n  id: 5,\n  name: 'Work'\n}, {\n  id: 6,\n  name: 'Personal'\n}, {\n  id: 7,\n  name: 'Logbook'\n}];\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n  const standardCategoryIds = new Set(STANDARD_CATEGORIES.map(category => category.id));\n  categories.forEach(category => {\n    categorizedTasks[category.id] = [];\n  });\n  tasks.forEach(task => {\n    const categoryId = task.categoryId;\n    if (standardCategoryIds.has(categoryId) || categorizedTasks[categoryId]) {\n      switch (categoryId) {\n        case 1:\n          categorizedTasks[1] = tasks;\n          break;\n        case 2:\n          categorizedTasks[2] = tasks.filter(task => task.categoryId === 2);\n          break;\n        case 3:\n          categorizedTasks[3] = tasks.filter(task => task.planDate);\n          break;\n        case 4:\n          categorizedTasks[4] = tasks.filter(task => task.categoryId === 4);\n          break;\n        case 5:\n          categorizedTasks[5] = tasks.filter(task => task.categoryId === 5);\n          break;\n        case 6:\n          categorizedTasks[6] = tasks.filter(task => task.categoryId === 6);\n          break;\n        case 7:\n          categorizedTasks[7] = tasks.filter(task => task.completed);\n          break;\n        default:\n          categorizedTasks[categoryId] = categorizedTasks[categoryId] || [];\n          categorizedTasks[categoryId].push(task);\n          break;\n      }\n    }\n  });\n  return categorizedTasks;\n};","map":{"version":3,"names":["STANDARD_CATEGORIES","id","name","categorizeTasks","tasks","categories","categorizedTasks","standardCategoryIds","Set","map","category","forEach","task","categoryId","has","filter","planDate","completed","push"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/utils/categorizeTasks.jsx"],"sourcesContent":["export const STANDARD_CATEGORIES = [\n  { id: 1, name: 'All Tasks' },\n  { id: 2, name: 'Today' },\n  { id: 3, name: 'Planned' },\n  { id: 4, name: 'Any Time' },\n  { id: 5, name: 'Work' },\n  { id: 6, name: 'Personal' },\n  { id: 7, name: 'Logbook' },\n];export const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  const standardCategoryIds = new Set(STANDARD_CATEGORIES.map(category => category.id));\n  \n  categories.forEach(category => {\n    categorizedTasks[category.id] = [];\n  });\n\n  tasks.forEach(task => {\n    const categoryId = task.categoryId;\n\n    if (standardCategoryIds.has(categoryId) || categorizedTasks[categoryId]) {\n      switch (categoryId) {\n        case 1:\n          categorizedTasks[1] = tasks;\n          break;\n        case 2:\n          categorizedTasks[2] = tasks.filter(task => task.categoryId === 2);\n          break;\n        case 3:\n          categorizedTasks[3] = tasks.filter(task => task.planDate);\n          break;\n        case 4:\n          categorizedTasks[4] = tasks.filter(task => task.categoryId === 4);\n          break;\n        case 5:\n          categorizedTasks[5] = tasks.filter(task => task.categoryId === 5);\n          break;\n        case 6:\n          categorizedTasks[6] = tasks.filter(task => task.categoryId === 6);\n          break;\n        case 7:\n          categorizedTasks[7] = tasks.filter(task => task.completed);\n          break;\n        default:\n          categorizedTasks[categoryId] = categorizedTasks[categoryId] || [];\n          categorizedTasks[categoryId].push(task);\n          break;\n      }\n    }\n  });\n\n  return categorizedTasks;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,CACjC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAY,CAAC,EAC5B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACvB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC3B;AAAC,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EACtD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAE3B,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,CAACR,mBAAmB,CAACS,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACT,EAAE,CAAC,CAAC;EAErFI,UAAU,CAACM,OAAO,CAACD,QAAQ,IAAI;IAC7BJ,gBAAgB,CAACI,QAAQ,CAACT,EAAE,CAAC,GAAG,EAAE;EACpC,CAAC,CAAC;EAEFG,KAAK,CAACO,OAAO,CAACC,IAAI,IAAI;IACpB,MAAMC,UAAU,GAAGD,IAAI,CAACC,UAAU;IAElC,IAAIN,mBAAmB,CAACO,GAAG,CAACD,UAAU,CAAC,IAAIP,gBAAgB,CAACO,UAAU,CAAC,EAAE;MACvE,QAAQA,UAAU;QAChB,KAAK,CAAC;UACJP,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK;UAC3B;QACF,KAAK,CAAC;UACJE,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,CAAC;UACjE;QACF,KAAK,CAAC;UACJP,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,QAAQ,CAAC;UACzD;QACF,KAAK,CAAC;UACJV,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,CAAC;UACjE;QACF,KAAK,CAAC;UACJP,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,CAAC;UACjE;QACF,KAAK,CAAC;UACJP,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,CAAC;UACjE;QACF,KAAK,CAAC;UACJP,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACK,SAAS,CAAC;UAC1D;QACF;UACEX,gBAAgB,CAACO,UAAU,CAAC,GAAGP,gBAAgB,CAACO,UAAU,CAAC,IAAI,EAAE;UACjEP,gBAAgB,CAACO,UAAU,CAAC,CAACK,IAAI,CAACN,IAAI,CAAC;UACvC;MACJ;IACF;EACF,CAAC,CAAC;EAEF,OAAON,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}