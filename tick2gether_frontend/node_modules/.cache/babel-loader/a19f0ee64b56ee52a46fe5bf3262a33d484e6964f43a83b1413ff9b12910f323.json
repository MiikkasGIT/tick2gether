{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTodos,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory\n}) {\n  const handleCheckboxChange = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const handleDelete = id => {\n    const updatedTodos = todos.filter(todo => todo.taskId !== id);\n    setTodos(updatedTodos);\n  };\n  const handleTodoClick = (todo, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTodo(todo);\n    } else {\n      setTodos(todos.map(t => t.taskId === todo.taskId ? {\n        ...t,\n        selected: !t.selected\n      } : {\n        ...t,\n        selected: false\n      }));\n    }\n  };\n  const handleEditClick = todo => {\n    onEditTodo(todo);\n  };\n  const today = startOfToday();\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.category.name === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category.name !== 'Planned';\n      case 'Logbook':\n        return todo.category.name === 'Logbook';\n      default:\n        return todo.category.name === selectedCategory.name;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: handleCheckboxChange,\n        handleTodoClick: handleTodoClick,\n        handleDelete: handleDelete,\n        handleEditClick: handleEditClick,\n        isDeleteMode: isDeleteMode,\n        isTodayCategory: selectedCategory.name === 'Today'\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","ToDoList","todos","setTodos","isDeleteMode","onEditTodo","selectedCategory","handleCheckboxChange","id","updatedTodos","map","todo","taskId","completed","handleDelete","filter","handleTodoClick","e","target","tagName","t","selected","handleEditClick","today","filteredTodos","name","planDate","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\nexport default function ToDoList({ todos = [], setTodos, isDeleteMode, onEditTodo, selectedCategory }) {\n  const handleCheckboxChange = (id) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = todos.filter(todo => todo.taskId !== id);\n    setTodos(updatedTodos);\n  };\n\n  const handleTodoClick = (todo, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTodo(todo);\n    } else {\n      setTodos(todos.map(t => \n        t.taskId === todo.taskId ? { ...t, selected: !t.selected } : { ...t, selected: false }\n      ));\n    }\n  };\n\n  const handleEditClick = (todo) => {\n    onEditTodo(todo);\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return (todo.category.name === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category.name !== 'Planned';\n      case 'Logbook':\n        return todo.category.name === 'Logbook';\n      default:\n        return todo.category.name === selectedCategory.name;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={handleCheckboxChange}\n            handleTodoClick={handleTodoClick}\n            handleDelete={handleDelete}\n            handleEditClick={handleEditClick}\n            isDeleteMode={isDeleteMode}\n            isTodayCategory={selectedCategory.name === 'Today'}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}