{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/AddCategoryPopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCategories = [{\n  id: 1,\n  name: 'All Tasks',\n  icon: PlannedIcon\n}, {\n  id: 2,\n  name: 'Today',\n  icon: PlannedIcon\n}, {\n  id: 3,\n  name: 'Planned',\n  icon: PlannedIcon\n}, {\n  id: 4,\n  name: 'Any Time',\n  icon: PlannedIcon\n}, {\n  id: 5,\n  name: 'Work',\n  icon: PlannedIcon\n}, {\n  id: 6,\n  name: 'Personal',\n  icon: PlannedIcon\n}, {\n  id: 7,\n  name: 'Logbook',\n  icon: PlannedIcon\n}];\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        console.log('Fetched email:', email);\n        const userId = await fetchUserId(email);\n        console.log('Fetched user ID:', userId);\n        setUserId(userId);\n        await fetchTasksData(userId);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasks();\n  }, [navigate]);\n  const fetchTasksData = async user => {\n    console.log('Fetching tasks for userId:', user);\n    try {\n      const tasksData = await fetchTasks(user);\n      console.log('Received tasks:', tasksData);\n      if (Array.isArray(tasksData)) {\n        setTasks(tasksData);\n      } else {\n        console.error('Expected an array but received:', tasksData);\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleAddNewTask = async newTask => {\n    try {\n      console.log('handleAddNewTask - userId:', userId);\n      newTask.userId = userId;\n      const data = await addTask(newTask);\n      setTasks(prevTasks => [...prevTasks, data]);\n      await fetchTasksData(userId);\n      setShowAddTaskPopUp(false);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      console.log('handleSaveTask - userId:', userId);\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId\n      };\n      await updateTask(taskToUpdate);\n      await fetchTasksData(userId);\n      setShowEditTaskPopUp(false);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleAddNewCategory = async categoryName => {\n    try {\n      console.log('handleAddNewCategory - userId:', userId);\n      const newCategory = {\n        id: categories.length + 1,\n        name: categoryName,\n        icon: PlannedIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategory]);\n      console.log('Added category:', newCategory);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      await fetchTasksData(userId);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-md\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex items-center justify-between space-x-2 relative w-full h-[42px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter category name\",\n          className: `flex-grow h-full p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`,\n          value: categoryName,\n          onChange: e => {\n            console.log('Input value:', e.target.value); // Debugging\n            setCategoryName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-full mt-2 text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\",\n          children: \"Category name cannot be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"wgAHEzGlF+wu8PvOzAOsm2T1O20=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","PlannedIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","jsxDEV","_jsxDEV","initialCategories","id","name","icon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","fetchUserAndTasks","email","console","log","fetchTasksData","error","user","tasksData","Array","isArray","handleAddNewTask","newTask","data","prevTasks","handleSaveTask","updatedTask","taskToUpdate","taskId","handleAddNewCategory","categoryName","newCategory","length","prevCategories","toggleDeleteMode","prevMode","handleEditTask","task","handleDeleteTask","className","children","ref","onSubmit","handleSubmit","type","placeholder","showTooltip","value","onChange","e","target","setCategoryName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/AddCategoryPopUp.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory } from '../api';\n\nconst initialCategories = [\n  { id: 1, name: 'All Tasks', icon: PlannedIcon },\n  { id: 2, name: 'Today', icon: PlannedIcon },\n  { id: 3, name: 'Planned', icon: PlannedIcon },\n  { id: 4, name: 'Any Time', icon: PlannedIcon },\n  { id: 5, name: 'Work', icon: PlannedIcon },\n  { id: 6, name: 'Personal', icon: PlannedIcon },\n  { id: 7, name: 'Logbook', icon: PlannedIcon },\n];\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        console.log('Fetched email:', email);\n        const userId = await fetchUserId(email);\n        console.log('Fetched user ID:', userId);\n        setUserId(userId);\n\n        await fetchTasksData(userId);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        navigate('/login');\n      }\n    };\n\n    fetchUserAndTasks();\n  }, [navigate]);\n\n  const fetchTasksData = async (user) => {\n    console.log('Fetching tasks for userId:', user);\n    try {\n      const tasksData = await fetchTasks(user);\n      console.log('Received tasks:', tasksData);\n      if (Array.isArray(tasksData)) {\n        setTasks(tasksData);\n      } else {\n        console.error('Expected an array but received:', tasksData);\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      console.log('handleAddNewTask - userId:', userId);\n      newTask.userId = userId;\n      const data = await addTask(newTask);\n      setTasks((prevTasks) => [...prevTasks, data]);\n      await fetchTasksData(userId);\n      setShowAddTaskPopUp(false);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      console.log('handleSaveTask - userId:', userId);\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n      };\n      await updateTask(taskToUpdate);\n      await fetchTasksData(userId);\n      setShowEditTaskPopUp(false);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleAddNewCategory = async (categoryName) => {\n    try {\n      console.log('handleAddNewCategory - userId:', userId);\n      const newCategory = {\n        id: categories.length + 1,\n        name: categoryName,\n        icon: PlannedIcon,\n      };\n      setCategories((prevCategories) => [...prevCategories, newCategory]);\n      console.log('Added category:', newCategory);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode((prevMode) => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      await fetchTasksData(userId);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\">\n      <div ref={ref} className=\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-md\">\n        <form onSubmit={handleSubmit} className=\"flex items-center justify-between space-x-2 relative w-full h-[42px]\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter category name\"\n            className={`flex-grow h-full p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`}\n            value={categoryName}\n            onChange={(e) => {\n              console.log('Input value:', e.target.value); // Debugging\n              setCategoryName(e.target.value);\n            }}\n          />\n          {showTooltip && (\n            <div className=\"absolute top-full mt-2 text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\">\n              Category name cannot be empty.\n            </div>\n          )}\n          <button\n            type=\"submit\"\n            className=\"inline-flex h-full px-4 justify-center items-center gap-1 flex-shrink-0 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}