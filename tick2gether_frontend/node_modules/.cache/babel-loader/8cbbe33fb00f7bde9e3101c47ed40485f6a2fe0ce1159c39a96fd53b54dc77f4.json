{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport ToDo from './ToDo';\nimport { updateTask, fetchTasks } from '../api'; // Stellen Sie sicher, dass der richtige Importpfad verwendet wird\nimport { startOfToday, isAfter } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory,\n  handleDeleteTask,\n  userId\n}) {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks(); // Verwenden Sie die `fetchTasks`-Funktion aus der API\n      console.log('Fetched todos:', data);\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n  const updateTaskInState = useCallback(updatedTask => {\n    console.log('Updating task in state:', updatedTask);\n    setTasks(prevTodos => {\n      const todos = prevTodos.map(task => task.taskId === updatedTask.taskId ? updatedTask : task);\n      console.log('Updated todos:', todos);\n      return todos;\n    });\n  }, [setTasks]);\n  const handleMessageReceived = useCallback(message => {\n    console.log(\"WebSocket message received:\", message);\n    if (message.type === 'TASK_UPDATE') {\n      updateTaskInState(message.task);\n    }\n  }, [updateTaskInState]);\n  useEffect(() => {\n    console.log('Connecting to WebSocket and fetching todos');\n    connectWebSocket(userId, handleMessageReceived);\n    fetchTodos();\n    return () => {\n      console.log('Disconnecting from WebSocket');\n      disconnectWebSocket();\n    };\n  }, [userId, fetchTodos, handleMessageReceived]);\n  const handleCheckboxChange = async taskId => {\n    console.log('Checkbox changed for ID:', taskId);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Updating task in backend:', updatedTask);\n      // Aktualisiere das Backend Ã¼ber REST\n      await updateTask(updatedTask, userId);\n\n      // Senden der WebSocket-Nachricht\n      console.log('Sending WebSocket message for task update:', updatedTask);\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n        type: 'TASK_UPDATE',\n        task: updatedTask\n      });\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n  const handleDeleteClick = async taskId => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${taskId}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message for date update:', updatedTask);\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n        type: 'TASK_UPDATE',\n        task: updatedTask\n      });\n      console.log('WebSocket update date successful');\n    } catch (error) {\n      console.error('Error updating date via WebSocket:', error);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo ? onEditTodo(todo) : null,\n        isSelected: todo.taskId === selectedTodoId,\n        onDateChange: handleDateChange,\n        isDeleteMode: isDeleteMode,\n        userId: userId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"78Xa0iiQLsuShjBSZuCVfdA88UU=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","ToDo","updateTask","fetchTasks","startOfToday","isAfter","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","handleDeleteTask","userId","_s","selectedTodoId","setSelectedTodoId","fetchTodos","console","log","data","error","updateTaskInState","updatedTask","prevTodos","map","task","taskId","handleMessageReceived","message","type","handleCheckboxChange","updatedTodos","todo","updatedTodo","completed","categoryId","find","handleDeleteClick","response","handleDateChange","date","purpose","Date","toISOString","today","filteredTodos","name","filter","planDate","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleEditClick","isSelected","onDateChange","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport ToDo from './ToDo';\nimport { updateTask, fetchTasks } from '../api'; // Stellen Sie sicher, dass der richtige Importpfad verwendet wird\nimport { startOfToday, isAfter } from 'date-fns';\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory, handleDeleteTask, userId }) {\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks(); // Verwenden Sie die `fetchTasks`-Funktion aus der API\n      console.log('Fetched todos:', data);\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n\n  const updateTaskInState = useCallback((updatedTask) => {\n    console.log('Updating task in state:', updatedTask);\n    setTasks(prevTodos => {\n      const todos = prevTodos.map(task =>\n        task.taskId === updatedTask.taskId ? updatedTask : task\n      );\n      console.log('Updated todos:', todos);\n      return todos;\n    });\n  }, [setTasks]);\n\n  const handleMessageReceived = useCallback((message) => {\n    console.log(\"WebSocket message received:\", message);\n    if (message.type === 'TASK_UPDATE') {\n      updateTaskInState(message.task);\n    }\n  }, [updateTaskInState]);\n\n  useEffect(() => {\n    console.log('Connecting to WebSocket and fetching todos');\n    connectWebSocket(userId, handleMessageReceived);\n    fetchTodos();\n\n    return () => {\n      console.log('Disconnecting from WebSocket');\n      disconnectWebSocket();\n    };\n  }, [userId, fetchTodos, handleMessageReceived]);\n\n  const handleCheckboxChange = async (taskId) => {\n    console.log('Checkbox changed for ID:', taskId);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Updating task in backend:', updatedTask);\n      // Aktualisiere das Backend Ã¼ber REST\n      await updateTask(updatedTask, userId);\n\n      // Senden der WebSocket-Nachricht\n      console.log('Sending WebSocket message for task update:', updatedTask);\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_UPDATE', task: updatedTask });\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n\n  const handleDeleteClick = async (taskId) => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${taskId}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message for date update:', updatedTask);\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_UPDATE', task: updatedTask });\n      console.log('WebSocket update date successful');\n    } catch (error) {\n      console.error('Error updating date via WebSocket:', error);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo ? onEditTodo(todo) : null}\n            isSelected={todo.taskId === selectedTodoId}\n            onDateChange={handleDateChange}\n            isDeleteMode={isDeleteMode}\n            userId={userId}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}