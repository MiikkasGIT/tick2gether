{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('jwtToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\nexport const fetchUser = () => api.get('/user/me').then(res => res.data);\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const loginUser = credentials => {\n  return api.post('/user/login', credentials).then(response => response.data).catch(error => {\n    console.error('Error during login:', error);\n    throw error;\n  });\n};\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchTasks","get","then","res","data","addTask","task","post","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","user","loginUser","credentials","response","catch","console","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\nexport const fetchUser = () => api.get('/user/me').then(res => res.data);\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\nexport const loginUser = (credentials) => {\n  return api.post('/user/login', credentials)\n    .then(response => response.data)\n    .catch(error => {\n      console.error('Error during login:', error);\n      throw error;\n    });\n};\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);\n\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}