{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendTestMessage } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTestComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // example user ID\n\n  useEffect(() => {\n    connectWebSocket(userId, message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    const taskDTO = {\n      taskId: 1,\n      text: 'Test Task',\n      userId: userId,\n      categoryId: 1,\n      type: 'TEST_MESSAGE',\n      message: 'This is a test message'\n    };\n    sendTestMessage(taskDTO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Test Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketTestComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketTestComponent;\nexport default WebSocketTestComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTestComponent\");","map":{"version":3,"names":["React","useState","useEffect","connectWebSocket","disconnectWebSocket","sendTestMessage","jsxDEV","_jsxDEV","WebSocketTestComponent","_s","messages","setMessages","userId","message","prevMessages","handleSendMessage","taskDTO","taskId","text","categoryId","type","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendTestMessage } from './websocket';\n\nconst WebSocketTestComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // example user ID\n\n  useEffect(() => {\n    connectWebSocket(userId, (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n\n  const handleSendMessage = () => {\n    const taskDTO = {\n      taskId: 1,\n      text: 'Test Task',\n      userId: userId,\n      categoryId: 1,\n      type: 'TEST_MESSAGE',\n      message: 'This is a test message'\n    };\n    sendTestMessage(taskDTO);\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Test Component</h2>\n      <button onClick={handleSendMessage}>Send Test Message</button>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{JSON.stringify(message)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketTestComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,GAAG,CAAC,CAAC,CAAC;;EAElBV,SAAS,CAAC,MAAM;IACdC,gBAAgB,CAACS,MAAM,EAAGC,OAAO,IAAK;MACpCF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO,MAAM;MACXT,mBAAmB,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,WAAW;MACjBN,MAAM,EAAEA,MAAM;MACdO,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,cAAc;MACpBP,OAAO,EAAE;IACX,CAAC;IACDR,eAAe,CAACW,OAAO,CAAC;EAC1B,CAAC;EAED,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClB,OAAA;MAAQmB,OAAO,EAAEX,iBAAkB;MAAAM,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACiB,GAAG,CAAC,CAACd,OAAO,EAAEe,KAAK,kBAC3BrB,OAAA;QAAAc,QAAA,EAAiBQ,IAAI,CAACC,SAAS,CAACjB,OAAO;MAAC,GAA/Be,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,sBAAsB;AAAAuB,EAAA,GAAtBvB,sBAAsB;AAuC5B,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}