{"ast":null,"code":"import{Stomp}from'@stomp/stompjs';import SockJS from'sockjs-client';const SOCKET_URL='http://localhost:8080/ws';let stompClient=null;const connectWebSocket=(userId,taskIds,categoryIds,onMessageReceived)=>{const socket=new SockJS(SOCKET_URL);stompClient=Stomp.over(socket);const token=localStorage.getItem('jwtToken');const headers=token?{Authorization:\"Bearer \".concat(token)}:{};stompClient.connect(headers,()=>{console.log('Connected to WebSocket');stompClient.subscribe('/topic/tasks',message=>handleMessage(message,onMessageReceived));//stompClient.subscribe(`/user/${userId}/queue/tasks`, (message) => handleMessage(message, onMessageReceived));\n},error=>{console.error('Error connecting to WebSocket:',error);setTimeout(()=>connectWebSocket(userId,taskIds,categoryIds,onMessageReceived),5000);});};const handleMessage=(message,onMessageReceived)=>{if(message.body){try{const parsedMessage=JSON.parse(message.body);onMessageReceived(parsedMessage);}catch(error){console.error('Failed to parse WebSocket message:',error);}}};const disconnectWebSocket=()=>{if(stompClient){stompClient.disconnect(()=>{console.log('Disconnected from WebSocket');});}};const sendWebSocketMessage=(destination,message)=>{if(stompClient&&stompClient.connected){const token=localStorage.getItem('jwtToken');const headers=token?{Authorization:\"Bearer \".concat(token)}:{};console.log('Sending message to',destination);try{stompClient.send(destination,headers,JSON.stringify(message));}catch(error){console.error('Failed to send WebSocket message:',error);}}};export{connectWebSocket,disconnectWebSocket,sendWebSocketMessage};export const sendUpdateTaskMessage=taskDTO=>{var _taskDTO$completed;taskDTO.completed=(_taskDTO$completed=taskDTO.completed)!==null&&_taskDTO$completed!==void 0?_taskDTO$completed:false;console.log('Sending update task message:',taskDTO);sendWebSocketMessage(\"/app/updateTask/\".concat(taskDTO.taskId),{...taskDTO,type:'TASK_UPDATE'});};","map":{"version":3,"names":["Stomp","SockJS","SOCKET_URL","stompClient","connectWebSocket","userId","taskIds","categoryIds","onMessageReceived","socket","over","token","localStorage","getItem","headers","Authorization","concat","connect","console","log","subscribe","message","handleMessage","error","setTimeout","body","parsedMessage","JSON","parse","disconnectWebSocket","disconnect","sendWebSocketMessage","destination","connected","send","stringify","sendUpdateTaskMessage","taskDTO","_taskDTO$completed","completed","taskId","type"],"sources":["/Users/miikkakoensler/Downloads/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["import { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nlet stompClient = null;\n\nconst connectWebSocket = (userId, taskIds, categoryIds, onMessageReceived) => {\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = Stomp.over(socket);\n\n  const token = localStorage.getItem('jwtToken');\n  const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n  stompClient.connect(headers, () => {\n    console.log('Connected to WebSocket');\n    stompClient.subscribe('/topic/tasks', (message) => handleMessage(message, onMessageReceived));\n    //stompClient.subscribe(`/user/${userId}/queue/tasks`, (message) => handleMessage(message, onMessageReceived));\n\n  }, (error) => {\n    console.error('Error connecting to WebSocket:', error);\n    setTimeout(() => connectWebSocket(userId, taskIds, categoryIds, onMessageReceived), 5000); \n  });\n};\n\nconst handleMessage = (message, onMessageReceived) => {\n  if (message.body) {\n    try {\n      const parsedMessage = JSON.parse(message.body);\n      onMessageReceived(parsedMessage);\n    } catch (error) {\n      console.error('Failed to parse WebSocket message:', error);\n    }\n  }\n};\n\nconst disconnectWebSocket = () => {\n  if (stompClient) {\n    stompClient.disconnect(() => {\n      console.log('Disconnected from WebSocket');\n    });\n  }\n};\n\nconst sendWebSocketMessage = (destination, message) => {\n  if (stompClient && stompClient.connected) {\n    const token = localStorage.getItem('jwtToken');\n    const headers = token ? { Authorization: `Bearer ${token}` } : {};\n    console.log('Sending message to', destination);\n    try {\n      stompClient.send(destination, headers, JSON.stringify(message));\n    } catch (error) {\n      console.error('Failed to send WebSocket message:', error);\n    }\n  }\n};\n\nexport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage };\n\nexport const sendUpdateTaskMessage = (taskDTO) => {\n  taskDTO.completed = taskDTO.completed ?? false;\n  console.log('Sending update task message:', taskDTO);\n  sendWebSocketMessage(`/app/updateTask/${taskDTO.taskId}`, { ...taskDTO, type: 'TASK_UPDATE' });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}