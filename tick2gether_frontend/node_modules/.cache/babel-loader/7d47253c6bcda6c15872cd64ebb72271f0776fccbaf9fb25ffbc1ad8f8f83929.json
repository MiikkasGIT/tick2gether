{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket } from '../services/WebSocketService'; // Überprüfe den Pfad hier\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [task, setTask] = useState(null);\n  useEffect(() => {\n    const userId = 1; // Ersetze dies durch die ID des aktuell angemeldeten Benutzers\n\n    // Verbindung herstellen und Nachrichten verarbeiten\n    const onMessageReceived = data => {\n      console.log('Message received:', data);\n      if (data.type === 'TASK_UPDATE') {\n        setTask(data.task);\n      }\n    };\n    connectWebSocket(userId, onMessageReceived);\n\n    // Aufräumen der Verbindung beim Unmount der Komponente\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: task ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Task ID: \", task.taskId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", task.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", task.deadlineDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Plan Date: \", task.planDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category ID: \", task.categoryId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Completed: \", task.completed ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No task data received.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketComponent, \"HbcssAxLTHWqCRHO839ApGabvjg=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","connectWebSocket","disconnectWebSocket","jsxDEV","_jsxDEV","WebSocketComponent","_s","task","setTask","userId","onMessageReceived","data","console","log","type","children","fileName","_jsxFileName","lineNumber","columnNumber","taskId","text","deadlineDate","planDate","categoryId","completed","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket } from '../services/WebSocketService'; // Überprüfe den Pfad hier\n\nconst WebSocketComponent = () => {\n    const [task, setTask] = useState(null);\n\n    useEffect(() => {\n        const userId = 1; // Ersetze dies durch die ID des aktuell angemeldeten Benutzers\n\n        // Verbindung herstellen und Nachrichten verarbeiten\n        const onMessageReceived = (data) => {\n            console.log('Message received:', data);\n            if (data.type === 'TASK_UPDATE') {\n                setTask(data.task);\n            }\n        };\n\n        connectWebSocket(userId, onMessageReceived);\n\n        // Aufräumen der Verbindung beim Unmount der Komponente\n        return () => {\n            disconnectWebSocket();\n        };\n    }, []);\n\n    return (\n        <div>\n            <h1>WebSocket Test Component</h1>\n            <div>\n                {task ? (\n                    <div>\n                        <h2>Task ID: {task.taskId}</h2>\n                        <p>Text: {task.text}</p>\n                        <p>Deadline: {task.deadlineDate}</p>\n                        <p>Plan Date: {task.planDate}</p>\n                        <p>Category ID: {task.categoryId}</p>\n                        <p>Completed: {task.completed ? 'Yes' : 'No'}</p>\n                    </div>\n                ) : (\n                    <p>No task data received.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WebSocketComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMU,MAAM,GAAG,CAAC,CAAC,CAAC;;IAElB;IACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;MAChCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;MACtC,IAAIA,IAAI,CAACG,IAAI,KAAK,aAAa,EAAE;QAC7BN,OAAO,CAACG,IAAI,CAACJ,IAAI,CAAC;MACtB;IACJ,CAAC;IAEDN,gBAAgB,CAACQ,MAAM,EAAEC,iBAAiB,CAAC;;IAE3C;IACA,OAAO,MAAM;MACTR,mBAAmB,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIE,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCf,OAAA;MAAAW,QAAA,EACKR,IAAI,gBACDH,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,GAAI,WAAS,EAACR,IAAI,CAACa,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/Bf,OAAA;UAAAW,QAAA,GAAG,QAAM,EAACR,IAAI,CAACc,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBf,OAAA;UAAAW,QAAA,GAAG,YAAU,EAACR,IAAI,CAACe,YAAY;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCf,OAAA;UAAAW,QAAA,GAAG,aAAW,EAACR,IAAI,CAACgB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCf,OAAA;UAAAW,QAAA,GAAG,eAAa,EAACR,IAAI,CAACiB,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCf,OAAA;UAAAW,QAAA,GAAG,aAAW,EAACR,IAAI,CAACkB,SAAS,GAAG,KAAK,GAAG,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,gBAENf,OAAA;QAAAW,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CAzCID,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AA2CxB,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}