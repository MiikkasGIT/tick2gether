{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendWebSocketMessage } from '../websocket';\nimport { categorizeTasks, STANDARD_CATEGORIES } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(STANDARD_CATEGORIES);\n  const [selectedCategory, setSelectedCategory] = useState(STANDARD_CATEGORIES[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const customCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon\n          }));\n          setCategories([...STANDARD_CATEGORIES, ...customCategories]);\n          if (customCategories.length > 0) {\n            setSelectedCategory(customCategories[0]);\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories(STANDARD_CATEGORIES); // Fallback to standard categories\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        categoryId,\n        sharedUserIds,\n        ...updatedTaskData\n      } = message;\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          const taskExists = taskIndex !== -1;\n          const isTaskSharedWithUser = sharedUserIds === null || sharedUserIds === void 0 ? void 0 : sharedUserIds.includes(userId);\n          if (taskExists || isTaskSharedWithUser) {\n            const updatedTasks = [...prevTasks];\n            if (taskExists) {\n              updatedTasks[taskIndex] = {\n                ...prevTasks[taskIndex],\n                ...updatedTaskData\n              };\n            } else {\n              updatedTasks.push({\n                taskId,\n                ...updatedTaskData\n              });\n            }\n            return updatedTasks;\n          }\n          return prevTasks;\n        }\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          return [...prevTasks, {\n            categoryId,\n            ...updatedTaskData\n          }];\n        }\n        return prevTasks;\n      });\n      setCategories(prevCategories => {\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          const categoryIndex = prevCategories.findIndex(category => category.categoryId === categoryId);\n          if (categoryIndex !== -1) {\n            prevCategories[categoryIndex] = {\n              ...prevCategories[categoryIndex],\n              ...updatedTaskData\n            };\n          } else {\n            prevCategories.push({\n              categoryId,\n              ...updatedTaskData\n            });\n          }\n          return [...prevCategories];\n        }\n        return prevCategories;\n      });\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n        return uniqueTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    if (!selectedCategory) return;\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task);\n        return updatedTasks.filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = useCallback(async categoryData => {\n    try {\n      const data = await addCategory({\n        ...categoryData,\n        userId\n      });\n      const newCategory = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n        lightIcon: customCategoryLightIcon,\n        color: 'text-gray-400',\n        selectedColor: 'text-white',\n        isSelected: false,\n        showDelete: false,\n        userId: data.userId\n      };\n      setCategories(prevCategories => [...prevCategories, newCategory]);\n      sendWebSocketMessage('/topic/categories', {\n        type: 'CATEGORY_ADD',\n        category: newCategory\n      });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    } finally {\n      setShowAddCategoryPopUp(false);\n    }\n  }, [userId]);\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id] || [];\n  useEffect(() => {\n    console.log('Selected Category:', selectedCategory); // Debugging\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: filteredTasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ntPxGDL9zdoszMWKzTrFunLsFWU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","sendWebSocketMessage","categorizeTasks","STANDARD_CATEGORIES","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Array","isArray","customCategories","map","category","id","categoryId","icon","name","length","console","error","handleWebSocketMessage","message","log","type","taskId","sharedUserIds","updatedTaskData","prevTasks","taskIndex","findIndex","task","taskExists","isTaskSharedWithUser","includes","updatedTasks","push","prevCategories","categoryIndex","fetchIds","taskIds","categoryIds","handleAddNewTask","newTask","formattedTask","addedTask","uniqueTasks","filter","index","self","t","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","handleAddCategory","categoryData","data","newCategory","lightIcon","customCategoryLightIcon","color","selectedColor","isSelected","showDelete","toggleDeleteMode","prevMode","handleEditTask","categorizedTasks","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendWebSocketMessage } from '../websocket';\nimport { categorizeTasks, STANDARD_CATEGORIES } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(STANDARD_CATEGORIES);\n  const [selectedCategory, setSelectedCategory] = useState(STANDARD_CATEGORIES[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const customCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n          }));\n          setCategories([...STANDARD_CATEGORIES, ...customCategories]);\n\n          if (customCategories.length > 0) {\n            setSelectedCategory(customCategories[0]);\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories(STANDARD_CATEGORIES); // Fallback to standard categories\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n\n      const { type, taskId, categoryId, sharedUserIds, ...updatedTaskData } = message;\n\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          const taskExists = taskIndex !== -1;\n          const isTaskSharedWithUser = sharedUserIds?.includes(userId);\n\n          if (taskExists || isTaskSharedWithUser) {\n            const updatedTasks = [...prevTasks];\n            if (taskExists) {\n              updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedTaskData };\n            } else {\n              updatedTasks.push({ taskId, ...updatedTaskData });\n            }\n            return updatedTasks;\n          }\n          return prevTasks;\n        }\n\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          return [...prevTasks, { categoryId, ...updatedTaskData }];\n        }\n\n        return prevTasks;\n      });\n\n      setCategories(prevCategories => {\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          const categoryIndex = prevCategories.findIndex(category => category.categoryId === categoryId);\n          if (categoryIndex !== -1) {\n            prevCategories[categoryIndex] = { ...prevCategories[categoryIndex], ...updatedTaskData };\n          } else {\n            prevCategories.push({ categoryId, ...updatedTaskData });\n          }\n          return [...prevCategories];\n        }\n\n        return prevCategories;\n      });\n    };\n\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n\n      fetchIds();\n\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n        return uniqueTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.id || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks.filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = useCallback(async (categoryData) => {\n    try {\n      const data = await addCategory({ ...categoryData, userId });\n      const newCategory = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n        lightIcon: customCategoryLightIcon,\n        color: 'text-gray-400',\n        selectedColor: 'text-white',\n        isSelected: false,\n        showDelete: false,\n        userId: data.userId,\n      };\n  \n      setCategories(prevCategories => [\n        ...prevCategories,\n        newCategory,\n      ]);\n  \n      sendWebSocketMessage('/topic/categories', { type: 'CATEGORY_ADD', category: newCategory });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    } finally {\n      setShowAddCategoryPopUp(false);\n    }\n  }, [userId]);\n  \n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory?.id] || [];\n\n  useEffect(() => {\n    console.log('Selected Category:', selectedCategory); // Debugging\n  }, [selectedCategory]);\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categoriesFromBackend={categories}\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}