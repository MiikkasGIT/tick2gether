{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { deleteTask } from '../api'; // REST-API für das Löschen\nimport { updateTask } from '../websocket'; // WebSocket-Funktion für das Update\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory\n}) {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  const [localTodos, setLocalTodos] = useState(todos);\n  useEffect(() => {\n    setLocalTodos(todos);\n    console.log('Todos updated:', todos);\n  }, [todos]);\n  const handleCheckboxChange = async id => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = localTodos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7;\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setLocalTodos(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      await updateTask(updatedTask); // WebSocket: Aktualisieren über WebSocket\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n\n  // Weitere Funktionen für Delete, Edit und DateChange bleiben möglicherweise bei REST-APIs, je nach Anforderung.\n\n  const today = startOfToday();\n  const filteredTodos = localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo(todo),\n        isSelected: todo.taskId === selectedTodoId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"isE7RHpnWkp6sOdTU/M3gLTaVVA=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","ToDo","startOfToday","isAfter","deleteTask","updateTask","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","_s","selectedTodoId","setSelectedTodoId","localTodos","setLocalTodos","console","log","handleCheckboxChange","id","updatedTodos","map","todo","taskId","updatedTodo","completed","categoryId","updatedTask","find","error","today","filteredTodos","filter","name","planDate","Date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleDeleteClick","handleEditClick","isSelected","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { deleteTask } from '../api'; // REST-API für das Löschen\nimport { updateTask } from '../websocket'; // WebSocket-Funktion für das Update\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory }) {\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  const [localTodos, setLocalTodos] = useState(todos);\n\n  useEffect(() => {\n    setLocalTodos(todos);\n    console.log('Todos updated:', todos);\n  }, [todos]);\n\n  const handleCheckboxChange = async (id) => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = localTodos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7;\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setLocalTodos(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      await updateTask(updatedTask); // WebSocket: Aktualisieren über WebSocket\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n\n  // Weitere Funktionen für Delete, Edit und DateChange bleiben möglicherweise bei REST-APIs, je nach Anforderung.\n\n  const today = startOfToday();\n\n  const filteredTodos = localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo(todo)}\n            isSelected={todo.taskId === selectedTodoId}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}