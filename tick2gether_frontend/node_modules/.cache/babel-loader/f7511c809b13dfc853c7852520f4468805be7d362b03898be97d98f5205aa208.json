{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\n// Placeholder for initialUsers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUsersPlaceholder = [{\n  id: 1,\n  name: 'User 1'\n}, {\n  id: 2,\n  name: 'User 2'\n}\n// Add more placeholder users as needed\n];\nexport default function ToDoList({\n  todos = [],\n  setTodos,\n  isDeleteMode,\n  onEditTodo,\n  onDateChange,\n  selectedCategory\n}) {\n  const handleCheckboxChange = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const handleDelete = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  const handleTodoClick = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      selected: !todo.selected\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const handleEditClick = todo => {\n    onEditTodo(todo);\n  };\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        [`${purpose}Date`]: date\n      } : todo);\n      await onDateChange(id, date, purpose); // Assume this updates state with new todos\n    } catch (error) {\n      console.error('Error updating date:', error);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n      case 'Logbook':\n        return todo.category === 'Logbook';\n      default:\n        return todo.category === selectedCategory.name;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.id),\n        handleTodoClick: () => handleTodoClick(todo.id),\n        handleDelete: () => handleDelete(todo.id),\n        handleEditClick: () => handleEditClick(todo),\n        isDeleteMode: isDeleteMode,\n        onDateChange: handleDateChange,\n        isTodayCategory: selectedCategory.name === 'Today',\n        initialUsers: initialUsersPlaceholder // Use placeholder until initialUsers is available\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","initialUsersPlaceholder","id","name","ToDoList","todos","setTodos","isDeleteMode","onEditTodo","onDateChange","selectedCategory","handleCheckboxChange","updatedTodos","map","todo","completed","handleDelete","filter","handleTodoClick","selected","handleEditClick","handleDateChange","date","purpose","error","console","today","filteredTodos","planDate","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isTodayCategory","initialUsers","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\n// Placeholder for initialUsers\nconst initialUsersPlaceholder = [\n  { id: 1, name: 'User 1' },\n  { id: 2, name: 'User 2' },\n  // Add more placeholder users as needed\n];\n\nexport default function ToDoList({ todos = [], setTodos, isDeleteMode, onEditTodo, onDateChange, selectedCategory }) {\n  \n  const handleCheckboxChange = (id) => {\n    const updatedTodos = todos.map(todo => \n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const handleTodoClick = (id) => {\n    const updatedTodos = todos.map(todo =>\n      todo.id === id ? { ...todo, selected: !todo.selected } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const handleEditClick = (todo) => {\n    onEditTodo(todo);\n  };\n\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo =>\n        todo.id === id ? { ...todo, [`${purpose}Date`]: date } : todo\n      );\n      await onDateChange(id, date, purpose); // Assume this updates state with new todos\n    } catch (error) {\n      console.error('Error updating date:', error);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return (todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n      case 'Logbook':\n        return todo.category === 'Logbook';\n      default:\n        return todo.category === selectedCategory.name;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n      {filteredTodos.map(todo => (\n        <ToDo\n          key={todo.id}\n          todo={todo}\n          handleCheckboxChange={() => handleCheckboxChange(todo.id)}\n          handleTodoClick={() => handleTodoClick(todo.id)}\n          handleDelete={() => handleDelete(todo.id)}\n          handleEditClick={() => handleEditClick(todo)}\n          isDeleteMode={isDeleteMode}\n          onDateChange={handleDateChange}\n          isTodayCategory={selectedCategory.name === 'Today'}\n          initialUsers={initialUsersPlaceholder} // Use placeholder until initialUsers is available\n        />\n      ))}\n      </div>\n    </fieldset>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}