{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport ToDo from './ToDo';\nimport { fetchTasks } from '../api';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { sendWebSocketMessage, sendUpdateTaskMessage, sendUpdateSharedTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory,\n  handleDeleteTask,\n  userId\n}) {\n  _s();\n  const [localTodos, setLocalTodos] = useState(todos);\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks();\n      console.log('Fetched todos:', data);\n      setLocalTodos(data);\n      setTasks(data); // Ensure the parent component also updates its state\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n  useEffect(() => {\n    fetchTodos();\n  }, [userId, fetchTodos]);\n  const updateTodos = (taskId, updates) => {\n    const updatedTodos = localTodos.map(todo => todo.taskId === taskId ? {\n      ...todo,\n      ...updates\n    } : todo);\n    setLocalTodos(updatedTodos);\n    return updatedTodos.find(todo => todo.taskId === taskId);\n  };\n  const handleCheckboxChange = async taskId => {\n    const updatedTask = updateTodos(taskId, {\n      completed: !localTodos.find(todo => todo.taskId === taskId).completed\n    });\n    if (updatedTask.completed) {\n      updateTodos(taskId, {\n        categoryId: 7\n      }); // Logbook category\n    }\n    try {\n      console.log('Sending WebSocket message to update task:', {\n        ...updatedTask,\n        userId\n      });\n      sendUpdateTaskMessage({\n        ...updatedTask,\n        userId\n      });\n      sendUpdateSharedTaskMessage({\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTask = updateTodos(taskId, {\n      [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n    });\n    try {\n      console.log('Sending WebSocket message to update task date:', {\n        ...updatedTask,\n        userId\n      });\n      sendUpdateTaskMessage({\n        ...updatedTask,\n        userId\n      });\n      sendUpdateSharedTaskMessage({\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n  const handleDeleteClick = async taskId => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendWebSocketMessage(`/app/deleteTask/${taskId}`, {\n        taskId\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = selectedCategory !== null && selectedCategory !== void 0 && selectedCategory.name ? localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : localTodos;\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo ? onEditTodo(todo) : null,\n        isSelected: todo.taskId === selectedTodoId,\n        onDateChange: handleDateChange,\n        isDeleteMode: isDeleteMode,\n        userId: userId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"MgIO9Gf5lIJT+R2ECwfUJ0bbSsc=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","ToDo","fetchTasks","startOfToday","isAfter","sendWebSocketMessage","sendUpdateTaskMessage","sendUpdateSharedTaskMessage","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","handleDeleteTask","userId","_s","localTodos","setLocalTodos","selectedTodoId","setSelectedTodoId","fetchTodos","console","log","data","error","updateTodos","taskId","updates","updatedTodos","map","todo","find","handleCheckboxChange","updatedTask","completed","categoryId","handleDateChange","date","purpose","Date","toISOString","handleDeleteClick","response","message","today","filteredTodos","name","filter","planDate","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleEditClick","isSelected","onDateChange","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport ToDo from './ToDo';\nimport { fetchTasks } from '../api';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { sendWebSocketMessage, sendUpdateTaskMessage, sendUpdateSharedTaskMessage } from '../websocket';\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory, handleDeleteTask, userId }) {\n  const [localTodos, setLocalTodos] = useState(todos);\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks();\n      console.log('Fetched todos:', data);\n      setLocalTodos(data);\n      setTasks(data); // Ensure the parent component also updates its state\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [userId, fetchTodos]);\n\n  const updateTodos = (taskId, updates) => {\n    const updatedTodos = localTodos.map(todo => \n      todo.taskId === taskId ? { ...todo, ...updates } : todo\n    );\n    setLocalTodos(updatedTodos);\n    return updatedTodos.find(todo => todo.taskId === taskId);\n  };\n\n  const handleCheckboxChange = async (taskId) => {\n    const updatedTask = updateTodos(taskId, { completed: !localTodos.find(todo => todo.taskId === taskId).completed });\n\n    if (updatedTask.completed) {\n      updateTodos(taskId, { categoryId: 7 }); // Logbook category\n    }\n\n    try {\n      console.log('Sending WebSocket message to update task:', { ...updatedTask, userId });\n      sendUpdateTaskMessage({ ...updatedTask, userId });\n      sendUpdateSharedTaskMessage({ ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTask = updateTodos(taskId, { [`${purpose}Date`]: date ? new Date(date).toISOString() : null });\n\n    try {\n      console.log('Sending WebSocket message to update task date:', { ...updatedTask, userId });\n      sendUpdateTaskMessage({ ...updatedTask, userId });\n      sendUpdateSharedTaskMessage({ ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n\n  const handleDeleteClick = async (taskId) => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendWebSocketMessage(`/app/deleteTask/${taskId}`, { taskId });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = selectedCategory?.name ? localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : localTodos;\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo ? onEditTodo(todo) : null}\n            isSelected={todo.taskId === selectedTodoId}\n            onDateChange={handleDateChange}\n            isDeleteMode={isDeleteMode}\n            userId={userId}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}