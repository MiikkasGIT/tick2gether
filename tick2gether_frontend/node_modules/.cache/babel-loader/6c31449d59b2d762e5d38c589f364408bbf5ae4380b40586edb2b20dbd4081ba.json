{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTestComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // Beispiel-Benutzer-ID\n  const task = {\n    taskId: 3,\n    text: 'sdds',\n    deadline: null,\n    planDate: null,\n    userId: 1,\n    categoryId: 1,\n    completed: false,\n    type: 'TASK_UPDATE'\n  }; // Beispiel-Task\n\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    connectWebSocket(userId, handleWebSocketMessage);\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const handleSendMessage = () => {\n    const {\n      taskId,\n      ...taskSaveDTO\n    } = task; // Extrahiere taskId und trenne von taskSaveDTO\n    console.log('Sending update task message with taskId:', taskId);\n    sendUpdateTaskMessage(taskId, taskSaveDTO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Update Task Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketTestComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketTestComponent;\nexport default WebSocketTestComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTestComponent\");","map":{"version":3,"names":["React","useState","useEffect","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","jsxDEV","_jsxDEV","WebSocketTestComponent","_s","messages","setMessages","userId","task","taskId","text","deadline","planDate","categoryId","completed","type","handleWebSocketMessage","message","console","log","prevMessages","handleSendMessage","taskSaveDTO","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\n\nconst WebSocketTestComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // Beispiel-Benutzer-ID\n  const task = { taskId: 3, text: 'sdds', deadline: null, planDate: null, userId: 1, categoryId: 1, completed: false, type: 'TASK_UPDATE' }; // Beispiel-Task\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n      setMessages((prevMessages) => [...prevMessages, message]);\n    };\n\n    connectWebSocket(userId, handleWebSocketMessage);\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const handleSendMessage = () => {\n    const { taskId, ...taskSaveDTO } = task; // Extrahiere taskId und trenne von taskSaveDTO\n    console.log('Sending update task message with taskId:', taskId);\n    sendUpdateTaskMessage(taskId, taskSaveDTO);\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Test Component</h2>\n      <button onClick={handleSendMessage}>Send Update Task Message</button>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{JSON.stringify(message)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketTestComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,GAAG,CAAC,CAAC,CAAC;EAClB,MAAMC,IAAI,GAAG;IAAEC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,QAAQ,EAAE,IAAI;IAAEL,MAAM,EAAE,CAAC;IAAEM,UAAU,EAAE,CAAC;IAAEC,SAAS,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAc,CAAC,CAAC,CAAC;;EAE3IlB,SAAS,CAAC,MAAM;IACd,MAAMmB,sBAAsB,GAAIC,OAAO,IAAK;MAC1CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,OAAO,CAAC;MACnDX,WAAW,CAAEc,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEDnB,gBAAgB,CAACS,MAAM,EAAES,sBAAsB,CAAC;IAEhD,OAAO,MAAM;MACXjB,mBAAmB,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACQ,MAAM,CAAC,CAAC;EAEZ,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAM;MAAEZ,MAAM;MAAE,GAAGa;IAAY,CAAC,GAAGd,IAAI,CAAC,CAAC;IACzCU,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEV,MAAM,CAAC;IAC/DT,qBAAqB,CAACS,MAAM,EAAEa,WAAW,CAAC;EAC5C,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCzB,OAAA;MAAQ0B,OAAO,EAAEP,iBAAkB;MAAAE,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrEzB,OAAA;MAAAqB,QAAA,EACGlB,QAAQ,CAACwB,GAAG,CAAC,CAACZ,OAAO,EAAEa,KAAK,kBAC3B5B,OAAA;QAAAqB,QAAA,EAAiBQ,IAAI,CAACC,SAAS,CAACf,OAAO;MAAC,GAA/Ba,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,sBAAsB;AAAA8B,EAAA,GAAtB9B,sBAAsB;AAqC5B,eAAeA,sBAAsB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}