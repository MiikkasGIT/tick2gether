{"ast":null,"code":"export const STANDARD_CATEGORIES = [{\n  id: 1,\n  name: 'All Tasks'\n}, {\n  id: 2,\n  name: 'Today'\n}, {\n  id: 3,\n  name: 'Planned'\n}, {\n  id: 4,\n  name: 'Any Time'\n}, {\n  id: 5,\n  name: 'Work'\n}, {\n  id: 6,\n  name: 'Personal'\n}, {\n  id: 7,\n  name: 'Logbook'\n}];\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  // Initialize categorizedTasks for each category\n  categories.forEach(category => {\n    categorizedTasks[category.categoryId] = [];\n  });\n\n  // Add standard categories\n  STANDARD_CATEGORIES.forEach(category => {\n    categorizedTasks[category.id] = [];\n  });\n\n  // Filter tasks based on category rules\n  tasks.forEach(task => {\n    const {\n      categoryId,\n      completed,\n      planDate\n    } = task;\n\n    // Always add task to its specific category\n    if (!categorizedTasks[categoryId]) {\n      categorizedTasks[categoryId] = [];\n    }\n    categorizedTasks[categoryId].push(task);\n\n    // Add task to standard categories based on rules\n    categorizedTasks[1].push(task); // All Tasks\n\n    if (completed) {\n      categorizedTasks[7].push(task); // Logbook\n    } else {\n      if (categoryId === 2) {\n        categorizedTasks[2].push(task); // Today\n      }\n      if (planDate) {\n        categorizedTasks[3].push(task); // Planned\n      }\n      if (categoryId === 4) {\n        categorizedTasks[4].push(task); // Any Time\n      }\n      if (categoryId === 5) {\n        categorizedTasks[5].push(task); // Work\n      }\n      if (categoryId === 6) {\n        categorizedTasks[6].push(task); // Personal\n      }\n    }\n  });\n  return categorizedTasks;\n};","map":{"version":3,"names":["STANDARD_CATEGORIES","id","name","categorizeTasks","tasks","categories","categorizedTasks","forEach","category","categoryId","task","completed","planDate","push"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/utils/categorizeTasks.jsx"],"sourcesContent":["export const STANDARD_CATEGORIES = [\n  { id: 1, name: 'All Tasks' },\n  { id: 2, name: 'Today' },\n  { id: 3, name: 'Planned' },\n  { id: 4, name: 'Any Time' },\n  { id: 5, name: 'Work' },\n  { id: 6, name: 'Personal' },\n  { id: 7, name: 'Logbook' },\n];\n\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  // Initialize categorizedTasks for each category\n  categories.forEach(category => {\n    categorizedTasks[category.categoryId] = [];\n  });\n\n  // Add standard categories\n  STANDARD_CATEGORIES.forEach(category => {\n    categorizedTasks[category.id] = [];\n  });\n\n  // Filter tasks based on category rules\n  tasks.forEach(task => {\n    const { categoryId, completed, planDate } = task;\n\n    // Always add task to its specific category\n    if (!categorizedTasks[categoryId]) {\n      categorizedTasks[categoryId] = [];\n    }\n    categorizedTasks[categoryId].push(task);\n\n    // Add task to standard categories based on rules\n    categorizedTasks[1].push(task); // All Tasks\n\n    if (completed) {\n      categorizedTasks[7].push(task); // Logbook\n    } else {\n      if (categoryId === 2) {\n        categorizedTasks[2].push(task); // Today\n      }\n      if (planDate) {\n        categorizedTasks[3].push(task); // Planned\n      }\n      if (categoryId === 4) {\n        categorizedTasks[4].push(task); // Any Time\n      }\n      if (categoryId === 5) {\n        categorizedTasks[5].push(task); // Work\n      }\n      if (categoryId === 6) {\n        categorizedTasks[6].push(task); // Personal\n      }\n    }\n  });\n\n  return categorizedTasks;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,CACjC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAY,CAAC,EAC5B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACvB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC3B;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EACpD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;;EAE3B;EACAD,UAAU,CAACE,OAAO,CAACC,QAAQ,IAAI;IAC7BF,gBAAgB,CAACE,QAAQ,CAACC,UAAU,CAAC,GAAG,EAAE;EAC5C,CAAC,CAAC;;EAEF;EACAT,mBAAmB,CAACO,OAAO,CAACC,QAAQ,IAAI;IACtCF,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAG,EAAE;EACpC,CAAC,CAAC;;EAEF;EACAG,KAAK,CAACG,OAAO,CAACG,IAAI,IAAI;IACpB,MAAM;MAAED,UAAU;MAAEE,SAAS;MAAEC;IAAS,CAAC,GAAGF,IAAI;;IAEhD;IACA,IAAI,CAACJ,gBAAgB,CAACG,UAAU,CAAC,EAAE;MACjCH,gBAAgB,CAACG,UAAU,CAAC,GAAG,EAAE;IACnC;IACAH,gBAAgB,CAACG,UAAU,CAAC,CAACI,IAAI,CAACH,IAAI,CAAC;;IAEvC;IACAJ,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEhC,IAAIC,SAAS,EAAE;MACbL,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,MAAM;MACL,IAAID,UAAU,KAAK,CAAC,EAAE;QACpBH,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;MAClC;MACA,IAAIE,QAAQ,EAAE;QACZN,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;MAClC;MACA,IAAID,UAAU,KAAK,CAAC,EAAE;QACpBH,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;MAClC;MACA,IAAID,UAAU,KAAK,CAAC,EAAE;QACpBH,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;MAClC;MACA,IAAID,UAAU,KAAK,CAAC,EAAE;QACpBH,gBAAgB,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;MAClC;IACF;EACF,CAAC,CAAC;EAEF,OAAOJ,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}