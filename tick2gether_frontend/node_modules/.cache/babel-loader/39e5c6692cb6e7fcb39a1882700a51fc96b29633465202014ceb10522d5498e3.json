{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nlet stompClient = null;\nexport function connectWebSocket(userId, messageHandler) {\n  const socket = new SockJS('http://localhost:8080/ws');\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, frame => {\n    console.log('Connected: ' + frame);\n    stompClient.subscribe('/topic/tasks', message => {\n      const parsedMessage = JSON.parse(message.body);\n      messageHandler(parsedMessage);\n    });\n  });\n}\nexport function sendWebSocketMessage(destination, message) {\n  if (stompClient && stompClient.connected) {\n    stompClient.send(destination, {}, JSON.stringify(message));\n  } else {\n    console.error('WebSocket connection is not established.');\n  }\n}\nexport function disconnectWebSocket() {\n  if (stompClient !== null) {\n    stompClient.disconnect();\n  }\n  console.log(\"Disconnected\");\n}","map":{"version":3,"names":["SockJS","Stomp","stompClient","connectWebSocket","userId","messageHandler","socket","over","connect","frame","console","log","subscribe","message","parsedMessage","JSON","parse","body","sendWebSocketMessage","destination","connected","send","stringify","error","disconnectWebSocket","disconnect"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["import SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\nlet stompClient = null;\n\nexport function connectWebSocket(userId, messageHandler) {\n  const socket = new SockJS('http://localhost:8080/ws');\n  stompClient = Stomp.over(socket);\n\n  stompClient.connect({}, frame => {\n    console.log('Connected: ' + frame);\n    stompClient.subscribe('/topic/tasks', message => {\n      const parsedMessage = JSON.parse(message.body);\n      messageHandler(parsedMessage);\n    });\n  });\n}\n\nexport function sendWebSocketMessage(destination, message) {\n  if (stompClient && stompClient.connected) {\n    stompClient.send(destination, {}, JSON.stringify(message));\n  } else {\n    console.error('WebSocket connection is not established.');\n  }\n}\n\nexport function disconnectWebSocket() {\n  if (stompClient !== null) {\n    stompClient.disconnect();\n  }\n  console.log(\"Disconnected\");\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,SAAS;AAE3B,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,cAAc,EAAE;EACvD,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,0BAA0B,CAAC;EACrDE,WAAW,GAAGD,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EAEhCJ,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC,EAAEC,KAAK,IAAI;IAC/BC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,KAAK,CAAC;IAClCP,WAAW,CAACU,SAAS,CAAC,cAAc,EAAEC,OAAO,IAAI;MAC/C,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MAC9CZ,cAAc,CAACS,aAAa,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,oBAAoBA,CAACC,WAAW,EAAEN,OAAO,EAAE;EACzD,IAAIX,WAAW,IAAIA,WAAW,CAACkB,SAAS,EAAE;IACxClB,WAAW,CAACmB,IAAI,CAACF,WAAW,EAAE,CAAC,CAAC,EAAEJ,IAAI,CAACO,SAAS,CAACT,OAAO,CAAC,CAAC;EAC5D,CAAC,MAAM;IACLH,OAAO,CAACa,KAAK,CAAC,0CAA0C,CAAC;EAC3D;AACF;AAEA,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EACpC,IAAItB,WAAW,KAAK,IAAI,EAAE;IACxBA,WAAW,CAACuB,UAAU,CAAC,CAAC;EAC1B;EACAf,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}