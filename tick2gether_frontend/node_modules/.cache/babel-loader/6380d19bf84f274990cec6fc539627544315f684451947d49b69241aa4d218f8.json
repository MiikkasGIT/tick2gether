{"ast":null,"code":"import { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nconst SOCKET_URL = 'http://localhost:8080/ws';\nclass WebSocketService {\n  constructor() {\n    this.stompClient = null;\n  }\n  connect(onMessageReceived) {\n    const socket = new SockJS(SOCKET_URL);\n    this.stompClient = Stomp.over(socket);\n    const token = localStorage.getItem('jwtToken');\n    const headers = token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n    this.stompClient.connect(headers, () => {\n      console.log('Connected to WebSocket');\n      this.stompClient.subscribe('/user/queue/tasks', message => {\n        if (message.body) {\n          console.log('Received message:', message.body);\n          onMessageReceived(JSON.parse(message.body));\n        }\n      });\n    }, error => {\n      console.error('Error connecting to WebSocket:', error);\n      setTimeout(() => this.connect(onMessageReceived), 5000);\n    });\n  }\n  disconnect() {\n    if (this.stompClient) {\n      this.stompClient.disconnect(() => {\n        console.log('Disconnected from WebSocket');\n      });\n    }\n  }\n  sendMessage(destination, message) {\n    if (this.stompClient && this.stompClient.connected) {\n      const token = localStorage.getItem('jwtToken');\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      console.log('Sending message to', destination, message);\n      this.stompClient.send(destination, headers, JSON.stringify(message));\n    }\n  }\n}\nconst webSocketService = new WebSocketService();\nexport const connectWebSocket = onMessageReceived => {\n  webSocketService.connect(onMessageReceived);\n};\nexport const disconnectWebSocket = () => {\n  webSocketService.disconnect();\n};\nexport const sendWebSocketMessage = (destination, message) => {\n  webSocketService.sendMessage(destination, message);\n};\nexport const sendUpdateTaskMessage = taskDTO => {\n  if (taskDTO.completed == null) {\n    taskDTO.completed = false;\n  }\n  sendWebSocketMessage(`/app/updateTask/${taskDTO.taskId}`, taskDTO);\n};","map":{"version":3,"names":["Stomp","SockJS","SOCKET_URL","WebSocketService","constructor","stompClient","connect","onMessageReceived","socket","over","token","localStorage","getItem","headers","Authorization","console","log","subscribe","message","body","JSON","parse","error","setTimeout","disconnect","sendMessage","destination","connected","send","stringify","webSocketService","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","sendUpdateTaskMessage","taskDTO","completed","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["import { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nclass WebSocketService {\n    constructor() {\n        this.stompClient = null;\n    }\n\n    connect(onMessageReceived) {\n        const socket = new SockJS(SOCKET_URL);\n        this.stompClient = Stomp.over(socket);\n\n        const token = localStorage.getItem('jwtToken');\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n        this.stompClient.connect(headers, () => {\n            console.log('Connected to WebSocket');\n\n            this.stompClient.subscribe('/user/queue/tasks', (message) => {\n                if (message.body) {\n                    console.log('Received message:', message.body);\n                    onMessageReceived(JSON.parse(message.body));\n                }\n            });\n        }, (error) => {\n            console.error('Error connecting to WebSocket:', error);\n            setTimeout(() => this.connect(onMessageReceived), 5000);\n        });\n    }\n\n    disconnect() {\n        if (this.stompClient) {\n            this.stompClient.disconnect(() => {\n                console.log('Disconnected from WebSocket');\n            });\n        }\n    }\n\n    sendMessage(destination, message) {\n        if (this.stompClient && this.stompClient.connected) {\n            const token = localStorage.getItem('jwtToken');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            console.log('Sending message to', destination, message);\n            this.stompClient.send(destination, headers, JSON.stringify(message));\n        }\n    }\n}\n\nconst webSocketService = new WebSocketService();\n\nexport const connectWebSocket = (onMessageReceived) => {\n    webSocketService.connect(onMessageReceived);\n};\n\nexport const disconnectWebSocket = () => {\n    webSocketService.disconnect();\n};\n\nexport const sendWebSocketMessage = (destination, message) => {\n    webSocketService.sendMessage(destination, message);\n};\n\nexport const sendUpdateTaskMessage = (taskDTO) => {\n    if (taskDTO.completed == null) {\n        taskDTO.completed = false;\n    }\n    sendWebSocketMessage(`/app/updateTask/${taskDTO.taskId}`, taskDTO);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}