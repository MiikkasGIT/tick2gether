{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCategories = [{\n  id: 1,\n  name: 'All Tasks',\n  icon: PlannedIcon\n}, {\n  id: 2,\n  name: 'Today',\n  icon: PlannedIcon\n}, {\n  id: 3,\n  name: 'Planned',\n  icon: PlannedIcon\n}, {\n  id: 4,\n  name: 'Any Time',\n  icon: PlannedIcon\n}, {\n  id: 5,\n  name: 'Work',\n  icon: PlannedIcon\n}, {\n  id: 6,\n  name: 'Personal',\n  icon: PlannedIcon\n}, {\n  id: 7,\n  name: 'Logbook',\n  icon: PlannedIcon\n}];\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null); // Ref to manage WebSocket connection\n\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        const userId = await fetchUserId(email);\n        setUserId(userId);\n        await fetchTasksData(userId);\n        initializeWebSocket(userId);\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasks();\n  }, [navigate]);\n  useEffect(() => {\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n  const initializeWebSocket = userId => {\n    if (!webSocketRef.current) {\n      connectWebSocket(onWebSocketMessageReceived);\n      webSocketRef.current = true; // Mark the WebSocket connection as initialized\n    }\n  };\n  const fetchTasksData = async userId => {\n    try {\n      console.log('Fetching tasks for userId:', userId);\n      const tasksData = await fetchTasks(userId);\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleAddNewTask = async newTask => {\n    try {\n      newTask.userId = userId;\n      const data = await addTask(newTask);\n      // No longer needed as updated via WebSocket\n      // setTasks((prevTasks) => [...prevTasks, data]);\n      setShowAddTaskPopUp(false);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const data = await updateTask(updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => task.id === data.id ? data : task));\n      setShowEditTaskPopUp(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddNewCategory = async newCategory => {\n    try {\n      const data = await addCategory(newCategory);\n      setCategories(prevCategories => [...prevCategories, data]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleDeleteCategory = async categoryId => {\n    try {\n      await deleteCategory(categoryId);\n      setCategories(prevCategories => prevCategories.filter(cat => cat.id !== categoryId));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const handleCategorySelect = categoryId => {\n    const category = categories.find(cat => cat.id === categoryId);\n    setSelectedCategory(category);\n  };\n  const onWebSocketMessageReceived = message => {\n    const {\n      destination,\n      body\n    } = message;\n    if (destination === '/topic/tasks') {\n      const newTask = JSON.parse(body);\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      categories: categories,\n      onCategorySelect: handleCategorySelect,\n      onAddCategory: () => setShowAddCategoryPopUp(true),\n      onDeleteModeChange: setIsDeleteMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n      selectedCategory: selectedCategory,\n      onAddTask: () => setShowAddTaskPopUp(true),\n      onDeleteMode: isDeleteMode,\n      onDeleteTask: handleDeleteTask,\n      onUpdateTask: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: tasks.filter(task => selectedCategory.id === 1 || task.categoryId === selectedCategory.id),\n      onDeleteMode: isDeleteMode,\n      onEditTask: task => {\n        setCurrentTask(task);\n        setShowEditTaskPopUp(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onUpdateTask: handleUpdateTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      categories: categories,\n      onAddTask: handleAddNewTask,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddNewCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Bjtg1hEKwh/B2UY4eVmPJ3YqV0A=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","PlannedIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","deleteCategory","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","initialCategories","id","name","icon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","fetchUserAndTasks","email","fetchTasksData","initializeWebSocket","error","current","onWebSocketMessageReceived","console","log","tasksData","handleAddNewTask","newTask","data","handleUpdateTask","updatedTask","prevTasks","map","task","handleDeleteTask","taskId","filter","handleAddNewCategory","newCategory","prevCategories","handleDeleteCategory","categoryId","cat","handleCategorySelect","category","find","message","destination","body","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCategorySelect","onAddCategory","onDeleteModeChange","onAddTask","onDeleteMode","onDeleteTask","onUpdateTask","onEditTask","onClose","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport {\n  fetchTasks,\n  addTask,\n  updateTask,\n  deleteTask,\n  fetchUserId,\n  fetchEmail,\n  addCategory,\n  deleteCategory,\n} from '../api';\nimport {\n  connectWebSocket,\n  disconnectWebSocket,\n  sendWebSocketMessage,\n} from '../websocket';\n\nconst initialCategories = [\n  { id: 1, name: 'All Tasks', icon: PlannedIcon },\n  { id: 2, name: 'Today', icon: PlannedIcon },\n  { id: 3, name: 'Planned', icon: PlannedIcon },\n  { id: 4, name: 'Any Time', icon: PlannedIcon },\n  { id: 5, name: 'Work', icon: PlannedIcon },\n  { id: 6, name: 'Personal', icon: PlannedIcon },\n  { id: 7, name: 'Logbook', icon: PlannedIcon },\n];\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null); // Ref to manage WebSocket connection\n\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        const userId = await fetchUserId(email);\n        setUserId(userId);\n        await fetchTasksData(userId);\n        initializeWebSocket(userId);\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n\n    fetchUserAndTasks();\n  }, [navigate]);\n\n  useEffect(() => {\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n\n  const initializeWebSocket = (userId) => {\n    if (!webSocketRef.current) {\n      connectWebSocket(onWebSocketMessageReceived);\n      webSocketRef.current = true; // Mark the WebSocket connection as initialized\n    }\n  };\n\n  const fetchTasksData = async (userId) => {\n    try {\n      console.log('Fetching tasks for userId:', userId);\n      const tasksData = await fetchTasks(userId);\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      newTask.userId = userId;\n      const data = await addTask(newTask);\n      // No longer needed as updated via WebSocket\n      // setTasks((prevTasks) => [...prevTasks, data]);\n      setShowAddTaskPopUp(false);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const data = await updateTask(updatedTask);\n      setTasks((prevTasks) =>\n        prevTasks.map((task) => (task.id === data.id ? data : task))\n      );\n      setShowEditTaskPopUp(false);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddNewCategory = async (newCategory) => {\n    try {\n      const data = await addCategory(newCategory);\n      setCategories((prevCategories) => [...prevCategories, data]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    try {\n      await deleteCategory(categoryId);\n      setCategories((prevCategories) =>\n        prevCategories.filter((cat) => cat.id !== categoryId)\n      );\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const handleCategorySelect = (categoryId) => {\n    const category = categories.find((cat) => cat.id === categoryId);\n    setSelectedCategory(category);\n  };\n\n  const onWebSocketMessageReceived = (message) => {\n    const { destination, body } = message;\n    if (destination === '/topic/tasks') {\n      const newTask = JSON.parse(body);\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Navbar />\n      <Categories\n        categories={categories}\n        onCategorySelect={handleCategorySelect}\n        onAddCategory={() => setShowAddCategoryPopUp(true)}\n        onDeleteModeChange={setIsDeleteMode}\n      />\n      <ToDoActions\n        selectedCategory={selectedCategory}\n        onAddTask={() => setShowAddTaskPopUp(true)}\n        onDeleteMode={isDeleteMode}\n        onDeleteTask={handleDeleteTask}\n        onUpdateTask={handleUpdateTask}\n      />\n      <ToDoList\n        tasks={tasks.filter(\n          (task) =>\n            selectedCategory.id === 1 ||\n            task.categoryId === selectedCategory.id\n        )}\n        onDeleteMode={isDeleteMode}\n        onEditTask={(task) => {\n          setCurrentTask(task);\n          setShowEditTaskPopUp(true);\n        }}\n      />\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onUpdateTask={handleUpdateTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          categories={categories}\n          onAddTask={handleAddNewTask}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddNewCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}