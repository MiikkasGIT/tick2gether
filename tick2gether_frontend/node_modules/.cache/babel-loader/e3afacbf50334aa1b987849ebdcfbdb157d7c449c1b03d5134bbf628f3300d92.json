{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from './websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTaskUpdates = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [taskUpdates, setTaskUpdates] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  useEffect(() => {\n    if (isConnected) {\n      connectWebSocket(onMessageReceived);\n    } else {\n      disconnectWebSocket();\n    }\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [isConnected]);\n  const onMessageReceived = message => {\n    setTaskUpdates(prevUpdates => [...prevUpdates, message]);\n  };\n  const toggleWebSocketConnection = () => {\n    setIsConnected(prevState => !prevState);\n  };\n  const handleTaskUpdate = () => {\n    const taskDTO = {\n      taskId: 1,\n      // Beispiel-Task ID\n      userId: 1,\n      // Beispiel-Benutzer ID\n      text: taskText,\n      deadlineDate: null,\n      planDate: null,\n      completed: false\n    };\n    sendUpdateTaskMessage(taskDTO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Task Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggleConnection\",\n      children: \"WebSocket Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"toggleConnection\",\n      checked: isConnected,\n      onChange: toggleWebSocketConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value),\n      placeholder: \"Update Task Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskUpdate,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plan Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"taskUpdates\",\n        children: taskUpdates.map((update, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.taskId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.deadlineDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.planDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.completed.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketTaskUpdates, \"VAA9Grh35eDq1KvJ/OcLGKjlGYw=\");\n_c = WebSocketTaskUpdates;\nexport default WebSocketTaskUpdates;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTaskUpdates\");","map":{"version":3,"names":["React","useState","useEffect","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","jsxDEV","_jsxDEV","WebSocketTaskUpdates","_s","isConnected","setIsConnected","taskUpdates","setTaskUpdates","taskText","setTaskText","onMessageReceived","message","prevUpdates","toggleWebSocketConnection","prevState","handleTaskUpdate","taskDTO","taskId","userId","text","deadlineDate","planDate","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","checked","onChange","value","e","target","placeholder","onClick","map","update","index","toString","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from './websocket';\n\nconst WebSocketTaskUpdates = () => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [taskUpdates, setTaskUpdates] = useState([]);\n    const [taskText, setTaskText] = useState(\"\");\n\n    useEffect(() => {\n        if (isConnected) {\n            connectWebSocket(onMessageReceived);\n        } else {\n            disconnectWebSocket();\n        }\n\n        return () => {\n            disconnectWebSocket();\n        };\n    }, [isConnected]);\n\n    const onMessageReceived = (message) => {\n        setTaskUpdates(prevUpdates => [...prevUpdates, message]);\n    };\n\n    const toggleWebSocketConnection = () => {\n        setIsConnected(prevState => !prevState);\n    };\n\n    const handleTaskUpdate = () => {\n        const taskDTO = {\n            taskId: 1, // Beispiel-Task ID\n            userId: 1, // Beispiel-Benutzer ID\n            text: taskText,\n            deadlineDate: null,\n            planDate: null,\n            completed: false\n        };\n        sendUpdateTaskMessage(taskDTO);\n    };\n\n    return (\n        <div>\n            <h1>WebSocket Task Updates</h1>\n            <label htmlFor=\"toggleConnection\">WebSocket Connection</label>\n            <input \n                type=\"checkbox\" \n                id=\"toggleConnection\" \n                checked={isConnected}\n                onChange={toggleWebSocketConnection} \n            />\n            <input\n                type=\"text\"\n                value={taskText}\n                onChange={(e) => setTaskText(e.target.value)}\n                placeholder=\"Update Task Text\"\n            />\n            <button onClick={handleTaskUpdate}>Update Task</button>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task ID</th>\n                        <th>User ID</th>\n                        <th>Text</th>\n                        <th>Deadline</th>\n                        <th>Plan Date</th>\n                        <th>Completed</th>\n                    </tr>\n                </thead>\n                <tbody id=\"taskUpdates\">\n                    {taskUpdates.map((update, index) => (\n                        <tr key={index}>\n                            <td>{update.taskId}</td>\n                            <td>{update.userId}</td>\n                            <td>{update.text}</td>\n                            <td>{update.deadlineDate}</td>\n                            <td>{update.planDate}</td>\n                            <td>{update.completed.toString()}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default WebSocketTaskUpdates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}