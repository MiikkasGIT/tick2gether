{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon\n        }));\n        setCategories(mappedCategories);\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  };\n  useEffect(() => {\n    initializeDashboard();\n  }, [navigate]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      if (message.type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const existingTaskIndex = prevTasks.findIndex(task => task.taskId === message.task.taskId);\n          if (existingTaskIndex > -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[existingTaskIndex] = message.task;\n            return updatedTasks;\n          } else {\n            return [...prevTasks, message.task];\n          }\n        });\n      } else if (message.type === 'CATEGORY_UPDATE') {\n        setCategories(prevCategories => {\n          const existingCategoryIndex = prevCategories.findIndex(category => category.id === message.category.id);\n          if (existingCategoryIndex > -1) {\n            const updatedCategories = [...prevCategories];\n            updatedCategories[existingCategoryIndex] = message.category;\n            return updatedCategories;\n          } else {\n            return [...prevCategories, message.category];\n          }\n        });\n      }\n    };\n    if (userId) {\n      connectWebSocket(handleWebSocketMessage);\n    }\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        // Use selectedCategory.id here\n        userId: userId // Ensure userId is set\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendWebSocketMessage(`/app/updateTask/${addedTask.taskId}`, {\n        type: 'TASK_UPDATE',\n        task: addedTask\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        // Ensure userId is included\n        taskId: currentTask.taskId,\n        // Ensure taskId is included\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || currentTask.categoryId // Ensure correct categoryId\n      };\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n      sendWebSocketMessage(`/app/updateTask/${taskToUpdate.taskId}`, {\n        type: 'TASK_UPDATE',\n        task: taskToUpdate\n      });\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"qmn9NAQBS0v5rny9EbcTsnLHOsE=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","error","handleWebSocketMessage","message","type","prevTasks","existingTaskIndex","findIndex","task","taskId","updatedTasks","prevCategories","existingCategoryIndex","updatedCategories","handleAddNewTask","newTask","formattedTask","addedTask","console","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","filter","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","toggleDeleteMode","prevMode","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon\n} from '../icons';\nimport {\n  fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon,\n        }));\n        setCategories(mappedCategories);\n\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  };\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [navigate]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      if (message.type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const existingTaskIndex = prevTasks.findIndex(task => task.taskId === message.task.taskId);\n          if (existingTaskIndex > -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[existingTaskIndex] = message.task;\n            return updatedTasks;\n          } else {\n            return [...prevTasks, message.task];\n          }\n        });\n      } else if (message.type === 'CATEGORY_UPDATE') {\n        setCategories(prevCategories => {\n          const existingCategoryIndex = prevCategories.findIndex(category => category.id === message.category.id);\n          if (existingCategoryIndex > -1) {\n            const updatedCategories = [...prevCategories];\n            updatedCategories[existingCategoryIndex] = message.category;\n            return updatedCategories;\n          } else {\n            return [...prevCategories, message.category];\n          }\n        });\n      }\n    };\n\n    if (userId) {\n      connectWebSocket(handleWebSocketMessage);\n    }\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n        const formattedTask = {\n            ...newTask,\n            categoryId: selectedCategory.id, // Use selectedCategory.id here\n            userId: userId // Ensure userId is set\n        };\n        const addedTask = await addTask(formattedTask, userId);\n        setShowAddTaskPopUp(false);\n        setTasks(prevTasks => [...prevTasks, addedTask]);\n        sendWebSocketMessage(`/app/updateTask/${addedTask.taskId}`, { type: 'TASK_UPDATE', task: addedTask });\n    } catch (error) {\n        console.error('Error adding task:', error);\n    }\n};\n\n  \n  \n  const handleSaveTask = async (updatedTask) => {\n    try {\n        const taskToUpdate = {\n            ...updatedTask,\n            userId: userId, // Ensure userId is included\n            taskId: currentTask.taskId, // Ensure taskId is included\n            categoryId: selectedCategory?.id || currentTask.categoryId, // Ensure correct categoryId\n        };\n        setShowEditTaskPopUp(false);\n        setTasks(prevTasks => prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task)));\n        sendWebSocketMessage(`/app/updateTask/${taskToUpdate.taskId}`, { type: 'TASK_UPDATE', task: taskToUpdate });\n    } catch (error) {\n        console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, { type: 'TASK_DELETE', taskId: id });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, { type: 'CATEGORY_UPDATE', category: newCategoryObject });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categoriesFromBackend={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}