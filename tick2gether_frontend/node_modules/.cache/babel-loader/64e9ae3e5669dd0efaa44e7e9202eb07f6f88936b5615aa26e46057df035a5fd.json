{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx\",\n  _s = $RefreshSig$();\n// src/pages/HelloWebSocket.jsx\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWebsocket = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    connectWebSocket(message => {\n      console.log('Message received from server:', message);\n      try {\n        const parsedMessage = JSON.parse(message);\n        setResponse(parsedMessage);\n      } catch (e) {\n        console.error('Error parsing message:', e);\n        setResponse({\n          error: 'Invalid JSON received from server',\n          rawMessage: message\n        });\n      }\n    });\n    return () => disconnectWebSocket();\n  }, []);\n  const handleSendMessage = () => {\n    const taskDTO = {\n      userId: 1,\n      taskId: 1,\n      text: 'Updated Task Text',\n      deadlineDate: null,\n      planDate: null,\n      categoryId: 1,\n      completed: false\n    };\n    sendUpdateTaskMessage('1', taskDTO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Update Task Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response from server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(response, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(HelloWebsocket, \"UzygO7jZ75H4HW8mRsa6teov5jY=\");\n_c = HelloWebsocket;\nexport default HelloWebsocket;\nvar _c;\n$RefreshReg$(_c, \"HelloWebsocket\");","map":{"version":3,"names":["React","useEffect","useState","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","jsxDEV","_jsxDEV","HelloWebsocket","_s","response","setResponse","message","console","log","parsedMessage","JSON","parse","e","error","rawMessage","handleSendMessage","taskDTO","userId","taskId","text","deadlineDate","planDate","categoryId","completed","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx"],"sourcesContent":["// src/pages/HelloWebSocket.jsx\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\n\nconst HelloWebsocket = () => {\n    const [response, setResponse] = useState(null);\n\n    useEffect(() => {\n        connectWebSocket((message) => {\n            console.log('Message received from server:', message);\n            try {\n                const parsedMessage = JSON.parse(message);\n                setResponse(parsedMessage);\n            } catch (e) {\n                console.error('Error parsing message:', e);\n                setResponse({ error: 'Invalid JSON received from server', rawMessage: message });\n            }\n        });\n\n        return () => disconnectWebSocket();\n    }, []);\n\n    const handleSendMessage = () => {\n        const taskDTO = {\n            userId: 1,\n            taskId: 1,\n            text: 'Updated Task Text',\n            deadlineDate: null,\n            planDate: null,\n            categoryId: 1,\n            completed: false\n        };\n        sendUpdateTaskMessage('1', taskDTO);\n    };\n\n    return (\n        <div>\n            <button onClick={handleSendMessage}>Send Update Task Message</button>\n            {response && (\n                <div>\n                    <h2>Response from server:</h2>\n                    <pre>{JSON.stringify(response, null, 2)}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default HelloWebsocket;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZE,gBAAgB,CAAES,OAAO,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,OAAO,CAAC;MACrD,IAAI;QACA,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QACzCD,WAAW,CAACI,aAAa,CAAC;MAC9B,CAAC,CAAC,OAAOG,CAAC,EAAE;QACRL,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAED,CAAC,CAAC;QAC1CP,WAAW,CAAC;UAAEQ,KAAK,EAAE,mCAAmC;UAAEC,UAAU,EAAER;QAAQ,CAAC,CAAC;MACpF;IACJ,CAAC,CAAC;IAEF,OAAO,MAAMR,mBAAmB,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,mBAAmB;MACzBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;IACf,CAAC;IACDxB,qBAAqB,CAAC,GAAG,EAAEiB,OAAO,CAAC;EACvC,CAAC;EAED,oBACIf,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAQwB,OAAO,EAAEV,iBAAkB;MAAAS,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpEzB,QAAQ,iBACLH,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B5B,OAAA;QAAAuB,QAAA,EAAMd,IAAI,CAACoB,SAAS,CAAC1B,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA1CID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}