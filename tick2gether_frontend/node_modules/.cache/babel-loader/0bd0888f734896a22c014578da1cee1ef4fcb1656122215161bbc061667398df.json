{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\n\n// Tasks\nexport const fetchTasks = userId => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = userId => api.get(`/user/${userId}`).then(res => res.data);\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const loginUser = async credentials => {\n  try {\n    console.log('Attempting to login with credentials:', credentials);\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response);\n    const token = response.headers['authorization'];\n    console.log('Response headers:', response.headers);\n    console.log('Storing token:', token);\n    if (token) {\n      Cookies.set('token', encodeURIComponent(token), {\n        expires: 1\n      });\n    } else {\n      console.error('No token found in response headers');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token);\n  if (token) {\n    const decodedToken = decodeURIComponent(token); // Dekodieren des Tokens\n    const response = await api.get('/user/me', {\n      headers: {\n        Authorization: decodedToken\n      }\n    });\n    console.log('Current user:', response.data);\n    return response.data;\n  } else {\n    console.error('No token found in cookies');\n    throw new Error('No token found');\n  }\n};\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","Cookies","api","create","baseURL","withCredentials","fetchTasks","userId","get","then","res","data","addTask","task","post","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","user","loginUser","credentials","console","log","response","token","headers","set","encodeURIComponent","expires","error","fetchCurrentUser","decodedToken","decodeURIComponent","Authorization","Error","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\n// Tasks\nexport const fetchTasks = (userId) => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = (userId) => api.get(`/user/${userId}`).then(res => res.data);\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\nexport const loginUser = async (credentials) => {\n  try {\n    console.log('Attempting to login with credentials:', credentials);\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response);\n    const token = response.headers['authorization'];\n    console.log('Response headers:', response.headers);\n    console.log('Storing token:', token);\n\n    if (token) {\n      Cookies.set('token', encodeURIComponent(token), { expires: 1 });\n    } else {\n      console.error('No token found in response headers');\n    }\n\n    return response;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token);\n  if (token) {\n    const decodedToken = decodeURIComponent(token); // Dekodieren des Tokens\n    const response = await api.get('/user/me', {\n      headers: {\n        Authorization: decodedToken,\n      },\n    });\n    console.log('Current user:', response.data);\n    return response.data;\n  } else {\n    console.error('No token found in cookies');\n    throw new Error('No token found');\n  }\n};\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}