{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport ToDo from './ToDo';\nimport { fetchTasks } from '../api';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory,\n  handleDeleteTask,\n  userId\n}) {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks();\n      console.log('Fetched todos:', data);\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n  useEffect(() => {\n    fetchTodos();\n  }, [userId, fetchTodos]);\n  const handleCheckboxChange = async taskId => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    if (updatedTask) {\n      console.log('Sending WebSocket message to update task:', {\n        ...updatedTask,\n        userId,\n        type: 'TASK_UPDATE'\n      });\n      sendUpdateTaskMessage({\n        ...updatedTask,\n        userId,\n        type: 'TASK_UPDATE'\n      });\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    if (updatedTask) {\n      console.log('Sending WebSocket message to update task date:', {\n        ...updatedTask,\n        userId,\n        type: 'TASK_UPDATE'\n      });\n      sendUpdateTaskMessage({\n        ...updatedTask,\n        userId,\n        type: 'TASK_UPDATE'\n      });\n    }\n  };\n  const handleDeleteClick = async taskId => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendUpdateTaskMessage({\n        type: 'TASK_DELETE',\n        taskId\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo ? onEditTodo(todo) : null,\n        isSelected: todo.taskId === selectedTodoId,\n        onDateChange: handleDateChange,\n        isDeleteMode: isDeleteMode,\n        userId: userId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"Rl1D4eWxi5ErH40E7/iF1mjT4m0=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","ToDo","fetchTasks","startOfToday","isAfter","sendUpdateTaskMessage","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","handleDeleteTask","userId","_s","selectedTodoId","setSelectedTodoId","fetchTodos","console","log","data","error","handleCheckboxChange","taskId","updatedTodos","map","todo","updatedTodo","completed","categoryId","updatedTask","find","type","handleDateChange","date","purpose","Date","toISOString","handleDeleteClick","response","message","today","filteredTodos","name","filter","planDate","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleEditClick","isSelected","onDateChange","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport ToDo from './ToDo';\nimport { fetchTasks } from '../api';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { sendUpdateTaskMessage } from '../websocket';\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory, handleDeleteTask, userId }) {\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n\n  const fetchTodos = useCallback(async () => {\n    try {\n      console.log(`Fetching todos for user ID: ${userId}`);\n      const data = await fetchTasks();\n      console.log('Fetched todos:', data);\n      setTasks(data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, [userId, setTasks]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [userId, fetchTodos]);\n\n  const handleCheckboxChange = async (taskId) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    if (updatedTask) {\n      console.log('Sending WebSocket message to update task:', { ...updatedTask, userId, type: 'TASK_UPDATE' });\n      sendUpdateTaskMessage({ ...updatedTask, userId, type: 'TASK_UPDATE' });\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    if (updatedTask) {\n      console.log('Sending WebSocket message to update task date:', { ...updatedTask, userId, type: 'TASK_UPDATE' });\n      sendUpdateTaskMessage({ ...updatedTask, userId, type: 'TASK_UPDATE' });\n    }\n  };\n\n  const handleDeleteClick = async (taskId) => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendUpdateTaskMessage({ type: 'TASK_DELETE', taskId });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo ? onEditTodo(todo) : null}\n            isSelected={todo.taskId === selectedTodoId}\n            onDateChange={handleDateChange}\n            isDeleteMode={isDeleteMode}\n            userId={userId}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,YAAY,EAAEC,OAAO,QAAQ,UAAU;AAChD,SAASC,qBAAqB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC,gBAAgB;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/H,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMoB,UAAU,GAAGnB,WAAW,CAAC,YAAY;IACzC,IAAI;MACFoB,OAAO,CAACC,GAAG,CAAC,+BAA+BN,MAAM,EAAE,CAAC;MACpD,MAAMO,IAAI,GAAG,MAAMpB,UAAU,CAAC,CAAC;MAC/BkB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,IAAI,CAAC;MACnCZ,QAAQ,CAACY,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,CAACR,MAAM,EAAEL,QAAQ,CAAC,CAAC;EAEtBZ,SAAS,CAAC,MAAM;IACdqB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,MAAM,EAAEI,UAAU,CAAC,CAAC;EAExB,MAAMK,oBAAoB,GAAG,MAAOC,MAAM,IAAK;IAC7C,MAAMC,YAAY,GAAGjB,KAAK,CAACkB,GAAG,CAACC,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,EAAE;QAC1B,MAAMI,WAAW,GAAG;UAAE,GAAGD,IAAI;UAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;QAAU,CAAC;QAC3D,IAAID,WAAW,CAACC,SAAS,EAAE;UACzBD,WAAW,CAACE,UAAU,GAAG,CAAC,CAAC,CAAC;QAC9B;QACA,OAAOF,WAAW;MACpB;MACA,OAAOD,IAAI;IACb,CAAC,CAAC;IAEFlB,QAAQ,CAACgB,YAAY,CAAC;IAEtB,MAAMM,WAAW,GAAGN,YAAY,CAACO,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACrE,IAAIO,WAAW,EAAE;MACfZ,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAE;QAAE,GAAGW,WAAW;QAAEjB,MAAM;QAAEmB,IAAI,EAAE;MAAc,CAAC,CAAC;MACzG7B,qBAAqB,CAAC;QAAE,GAAG2B,WAAW;QAAEjB,MAAM;QAAEmB,IAAI,EAAE;MAAc,CAAC,CAAC;IACxE;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAOV,MAAM,EAAEW,IAAI,EAAEC,OAAO,KAAK;IACxD,MAAMX,YAAY,GAAGjB,KAAK,CAACkB,GAAG,CAACC,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,EAAE;QAC1B,OAAO;UACL,GAAGG,IAAI;UACP,CAAC,GAAGS,OAAO,MAAM,GAAGD,IAAI,GAAG,IAAIE,IAAI,CAACF,IAAI,CAAC,CAACG,WAAW,CAAC,CAAC,GAAG;QAC5D,CAAC;MACH;MACA,OAAOX,IAAI;IACb,CAAC,CAAC;IAEFlB,QAAQ,CAACgB,YAAY,CAAC;IAEtB,MAAMM,WAAW,GAAGN,YAAY,CAACO,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACrE,IAAIO,WAAW,EAAE;MACfZ,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAE;QAAE,GAAGW,WAAW;QAAEjB,MAAM;QAAEmB,IAAI,EAAE;MAAc,CAAC,CAAC;MAC9G7B,qBAAqB,CAAC;QAAE,GAAG2B,WAAW;QAAEjB,MAAM;QAAEmB,IAAI,EAAE;MAAc,CAAC,CAAC;IACxE;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAG,MAAOf,MAAM,IAAK;IAC1CL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEI,MAAM,CAAC;IAC7C,IAAI;MACF,MAAMX,gBAAgB,CAACW,MAAM,CAAC;MAC9BpB,qBAAqB,CAAC;QAAE6B,IAAI,EAAE,aAAa;QAAET;MAAO,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACkB,QAAQ,GAAGlB,KAAK,CAACkB,QAAQ,CAACnB,IAAI,GAAGC,KAAK,CAACmB,OAAO,CAAC;IAC7F;EACF,CAAC;EAED,MAAMC,KAAK,GAAGxC,YAAY,CAAC,CAAC;EAE5B,MAAMyC,aAAa,GAAG/B,gBAAgB,IAAIA,gBAAgB,CAACgC,IAAI,GAAGpC,KAAK,CAACqC,MAAM,CAAClB,IAAI,IAAI;IACrF,QAAQf,gBAAgB,CAACgC,IAAI;MAC3B,KAAK,SAAS;QACZ,OAAOjB,IAAI,CAACmB,QAAQ,IAAI,CAACnB,IAAI,CAACE,SAAS,IAAI1B,OAAO,CAAC,IAAIkC,IAAI,CAACV,IAAI,CAACmB,QAAQ,CAAC,EAAEJ,KAAK,CAAC;MACpF,KAAK,OAAO;QACV,OAAOf,IAAI,CAACmB,QAAQ,IAAI,CAACnB,IAAI,CAACE,SAAS,IAAI1B,OAAO,CAAC,IAAIkC,IAAI,CAACV,IAAI,CAACmB,QAAQ,CAAC,EAAEJ,KAAK,CAAC,IAAIf,IAAI,CAACG,UAAU,KAAK,CAAC;MAC7G,KAAK,UAAU;MACf,KAAK,MAAM;MACX,KAAK,UAAU;QACb,OAAOH,IAAI,CAACG,UAAU,KAAKlB,gBAAgB,CAACmC,EAAE;MAChD,KAAK,WAAW;QACd,OAAO,CAACpB,IAAI,CAACmB,QAAQ,IAAInB,IAAI,CAACG,UAAU,KAAK,CAAC;MAChD,KAAK,SAAS;QACZ,OAAOH,IAAI,CAACG,UAAU,KAAK,CAAC;MAC9B;QACE,OAAOH,IAAI,CAACG,UAAU,KAAKlB,gBAAgB,CAACmC,EAAE;IAClD;EACF,CAAC,CAAC,GAAGvC,KAAK;EAEV,oBACEF,OAAA;IAAA0C,QAAA,gBACE1C,OAAA;MAAQ2C,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C/C,OAAA;MAAK2C,SAAS,EAAC,WAAW;MAAAD,QAAA,EACvBL,aAAa,CAACjB,GAAG,CAACC,IAAI,iBACrBrB,OAAA,CAACN,IAAI;QAEH2B,IAAI,EAAEA,IAAK;QACXJ,oBAAoB,EAAEA,CAAA,KAAMA,oBAAoB,CAACI,IAAI,CAACH,MAAM,CAAE;QAC9D8B,eAAe,EAAEA,CAAA,KAAMrC,iBAAiB,CAACU,IAAI,CAACH,MAAM,KAAKR,cAAc,GAAG,IAAI,GAAGW,IAAI,CAACH,MAAM,CAAE;QAC9F+B,YAAY,EAAEA,CAAA,KAAMhB,iBAAiB,CAACZ,IAAI,CAACH,MAAM,CAAE;QACnDgC,eAAe,EAAEA,CAAA,KAAM7C,UAAU,GAAGA,UAAU,CAACgB,IAAI,CAAC,GAAG,IAAK;QAC5D8B,UAAU,EAAE9B,IAAI,CAACH,MAAM,KAAKR,cAAe;QAC3C0C,YAAY,EAAExB,gBAAiB;QAC/BxB,YAAY,EAAEA,YAAa;QAC3BI,MAAM,EAAEA;MAAO,GATVa,IAAI,CAACH,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf;AAACtC,EAAA,CA/GuBR,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}