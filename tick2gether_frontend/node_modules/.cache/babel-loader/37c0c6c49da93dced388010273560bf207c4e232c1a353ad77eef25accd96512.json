{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCategories = [{\n  id: 1,\n  name: 'All Tasks',\n  icon: PlannedIcon\n}, {\n  id: 2,\n  name: 'Today',\n  icon: PlannedIcon\n}, {\n  id: 3,\n  name: 'Planned',\n  icon: PlannedIcon\n}, {\n  id: 4,\n  name: 'Any Time',\n  icon: PlannedIcon\n}, {\n  id: 5,\n  name: 'Work',\n  icon: PlannedIcon\n}, {\n  id: 6,\n  name: 'Personal',\n  icon: PlannedIcon\n}, {\n  id: 7,\n  name: 'Logbook',\n  icon: PlannedIcon\n}];\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        const userId = await fetchUserId(email);\n        setUserId(userId);\n        if (userId) {\n          await fetchTasksData();\n          initializeWebSocket(userId);\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasks();\n  }, [navigate]);\n  useEffect(() => {\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n  const initializeWebSocket = userId => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket...');\n      connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived);\n      webSocketRef.current = true;\n    }\n  };\n  const fetchTasksData = async () => {\n    try {\n      console.log('Fetching tasks');\n      const tasksData = await fetchTasks();\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleAddNewTask = async newTask => {\n    try {\n      newTask.userId = userId;\n      await addTask(newTask);\n      setShowAddTaskPopUp(false);\n      sendWebSocketMessage('/topic/tasks', {\n        type: 'TASK_ADD',\n        task: newTask\n      });\n      console.log('Task added successfully');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId\n      };\n      await updateTask(taskToUpdate);\n      setShowEditTaskPopUp(false);\n      sendWebSocketMessage('/topic/tasks', {\n        type: 'TASK_UPDATE',\n        task: taskToUpdate\n      });\n      console.log('Task updated successfully');\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      sendWebSocketMessage('/topic/tasks', {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      console.log('Adding new category:', newCategory);\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: PlannedIcon,\n        userId: data.userId\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage('/topic/categories', {\n        type: 'CATEGORY_ADD',\n        category: newCategoryObject\n      });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleDeleteCategory = async categoryId => {\n    try {\n      console.log(`Deleting category with id: ${categoryId}`);\n      await deleteCategory(categoryId);\n      const updatedCategories = categories.filter(category => category.id !== categoryId);\n      setCategories(updatedCategories);\n      sendWebSocketMessage('/topic/categories', {\n        type: 'CATEGORY_DELETE',\n        categoryId\n      });\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const onTaskMessageReceived = message => {\n    console.log('WebSocket task message received:', message);\n    if (message && typeof message === 'object' && message.type && message.task && typeof message.task === 'object') {\n      const {\n        type,\n        task\n      } = message;\n      const {\n        taskId,\n        userId: taskUserId,\n        text,\n        deadlineDate,\n        planDate,\n        categoryId\n      } = task;\n\n      // Validating the structure of the task\n      if (typeof taskUserId === 'number' && typeof text === 'string' && typeof categoryId === 'number') {\n        if (taskUserId === userId) {\n          if (type === 'TASK_ADD') {\n            setTasks(prevTasks => [...prevTasks, {\n              ...task,\n              taskId: taskId || Date.now()\n            }]); // Adding a temporary taskId if missing\n          } else if (type === 'TASK_UPDATE') {\n            setTasks(prevTasks => prevTasks.map(t => t.taskId === taskId ? task : t));\n          } else if (type === 'TASK_DELETE') {\n            setTasks(prevTasks => prevTasks.filter(t => t.taskId !== taskId));\n          }\n        } else {\n          console.warn('Task userId does not match:', taskUserId, userId);\n        }\n      } else {\n        console.error('Task structure is invalid:', task);\n      }\n    } else {\n      console.error('Invalid task message received:', message);\n    }\n  };\n  const onCategoryMessageReceived = message => {\n    console.log('WebSocket category message received:', message);\n\n    // Validate the structure of the message\n    if (message && typeof message === 'object') {\n      const {\n        type,\n        category,\n        categoryId\n      } = message;\n      if (type === 'CATEGORY_ADD') {\n        setCategories(prevCategories => [...prevCategories, category]);\n      } else if (type === 'CATEGORY_UPDATE') {\n        setCategories(prevCategories => prevCategories.map(c => c.id === category.id ? category : c));\n      } else if (type === 'CATEGORY_DELETE') {\n        setCategories(prevCategories => prevCategories.filter(c => c.id !== categoryId));\n      }\n    } else {\n      console.error('Invalid category message received:', message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask // hinzugefügt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      onClose: () => setShowAddTaskPopUp(false),\n      currentCategoryId: selectedCategory.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && currentTask && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Bjtg1hEKwh/B2UY4eVmPJ3YqV0A=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","PlannedIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","deleteCategory","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","initialCategories","id","name","icon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","fetchUserAndTasks","email","fetchTasksData","initializeWebSocket","error","current","console","log","onTaskMessageReceived","onCategoryMessageReceived","tasksData","handleAddNewTask","newTask","type","task","handleSaveTask","updatedTask","taskToUpdate","taskId","handleDeleteTask","handleAddCategory","newCategory","data","newCategoryObject","categoryId","prevCategories","category","handleDeleteCategory","updatedCategories","filter","toggleDeleteMode","prevMode","handleEditTask","message","taskUserId","text","deadlineDate","planDate","prevTasks","Date","now","map","t","warn","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","currentCategoryId","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\n\nconst initialCategories = [\n  { id: 1, name: 'All Tasks', icon: PlannedIcon },\n  { id: 2, name: 'Today', icon: PlannedIcon },\n  { id: 3, name: 'Planned', icon: PlannedIcon },\n  { id: 4, name: 'Any Time', icon: PlannedIcon },\n  { id: 5, name: 'Work', icon: PlannedIcon },\n  { id: 6, name: 'Personal', icon: PlannedIcon },\n  { id: 7, name: 'Logbook', icon: PlannedIcon },\n];\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserAndTasks = async () => {\n      try {\n        const email = await fetchEmail();\n        const userId = await fetchUserId(email);\n        setUserId(userId);\n        if (userId) {\n          await fetchTasksData();\n          initializeWebSocket(userId);\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n\n    fetchUserAndTasks();\n  }, [navigate]);\n\n  useEffect(() => {\n    return () => {\n      disconnectWebSocket();\n    };\n  }, []);\n\n  const initializeWebSocket = (userId) => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket...');\n      connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived);\n      webSocketRef.current = true;\n    }\n  };\n\n  const fetchTasksData = async () => {\n    try {\n      console.log('Fetching tasks');\n      const tasksData = await fetchTasks();\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      newTask.userId = userId;\n      await addTask(newTask);\n      setShowAddTaskPopUp(false);\n      sendWebSocketMessage('/topic/tasks', { type: 'TASK_ADD', task: newTask });\n      console.log('Task added successfully');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n      };\n      await updateTask(taskToUpdate);\n      setShowEditTaskPopUp(false);\n      sendWebSocketMessage('/topic/tasks', { type: 'TASK_UPDATE', task: taskToUpdate });\n      console.log('Task updated successfully');\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      sendWebSocketMessage('/topic/tasks', { type: 'TASK_DELETE', taskId: id });\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      console.log('Adding new category:', newCategory);\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: PlannedIcon,\n        userId: data.userId,\n      };\n      setCategories((prevCategories) => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage('/topic/categories', { type: 'CATEGORY_ADD', category: newCategoryObject });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    try {\n      console.log(`Deleting category with id: ${categoryId}`);\n      await deleteCategory(categoryId);\n      const updatedCategories = categories.filter((category) => category.id !== categoryId);\n      setCategories(updatedCategories);\n      sendWebSocketMessage('/topic/categories', { type: 'CATEGORY_DELETE', categoryId });\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode((prevMode) => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const onTaskMessageReceived = (message) => {\n    console.log('WebSocket task message received:', message);\n  \n    if (message && typeof message === 'object' && message.type && message.task && typeof message.task === 'object') {\n      const { type, task } = message;\n      const { taskId, userId: taskUserId, text, deadlineDate, planDate, categoryId } = task;\n  \n      // Validating the structure of the task\n      if (typeof taskUserId === 'number' && typeof text === 'string' && typeof categoryId === 'number') {\n        if (taskUserId === userId) {\n          if (type === 'TASK_ADD') {\n            setTasks((prevTasks) => [...prevTasks, { ...task, taskId: taskId || Date.now() }]); // Adding a temporary taskId if missing\n          } else if (type === 'TASK_UPDATE') {\n            setTasks((prevTasks) =>\n              prevTasks.map((t) => (t.taskId === taskId ? task : t))\n            );\n          } else if (type === 'TASK_DELETE') {\n            setTasks((prevTasks) => prevTasks.filter((t) => t.taskId !== taskId));\n          }\n        } else {\n          console.warn('Task userId does not match:', taskUserId, userId);\n        }\n      } else {\n        console.error('Task structure is invalid:', task);\n      }\n    } else {\n      console.error('Invalid task message received:', message);\n    }\n  };\n  const onCategoryMessageReceived = (message) => {\n    console.log('WebSocket category message received:', message);\n\n    // Validate the structure of the message\n    if (message && typeof message === 'object') {\n      const { type, category, categoryId } = message;\n      if (type === 'CATEGORY_ADD') {\n        setCategories((prevCategories) => [...prevCategories, category]);\n      } else if (type === 'CATEGORY_UPDATE') {\n        setCategories((prevCategories) =>\n          prevCategories.map((c) => (c.id === category.id ? category : c))\n        );\n      } else if (type === 'CATEGORY_DELETE') {\n        setCategories((prevCategories) => prevCategories.filter((c) => c.id !== categoryId));\n      }\n    } else {\n      console.error('Invalid category message received:', message);\n    }\n  };\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categories={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask} // hinzugefügt\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          onClose={() => setShowAddTaskPopUp(false)}\n          currentCategoryId={selectedCategory.id}\n        />\n      )}\n      {showEditTaskPopUp && currentTask && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}