{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage } from '../websocket';\nimport { initialCategories, initialCategoriesStyling } from '../components/initialCategories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customCategoryIcon = initialCategoriesStyling['Logbook'].icon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories); // Initialize with initial categories\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const iconMap = {\n    'All Tasks': AllTasksIcon,\n    'Today': TodayIcon,\n    'Planned': PlannedIcon,\n    'Any Time': AnyTimeIcon,\n    'Work': WorkIcon,\n    'Personal': PersonalIcon,\n    'Logbook': BookIcon\n  };\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const [fetchedTasks, fetchedCategories] = await Promise.all([fetchTasks(), fetchCategories(fetchedUserId)]);\n        setTasks(fetchedTasks);\n        const mappedCategories = fetchedCategories.map(category => {\n          var _initialCategoriesSty;\n          return {\n            ...category,\n            id: category.categoryId,\n            icon: ((_initialCategoriesSty = initialCategoriesStyling[category.name]) === null || _initialCategoriesSty === void 0 ? void 0 : _initialCategoriesSty.icon) || customCategoryIcon\n          };\n        });\n        setCategories(prevCategories => [...prevCategories, ...mappedCategories]); // Append fetched categories\n\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        categoryId,\n        userId: msgUserId\n      } = message;\n      if (msgUserId !== userId) {\n        console.log('Message is not for this user, ignoring.');\n        return;\n      }\n      if (type === 'TASK_UPDATE' || type === 'SHARED_TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const existingTaskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (existingTaskIndex > -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[existingTaskIndex] = message;\n            return updatedTasks;\n          } else {\n            return [...prevTasks, message];\n          }\n        });\n      } else if (type === 'CATEGORY_UPDATE') {\n        setCategories(prevCategories => {\n          const existingCategoryIndex = prevCategories.findIndex(category => category.id === categoryId);\n          if (existingCategoryIndex > -1) {\n            const updatedCategories = [...prevCategories];\n            updatedCategories[existingCategoryIndex] = message;\n            return updatedCategories;\n          } else {\n            return [...prevCategories, message];\n          }\n        });\n      }\n    };\n    const handleWebSocketConnection = async () => {\n      if (userId) {\n        console.log('Connecting WebSocket for user ID:', userId);\n        await connectWebSocket(handleWebSocketMessage);\n\n        // Test WebSocket connection\n        sendWebSocketMessage(`/app/testConnection/${userId}`, {\n          type: 'TEST_CONNECTION'\n        });\n        console.log('Test connection message sent.');\n      }\n    };\n    handleWebSocketConnection();\n    return () => {\n      console.log('Disconnecting WebSocket for user ID:', userId);\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      console.log('Task added:', addedTask);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      console.log('Task deleted:', id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      console.log('Category added:', newCategoryObject);\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"JWi7QSY1OLKB4whgo0VTso0y5Lc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","sendUpdateTaskMessage","initialCategories","initialCategoriesStyling","jsxDEV","_jsxDEV","customCategoryIcon","icon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","iconMap","AllTasksIcon","TodayIcon","PlannedIcon","AnyTimeIcon","WorkIcon","PersonalIcon","BookIcon","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Promise","all","mappedCategories","map","category","_initialCategoriesSty","id","categoryId","name","prevCategories","length","error","console","handleWebSocketMessage","message","log","type","taskId","msgUserId","prevTasks","existingTaskIndex","findIndex","task","updatedTasks","existingCategoryIndex","updatedCategories","handleWebSocketConnection","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","filter","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","toggleDeleteMode","prevMode","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport {\n  connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage\n} from '../websocket';\nimport { initialCategories, initialCategoriesStyling } from '../components/initialCategories';\n\nconst customCategoryIcon = initialCategoriesStyling['Logbook'].icon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories); // Initialize with initial categories\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const [fetchedTasks, fetchedCategories] = await Promise.all([\n          fetchTasks(),\n          fetchCategories(fetchedUserId)\n        ]);\n\n        setTasks(fetchedTasks);\n\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: initialCategoriesStyling[category.name]?.icon || customCategoryIcon,\n        }));\n\n        setCategories(prevCategories => [...prevCategories, ...mappedCategories]); // Append fetched categories\n\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n\n      const { type, taskId, categoryId, userId: msgUserId } = message;\n\n      if (msgUserId !== userId) {\n        console.log('Message is not for this user, ignoring.');\n        return;\n      }\n\n      if (type === 'TASK_UPDATE' || type === 'SHARED_TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const existingTaskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (existingTaskIndex > -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[existingTaskIndex] = message;\n            return updatedTasks;\n          } else {\n            return [...prevTasks, message];\n          }\n        });\n      } else if (type === 'CATEGORY_UPDATE') {\n        setCategories(prevCategories => {\n          const existingCategoryIndex = prevCategories.findIndex(category => category.id === categoryId);\n          if (existingCategoryIndex > -1) {\n            const updatedCategories = [...prevCategories];\n            updatedCategories[existingCategoryIndex] = message;\n            return updatedCategories;\n          } else {\n            return [...prevCategories, message];\n          }\n        });\n      }\n    };\n\n    const handleWebSocketConnection = async () => {\n      if (userId) {\n        console.log('Connecting WebSocket for user ID:', userId);\n        await connectWebSocket(handleWebSocketMessage);\n\n        // Test WebSocket connection\n        sendWebSocketMessage(`/app/testConnection/${userId}`, { type: 'TEST_CONNECTION' });\n        console.log('Test connection message sent.');\n      }\n    };\n\n    handleWebSocketConnection();\n\n    return () => {\n      console.log('Disconnecting WebSocket for user ID:', userId);\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      console.log('Task added:', addedTask);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.id || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task)));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      console.log('Task deleted:', id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, { type: 'TASK_DELETE', taskId: id });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      console.log('Category added:', newCategoryObject);\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, { type: 'CATEGORY_UPDATE', category: newCategoryObject });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categoriesFromBackend={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}