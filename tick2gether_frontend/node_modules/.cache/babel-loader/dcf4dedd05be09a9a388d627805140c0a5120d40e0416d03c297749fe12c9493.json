{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWebSocket = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [userId] = useState(1); // Setze deine User-ID hier fest\n\n  const handleWebSocketMessage = useCallback(message => {\n    console.log('Received WebSocket message:', message);\n    if (message.type === 'TASK_UPDATE') {\n      console.log('Handling TASK_UPDATE message:', message);\n      setTasks(prevTasks => {\n        const existingTaskIndex = prevTasks.findIndex(task => task.taskId === message.task.taskId);\n        if (existingTaskIndex > -1) {\n          const updatedTasks = [...prevTasks];\n          updatedTasks[existingTaskIndex] = message.task;\n          console.log('Updated tasks:', updatedTasks);\n          return updatedTasks;\n        } else {\n          console.log('Adding new task to tasks:', message.task);\n          return [...prevTasks, message.task];\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log('Connecting WebSocket for user ID:', userId);\n    connectWebSocket(handleWebSocketMessage);\n    return () => {\n      console.log('Disconnecting WebSocket for user ID:', userId);\n      disconnectWebSocket();\n    };\n  }, [handleWebSocketMessage, userId]);\n  const handleCheckboxChange = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.taskId === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n    const updatedTask = tasks.find(task => task.taskId === taskId);\n    if (updatedTask) {\n      console.log('Sending WebSocket message to update task:', {\n        ...updatedTask,\n        userId\n      });\n      sendUpdateTaskMessage({\n        ...updatedTask,\n        userId\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Task Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => handleCheckboxChange(task.taskId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), task.text]\n      }, task.taskId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(HelloWebSocket, \"NQJ6bUixw4LZ4ngQbxVE1fuiClA=\");\n_c = HelloWebSocket;\nexport default HelloWebSocket;\nvar _c;\n$RefreshReg$(_c, \"HelloWebSocket\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","jsxDEV","_jsxDEV","HelloWebSocket","_s","tasks","setTasks","userId","handleWebSocketMessage","message","console","log","type","prevTasks","existingTaskIndex","findIndex","task","taskId","updatedTasks","handleCheckboxChange","map","completed","updatedTask","find","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","text","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\n\nconst HelloWebSocket = () => {\n    const [tasks, setTasks] = useState([]);\n    const [userId] = useState(1); // Setze deine User-ID hier fest\n\n    const handleWebSocketMessage = useCallback((message) => {\n        console.log('Received WebSocket message:', message);\n        if (message.type === 'TASK_UPDATE') {\n            console.log('Handling TASK_UPDATE message:', message);\n            setTasks((prevTasks) => {\n                const existingTaskIndex = prevTasks.findIndex((task) => task.taskId === message.task.taskId);\n                if (existingTaskIndex > -1) {\n                    const updatedTasks = [...prevTasks];\n                    updatedTasks[existingTaskIndex] = message.task;\n                    console.log('Updated tasks:', updatedTasks);\n                    return updatedTasks;\n                } else {\n                    console.log('Adding new task to tasks:', message.task);\n                    return [...prevTasks, message.task];\n                }\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log('Connecting WebSocket for user ID:', userId);\n        connectWebSocket(handleWebSocketMessage);\n\n        return () => {\n            console.log('Disconnecting WebSocket for user ID:', userId);\n            disconnectWebSocket();\n        };\n    }, [handleWebSocketMessage, userId]);\n\n    const handleCheckboxChange = (taskId) => {\n        setTasks((prevTasks) =>\n            prevTasks.map((task) =>\n                task.taskId === taskId ? { ...task, completed: !task.completed } : task\n            )\n        );\n\n        const updatedTask = tasks.find((task) => task.taskId === taskId);\n        if (updatedTask) {\n            console.log('Sending WebSocket message to update task:', { ...updatedTask, userId });\n            sendUpdateTaskMessage({ ...updatedTask, userId });\n        }\n    };\n\n    return (\n        <div>\n            <h1>WebSocket Task Updates</h1>\n            <ul>\n                {tasks.map((task) => (\n                    <li key={task.taskId}>\n                        <input\n                            type=\"checkbox\"\n                            checked={task.completed}\n                            onChange={() => handleCheckboxChange(task.taskId)}\n                        />\n                        {task.text}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default HelloWebSocket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}