{"ast":null,"code":"export const STANDARD_CATEGORIES = [{\n  id: 1,\n  name: 'All Tasks'\n}, {\n  id: 2,\n  name: 'Today'\n}, {\n  id: 3,\n  name: 'Planned'\n}, {\n  id: 4,\n  name: 'Any Time'\n}, {\n  id: 5,\n  name: 'Work'\n}, {\n  id: 6,\n  name: 'Personal'\n}, {\n  id: 7,\n  name: 'Logbook'\n}];\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n  categories.forEach(category => {\n    switch (category.id) {\n      case 1:\n        // All Tasks\n        categorizedTasks[category.id] = tasks;\n        break;\n      case 2:\n        // Today\n        categorizedTasks[category.id] = [];\n        break;\n      case 3:\n        // Planned\n        categorizedTasks[category.id] = tasks.filter(task => task.planDate);\n        break;\n      case 4:\n        // Any Time (just a folder, no tasks)\n        categorizedTasks[category.id] = [];\n        break;\n      case 5:\n        // Work\n        categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n        break;\n      case 6:\n        // Personal\n        categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n        break;\n      case 7:\n        // Logbook\n        categorizedTasks[category.id] = tasks.filter(task => task.completed);\n        break;\n      default:\n        // Handle any unknown categories if necessary\n        categorizedTasks[category.id] = [];\n        break;\n    }\n  });\n  return categorizedTasks;\n};","map":{"version":3,"names":["STANDARD_CATEGORIES","id","name","categorizeTasks","tasks","categories","categorizedTasks","forEach","category","filter","task","planDate","categoryId","completed"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/utils/categorizeTasks.jsx"],"sourcesContent":["export const STANDARD_CATEGORIES = [\n  { id: 1, name: 'All Tasks' },\n  { id: 2, name: 'Today' },\n  { id: 3, name: 'Planned' },\n  { id: 4, name: 'Any Time' },\n  { id: 5, name: 'Work' },\n  { id: 6, name: 'Personal' },\n  { id: 7, name: 'Logbook' },\n];\n\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  categories.forEach(category => {\n    switch (category.id) {\n      case 1:\n        // All Tasks\n        categorizedTasks[category.id] = tasks;\n        break;\n      case 2:\n        // Today\n        categorizedTasks[category.id] = [];\n        break;\n      case 3:\n        // Planned\n        categorizedTasks[category.id] = tasks.filter(task => task.planDate);\n        break;\n      case 4:\n        // Any Time (just a folder, no tasks)\n        categorizedTasks[category.id] = [];\n        break;\n      case 5:\n        // Work\n        categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n        break;\n      case 6:\n        // Personal\n        categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n        break;\n      case 7:\n        // Logbook\n        categorizedTasks[category.id] = tasks.filter(task => task.completed);\n        break;\n      default:\n        // Handle any unknown categories if necessary\n        categorizedTasks[category.id] = [];\n        break;\n    }\n  });\n\n  return categorizedTasks;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,CACjC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAY,CAAC,EAC5B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACvB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC3B;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EACpD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAE3BD,UAAU,CAACE,OAAO,CAACC,QAAQ,IAAI;IAC7B,QAAQA,QAAQ,CAACP,EAAE;MACjB,KAAK,CAAC;QACJ;QACAK,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK;QACrC;MACF,KAAK,CAAC;QACJ;QACAE,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAG,EAAE;QAClC;MACF,KAAK,CAAC;QACJ;QACAK,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;QACnE;MACF,KAAK,CAAC;QACJ;QACAL,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAG,EAAE;QAClC;MACF,KAAK,CAAC;QACJ;QACAK,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,UAAU,KAAKJ,QAAQ,CAACP,EAAE,CAAC;QACrF;MACF,KAAK,CAAC;QACJ;QACAK,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,UAAU,KAAKJ,QAAQ,CAACP,EAAE,CAAC;QACrF;MACF,KAAK,CAAC;QACJ;QACAK,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACG,SAAS,CAAC;QACpE;MACF;QACE;QACAP,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAG,EAAE;QAClC;IACJ;EACF,CAAC,CAAC;EAEF,OAAOK,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}