{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTaskUpdates = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [taskUpdates, setTaskUpdates] = useState([]);\n  useEffect(() => {\n    if (isConnected) {\n      connectWebSocket(onMessageReceived);\n    } else {\n      disconnectWebSocket();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [isConnected]);\n  const onMessageReceived = message => {\n    setTaskUpdates(prevUpdates => [...prevUpdates, message]);\n  };\n  const toggleWebSocketConnection = () => {\n    setIsConnected(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Task Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggleConnection\",\n      children: \"WebSocket Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"toggleConnection\",\n      checked: isConnected,\n      onChange: toggleWebSocketConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plan Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"taskUpdates\",\n        children: taskUpdates.map((update, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.taskId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.deadlineDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.planDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: update.completed.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketTaskUpdates, \"hcdNV5kT2YwvRWu/l6PHNebL4UQ=\");\n_c = WebSocketTaskUpdates;\nexport default WebSocketTaskUpdates;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTaskUpdates\");","map":{"version":3,"names":["React","useState","useEffect","connectWebSocket","disconnectWebSocket","jsxDEV","_jsxDEV","WebSocketTaskUpdates","_s","isConnected","setIsConnected","taskUpdates","setTaskUpdates","onMessageReceived","message","prevUpdates","toggleWebSocketConnection","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","checked","onChange","map","update","index","taskId","userId","text","deadlineDate","planDate","completed","toString","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\n\nconst WebSocketTaskUpdates = () => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [taskUpdates, setTaskUpdates] = useState([]);\n\n    useEffect(() => {\n        if (isConnected) {\n            connectWebSocket(onMessageReceived);\n        } else {\n            disconnectWebSocket();\n        }\n\n        // Cleanup on unmount\n        return () => {\n            disconnectWebSocket();\n        };\n    }, [isConnected]);\n\n    const onMessageReceived = (message) => {\n        setTaskUpdates(prevUpdates => [...prevUpdates, message]);\n    };\n\n    const toggleWebSocketConnection = () => {\n        setIsConnected(prevState => !prevState);\n    };\n\n    return (\n        <div>\n            <h1>WebSocket Task Updates</h1>\n            <label htmlFor=\"toggleConnection\">WebSocket Connection</label>\n            <input \n                type=\"checkbox\" \n                id=\"toggleConnection\" \n                checked={isConnected}\n                onChange={toggleWebSocketConnection} \n            />\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task ID</th>\n                        <th>User ID</th>\n                        <th>Text</th>\n                        <th>Deadline</th>\n                        <th>Plan Date</th>\n                        <th>Completed</th>\n                    </tr>\n                </thead>\n                <tbody id=\"taskUpdates\">\n                    {taskUpdates.map((update, index) => (\n                        <tr key={index}>\n                            <td>{update.taskId}</td>\n                            <td>{update.userId}</td>\n                            <td>{update.text}</td>\n                            <td>{update.deadlineDate}</td>\n                            <td>{update.planDate}</td>\n                            <td>{update.completed.toString()}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default WebSocketTaskUpdates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}