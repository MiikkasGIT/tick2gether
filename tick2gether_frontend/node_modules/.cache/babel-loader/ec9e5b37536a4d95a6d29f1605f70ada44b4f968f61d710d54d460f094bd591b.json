{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = ({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory,\n  handleDeleteTask,\n  userId\n}) => {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  useEffect(() => {\n    const handleWebSocketMessage = (type, message) => {\n      console.log(`Received WebSocket message of type ${type}:`, message);\n      if (type === 'task') {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.taskId === message.taskId ? message : task);\n          return [...updatedTasks, ...prevTasks.filter(task => task.taskId !== message.taskId)];\n        });\n      }\n    };\n    const taskIds = todos.map(todo => todo.taskId);\n    connectWebSocket(handleWebSocketMessage, userId, taskIds);\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [setTasks, userId, todos]);\n  const handleCheckboxChange = async taskId => {\n    console.log('Checkbox changed for ID:', taskId);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task:', updatedTask);\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, updatedTask);\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n  const handleDeleteClick = async taskId => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendWebSocketMessage(`/app/deleteTask/${taskId}`, {\n        taskId\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${taskId}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task date:', updatedTask);\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, updatedTask);\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo ? onEditTodo(todo) : null,\n        isSelected: todo.taskId === selectedTodoId,\n        onDateChange: handleDateChange,\n        isDeleteMode: isDeleteMode,\n        userId: userId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"y7hXGgDEL6mLLQHq94VAZqd74Dw=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","ToDo","startOfToday","isAfter","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","handleDeleteTask","userId","_s","selectedTodoId","setSelectedTodoId","handleWebSocketMessage","type","message","console","log","prevTasks","updatedTasks","map","task","taskId","filter","taskIds","todo","handleCheckboxChange","updatedTodos","updatedTodo","completed","categoryId","updatedTask","find","error","handleDeleteClick","response","data","handleDateChange","date","purpose","Date","toISOString","today","filteredTodos","name","planDate","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleEditClick","isSelected","onDateChange","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\n\nconst ToDoList = ({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory, handleDeleteTask, userId }) => {\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (type, message) => {\n      console.log(`Received WebSocket message of type ${type}:`, message);\n      if (type === 'task') {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task =>\n            task.taskId === message.taskId ? message : task\n          );\n          return [...updatedTasks, ...prevTasks.filter(task => task.taskId !== message.taskId)];\n        });\n      }\n    };\n\n    const taskIds = todos.map(todo => todo.taskId);\n    connectWebSocket(handleWebSocketMessage, userId, taskIds);\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [setTasks, userId, todos]);\n\n  const handleCheckboxChange = async (taskId) => {\n    console.log('Checkbox changed for ID:', taskId);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task:', updatedTask);\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, updatedTask);\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n\n  const handleDeleteClick = async (taskId) => {\n    console.log('Deleting task with ID:', taskId);\n    try {\n      await handleDeleteTask(taskId);\n      sendWebSocketMessage(`/app/deleteTask/${taskId}`, { taskId });\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${taskId}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task date:', updatedTask);\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, updatedTask);\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = selectedCategory && selectedCategory.name ? todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  }) : todos;\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo ? onEditTodo(todo) : null}\n            isSelected={todo.taskId === selectedTodoId}\n            onDateChange={handleDateChange}\n            isDeleteMode={isDeleteMode}\n            userId={userId}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}