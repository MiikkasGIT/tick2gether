{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTodos,\n  isDeleteMode,\n  onEditTodo,\n  onDateChange,\n  selectedCategory\n}) {\n  const handleCheckboxChange = id => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const handleDelete = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  const handleTodoClick = (todo, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTodo(todo);\n    } else {\n      setTodos(todos.map(t => t.id === todo.id ? {\n        ...t,\n        selected: !t.selected\n      } : {\n        ...t,\n        selected: false\n      }));\n    }\n  };\n  const handleEditClick = todo => {\n    onEditTodo(todo);\n  };\n  const handleDateChange = (id, date, purpose) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        if (purpose === 'plan') {\n          return {\n            ...todo,\n            planDate: date\n          };\n        } else if (purpose === 'deadline') {\n          return {\n            ...todo,\n            hasCalendar: !!date,\n            deadlineDate: date\n          };\n        }\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const today = startOfToday();\n  const filteredTodos = todos.filter(todo => {\n    if (selectedCategory.name === 'Planned') {\n      return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n    }\n    if (selectedCategory.name === 'Today' || selectedCategory.name === 'Personal' || selectedCategory.name === 'Work' || selectedCategory.name === 'Any Time') {\n      return todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today));\n    }\n    if (selectedCategory.name === 'All Tasks') {\n      return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n    }\n    if (selectedCategory.name === 'Logbook') {\n      return todo.category === 'Logbook';\n    }\n    return todo.category === selectedCategory.name;\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: handleCheckboxChange,\n        handleTodoClick: handleTodoClick,\n        handleDelete: handleDelete,\n        handleEditClick: handleEditClick,\n        isDeleteMode: isDeleteMode,\n        onDateChange: handleDateChange,\n        isTodayCategory: selectedCategory.name === 'Today'\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","ToDoList","todos","setTodos","isDeleteMode","onEditTodo","onDateChange","selectedCategory","handleCheckboxChange","id","updatedTodos","map","todo","completed","handleDelete","filter","handleTodoClick","e","target","tagName","t","selected","handleEditClick","handleDateChange","date","purpose","planDate","hasCalendar","deadlineDate","today","filteredTodos","name","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\nexport default function ToDoList({ todos = [], setTodos, isDeleteMode, onEditTodo, onDateChange, selectedCategory }) {\n  const handleCheckboxChange = (id) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const handleTodoClick = (todo, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTodo(todo);\n    } else {\n      setTodos(todos.map(t => \n        t.id === todo.id ? { ...t, selected: !t.selected } : { ...t, selected: false }\n      ));\n    }\n  };\n\n  const handleEditClick = (todo) => {\n    onEditTodo(todo);\n  };\n\n  const handleDateChange = (id, date, purpose) => {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        if (purpose === 'plan') {\n          return { ...todo, planDate: date };\n        } else if (purpose === 'deadline') {\n          return { ...todo, hasCalendar: !!date, deadlineDate: date };\n        }\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = todos.filter(todo => {\n    if (selectedCategory.name === 'Planned') {\n      return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n    }\n    if (selectedCategory.name === 'Today' || selectedCategory.name === 'Personal' || selectedCategory.name === 'Work' || selectedCategory.name === 'Any Time') {\n      return (todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)));\n    }\n    if (selectedCategory.name === 'All Tasks') {\n      return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n    }\n    if (selectedCategory.name === 'Logbook') {\n      return todo.category === 'Logbook';\n    }\n    return todo.category === selectedCategory.name;\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.id}\n            todo={todo}\n            handleCheckboxChange={handleCheckboxChange}\n            handleTodoClick={handleTodoClick}\n            handleDelete={handleDelete}\n            handleEditClick={handleEditClick}\n            isDeleteMode={isDeleteMode}\n            onDateChange={handleDateChange}\n            isTodayCategory={selectedCategory.name === 'Today'}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}