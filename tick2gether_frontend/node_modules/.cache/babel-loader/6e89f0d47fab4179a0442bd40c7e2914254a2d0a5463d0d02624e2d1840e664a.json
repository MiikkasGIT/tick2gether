{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport WebSocketService from '../websocket'; // Import WebSocketService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n  const webSocketService = useRef(new WebSocketService('YOUR_WEBSOCKET_URL'));\n  const initializeWebSocket = useCallback(userId => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        webSocketService.current.connect(userId, onTaskMessageReceived, onCategoryMessageReceived);\n        webSocketRef.current = true; // Mark WebSocket as initialized\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n          initializeWebSocket(fetchedUserId);\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n    return () => {\n      if (webSocketRef.current) {\n        console.log('Disconnecting WebSocket...');\n        webSocketService.current.disconnect();\n        webSocketRef.current = null;\n        console.log('WebSocket disconnected and reference cleared.');\n      } else {\n        console.log('WebSocket reference not set, nothing to disconnect.');\n      }\n    };\n  }, [initializeWebSocket, navigate]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId)\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: updatedTask.categoryId ? Number(updatedTask.categoryId) : currentTask.categoryId\n      };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === updated.taskId ? updated : task));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id, userId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: iconMap[data.name] || customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleToggleDeleteMode = () => {\n    setIsDeleteMode(prevState => !prevState);\n  };\n  const onTaskMessageReceived = task => {\n    console.log('Task update received:', task);\n    setTasks(prevTasks => {\n      const updatedTasks = prevTasks.filter(t => t.taskId !== task.taskId);\n      return [...updatedTasks, task];\n    });\n  };\n  const onCategoryMessageReceived = category => {\n    console.log('Category update received:', category);\n    setCategories(prevCategories => {\n      const updatedCategories = prevCategories.filter(c => c.id !== category.id);\n      return [...updatedCategories, category];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddTaskPopUp(true),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleDeleteMode,\n        children: isDeleteMode ? 'Cancel Delete' : 'Enable Delete Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddCategoryPopUp(true),\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Categories, {\n        categories: categories,\n        onSelectCategory: setSelectedCategory,\n        selectedCategory: selectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        tasks: tasks,\n        isDeleteMode: isDeleteMode,\n        onEditTask: task => {\n          setCurrentTask(task);\n          setShowEditTaskPopUp(true);\n        },\n        onDeleteTask: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n        onSave: handleAddNewTask,\n        onCancel: () => setShowAddTaskPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n        task: currentTask,\n        onSave: handleSaveTask,\n        onCancel: () => setShowEditTaskPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n        onSave: handleAddCategory,\n        onCancel: () => setShowAddCategoryPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"QQL8ZMzniMJEFWJGiwEnx6wS6NU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","WebSocketService","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","webSocketService","initializeWebSocket","current","console","log","connect","onTaskMessageReceived","onCategoryMessageReceived","error","fetchUserAndTasksAndCategories","email","fetchedUserId","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","disconnect","handleAddNewTask","newTask","formattedTask","Number","addedTask","prevTasks","handleSaveTask","updatedTask","taskToUpdate","taskId","updated","task","handleDeleteTask","filter","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","prevCategories","handleToggleDeleteMode","prevState","updatedTasks","t","updatedCategories","c","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectCategory","onEditTask","onDeleteTask","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport WebSocketService from '../websocket'; // Import WebSocketService\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  const webSocketService = useRef(new WebSocketService('YOUR_WEBSOCKET_URL'));\n\n  const initializeWebSocket = useCallback((userId) => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        webSocketService.current.connect(userId, onTaskMessageReceived, onCategoryMessageReceived);\n        webSocketRef.current = true; // Mark WebSocket as initialized\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n          initializeWebSocket(fetchedUserId);\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n\n    return () => {\n      if (webSocketRef.current) {\n        console.log('Disconnecting WebSocket...');\n        webSocketService.current.disconnect();\n        webSocketRef.current = null;\n        console.log('WebSocket disconnected and reference cleared.');\n      } else {\n        console.log('WebSocket reference not set, nothing to disconnect.');\n      }\n    };\n  }, [initializeWebSocket, navigate]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId),\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: updatedTask.categoryId ? Number(updatedTask.categoryId) : currentTask.categoryId,\n      };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => (task.taskId === updated.taskId ? updated : task)));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id, userId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: iconMap[data.name] || customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleToggleDeleteMode = () => {\n    setIsDeleteMode(prevState => !prevState);\n  };\n\n  const onTaskMessageReceived = (task) => {\n    console.log('Task update received:', task);\n    setTasks(prevTasks => {\n      const updatedTasks = prevTasks.filter(t => t.taskId !== task.taskId);\n      return [...updatedTasks, task];\n    });\n  };\n\n  const onCategoryMessageReceived = (category) => {\n    console.log('Category update received:', category);\n    setCategories(prevCategories => {\n      const updatedCategories = prevCategories.filter(c => c.id !== category.id);\n      return [...updatedCategories, category];\n    });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div>\n        <button onClick={() => setShowAddTaskPopUp(true)}>Add Task</button>\n        <button onClick={handleToggleDeleteMode}>\n          {isDeleteMode ? 'Cancel Delete' : 'Enable Delete Mode'}\n        </button>\n        <button onClick={() => setShowAddCategoryPopUp(true)}>Add Category</button>\n        <Categories\n          categories={categories}\n          onSelectCategory={setSelectedCategory}\n          selectedCategory={selectedCategory}\n        />\n        <ToDoList\n          tasks={tasks}\n          isDeleteMode={isDeleteMode}\n          onEditTask={task => {\n            setCurrentTask(task);\n            setShowEditTaskPopUp(true);\n          }}\n          onDeleteTask={handleDeleteTask}\n        />\n        {showAddTaskPopUp && (\n          <AddTaskPopUp\n            onSave={handleAddNewTask}\n            onCancel={() => setShowAddTaskPopUp(false)}\n          />\n        )}\n        {showEditTaskPopUp && (\n          <EditTaskPopUp\n            task={currentTask}\n            onSave={handleSaveTask}\n            onCancel={() => setShowEditTaskPopUp(false)}\n          />\n        )}\n        {showAddCategoryPopUp && (\n          <AddCategoryPopUp\n            onSave={handleAddCategory}\n            onCancel={() => setShowAddCategoryPopUp(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}