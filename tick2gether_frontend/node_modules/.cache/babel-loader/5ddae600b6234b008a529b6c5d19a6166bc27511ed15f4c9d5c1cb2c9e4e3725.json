{"ast":null,"code":"export const STANDARD_CATEGORIES = [{\n  id: 1,\n  name: 'All Tasks'\n}, {\n  id: 2,\n  name: 'Today'\n}, {\n  id: 3,\n  name: 'Planned'\n}, {\n  id: 4,\n  name: 'Any Time'\n}, {\n  id: 5,\n  name: 'Work'\n}, {\n  id: 6,\n  name: 'Personal'\n}, {\n  id: 7,\n  name: 'Logbook'\n}];\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n  categories.forEach(category => {\n    categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n  });\n\n  // Handle special categories\n  categorizedTasks[1] = tasks; // All Tasks\n  categorizedTasks[2] = tasks.filter(task => task.planDate === new Date().toISOString().split('T')[0]); // Today\n  categorizedTasks[3] = tasks.filter(task => task.planDate); // Planned\n  categorizedTasks[4] = tasks.filter(task => !task.planDate); // Any Time\n  categorizedTasks[7] = tasks.filter(task => task.completed); // Logbook\n\n  return categorizedTasks;\n};","map":{"version":3,"names":["STANDARD_CATEGORIES","id","name","categorizeTasks","tasks","categories","categorizedTasks","forEach","category","filter","task","categoryId","planDate","Date","toISOString","split","completed"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/utils/categorizeTasks.jsx"],"sourcesContent":["export const STANDARD_CATEGORIES = [\n  { id: 1, name: 'All Tasks' },\n  { id: 2, name: 'Today' },\n  { id: 3, name: 'Planned' },\n  { id: 4, name: 'Any Time' },\n  { id: 5, name: 'Work' },\n  { id: 6, name: 'Personal' },\n  { id: 7, name: 'Logbook' },\n];\n\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  categories.forEach(category => {\n    categorizedTasks[category.id] = tasks.filter(task => task.categoryId === category.id);\n  });\n\n  // Handle special categories\n  categorizedTasks[1] = tasks; // All Tasks\n  categorizedTasks[2] = tasks.filter(task => task.planDate === new Date().toISOString().split('T')[0]); // Today\n  categorizedTasks[3] = tasks.filter(task => task.planDate); // Planned\n  categorizedTasks[4] = tasks.filter(task => !task.planDate); // Any Time\n  categorizedTasks[7] = tasks.filter(task => task.completed); // Logbook\n\n  return categorizedTasks;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,CACjC;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAY,CAAC,EAC5B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACvB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC3B;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EACpD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAE3BD,UAAU,CAACE,OAAO,CAACC,QAAQ,IAAI;IAC7BF,gBAAgB,CAACE,QAAQ,CAACP,EAAE,CAAC,GAAGG,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAKH,QAAQ,CAACP,EAAE,CAAC;EACvF,CAAC,CAAC;;EAEF;EACAK,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAAC,CAAC;EAC7BE,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,QAAQ,KAAK,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtGT,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC3DN,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC5DN,gBAAgB,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,SAAS,CAAC,CAAC,CAAC;;EAE5D,OAAOV,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}