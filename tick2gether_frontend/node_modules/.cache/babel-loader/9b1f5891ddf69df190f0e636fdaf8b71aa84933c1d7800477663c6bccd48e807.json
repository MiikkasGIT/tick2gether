{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport ToDoList from '../components/ToDoList';\nimport { fetchEmail, fetchUserId, fetchTasks, fetchCategories } from '../api';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n  const fetchUserAndTasksAndCategories = useCallback(async () => {\n    try {\n      console.log('Fetching user email');\n      const email = await fetchEmail();\n      console.log('Fetched email:', email);\n      console.log('Fetching user ID');\n      const fetchedUserId = await fetchUserId(email);\n      console.log('Fetched user ID:', fetchedUserId);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        console.log('Fetching tasks');\n        const tasks = await fetchTasks();\n        console.log('Fetched tasks:', tasks);\n        setTasks(tasks);\n        console.log('Fetching categories');\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched categories:', fetchedCategories);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon\n        }));\n        setCategories(mappedCategories);\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        console.log('User ID not found, navigating to login');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetchUserAndTasksAndCategories();\n    return () => {\n      if (webSocketRef.current) {\n        console.log('Disconnecting WebSocket...');\n        disconnectWebSocket();\n        webSocketRef.current = null;\n        console.log('WebSocket disconnected.');\n      } else {\n        console.log('WebSocket reference not set.');\n      }\n    };\n  }, [fetchUserAndTasksAndCategories]);\n  useEffect(() => {\n    if (userId && !webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        connectWebSocket(userId, handleMessageReceived);\n        webSocketRef.current = true;\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    }\n  }, [userId]);\n  const handleMessageReceived = useCallback(message => {\n    console.log('WebSocket message received:', message);\n    if (message.type === 'TASK_UPDATE') {\n      updateTaskInState(message.task);\n    }\n  }, []);\n  const updateTaskInState = useCallback(updatedTask => {\n    console.log('Updating task in state:', updatedTask);\n    setTasks(prevTasks => {\n      const tasks = prevTasks.map(task => task.taskId === updatedTask.taskId ? updatedTask : task);\n      console.log('Updated tasks:', tasks);\n      return tasks;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-semibold text-gray-800\",\n              children: selectedCategory ? selectedCategory.name : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            tasks: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: todo => setCurrentTask(todo),\n            selectedCategory: selectedCategory,\n            handleDeleteTask: taskId => handleDeleteTask(taskId),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"BiPwL/mKxwiYuSk3MXs1khe4Faw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","connectWebSocket","disconnectWebSocket","ToDoList","fetchEmail","fetchUserId","fetchTasks","fetchCategories","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","fetchUserAndTasksAndCategories","console","log","email","fetchedUserId","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","error","current","handleMessageReceived","message","type","updateTaskInState","task","updatedTask","prevTasks","taskId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEditTodo","todo","handleDeleteTask","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport ToDoList from '../components/ToDoList';\nimport { fetchEmail, fetchUserId, fetchTasks, fetchCategories } from '../api';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  const fetchUserAndTasksAndCategories = useCallback(async () => {\n    try {\n      console.log('Fetching user email');\n      const email = await fetchEmail();\n      console.log('Fetched email:', email);\n      console.log('Fetching user ID');\n      const fetchedUserId = await fetchUserId(email);\n      console.log('Fetched user ID:', fetchedUserId);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        console.log('Fetching tasks');\n        const tasks = await fetchTasks();\n        console.log('Fetched tasks:', tasks);\n        setTasks(tasks);\n\n        console.log('Fetching categories');\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched categories:', fetchedCategories);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon,\n        }));\n        setCategories(mappedCategories);\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        console.log('User ID not found, navigating to login');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchUserAndTasksAndCategories();\n\n    return () => {\n      if (webSocketRef.current) {\n        console.log('Disconnecting WebSocket...');\n        disconnectWebSocket();\n        webSocketRef.current = null;\n        console.log('WebSocket disconnected.');\n      } else {\n        console.log('WebSocket reference not set.');\n      }\n    };\n  }, [fetchUserAndTasksAndCategories]);\n\n  useEffect(() => {\n    if (userId && !webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        connectWebSocket(userId, handleMessageReceived);\n        webSocketRef.current = true;\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    }\n  }, [userId]);\n\n  const handleMessageReceived = useCallback((message) => {\n    console.log('WebSocket message received:', message);\n    if (message.type === 'TASK_UPDATE') {\n      updateTaskInState(message.task);\n    }\n  }, []);\n\n  const updateTaskInState = useCallback((updatedTask) => {\n    console.log('Updating task in state:', updatedTask);\n    setTasks(prevTasks => {\n      const tasks = prevTasks.map(task =>\n        task.taskId === updatedTask.taskId ? updatedTask : task\n      );\n      console.log('Updated tasks:', tasks);\n      return tasks;\n    });\n  }, []);\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          {/* Navbar component here */}\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          {/* Categories component here */}\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-start justify-between\">\n              <h2 className=\"text-2xl font-semibold text-gray-800\">\n                {selectedCategory ? selectedCategory.name : ''}\n              </h2>\n              {/* ToDoActions component here */}\n            </div>\n            <ToDoList\n              tasks={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={(todo) => setCurrentTask(todo)}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={(taskId) => handleDeleteTask(taskId)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {/* PopUp components here */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}