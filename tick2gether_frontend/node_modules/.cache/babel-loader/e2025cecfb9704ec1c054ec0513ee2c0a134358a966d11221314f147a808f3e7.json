{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  // Deine Basis-URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('jwtToken'); // Holen Sie den Token aus dem Local Storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const sendWebSocketMessage = (destination, message) => {\n  console.log('Sending WebSocket message to:', destination);\n  console.log('Message content:', message);\n  webSocketService.sendMessage(destination, message);\n};\nexport const registerUser = async user => {\n  try {\n    const response = await api.post('/auth/register', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const accessToken = response.data;\n    if (accessToken) {\n      localStorage.setItem('jwtToken', accessToken);\n    }\n    return {\n      accessToken\n    };\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\nexport const fetchEmail = async () => {\n  try {\n    const response = await api.get('/auth/email');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email:', error);\n    throw new Error('Fetching email failed');\n  }\n};\nexport const fetchUserId = async email => {\n  try {\n    const response = await api.get(`/api/v1/user/useridByEmail?email=${email}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error);\n    throw new Error('Fetching user ID failed');\n  }\n};\nexport const fetchTasks = async () => {\n  try {\n    const response = await api.get('/api/v1/task/getTasks');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport const addTask = async (task, userId) => {\n  try {\n    console.log('API call to add task with userId:', userId);\n    const response = await api.post('/api/v1/task/save', {\n      ...task,\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\nexport const updateTask = async (task, userId) => {\n  try {\n    console.log('API call to update task with userId:', userId);\n    const response = await api.put('/api/v1/task/update', {\n      ...task,\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\nexport const deleteTask = async id => {\n  try {\n    const response = await api.delete(`/api/v1/task/delete/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\nexport const fetchUser = async userId => {\n  try {\n    const response = await api.get(`/api/v1/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\nexport const updateUser = async user => {\n  try {\n    const response = await api.put('/api/v1/user/update', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await api.delete(`/api/v1/user/deleteuser/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\nexport const addCategory = async category => {\n  try {\n    console.log('Adding category:', category);\n    const response = await api.post(`/api/v1/category/save`, category);\n    console.log('Category added:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error adding category:', error);\n    console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    throw error;\n  }\n};\nexport const deleteCategory = async categoryId => {\n  try {\n    const response = await api.delete(`/api/v1/category/delete/${categoryId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForCategory = async (categoryId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForCategory', {\n      categoryId,\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async (taskId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForTask', {\n      taskId,\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    // Entferne Tokens oder andere Authentifizierungsdaten aus dem lokalen Speicher\n    localStorage.removeItem('jwtToken');\n    sessionStorage.removeItem('jwtToken');\n  } catch (error) {\n    console.error('Error logging out:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","sendWebSocketMessage","destination","message","console","log","webSocketService","sendMessage","registerUser","user","response","post","data","loginUser","credentials","accessToken","setItem","fetchEmail","get","Error","fetchUserId","email","fetchTasks","addTask","task","userId","updateTask","put","deleteTask","id","delete","fetchUser","updateUser","deleteUser","addCategory","category","_error$response","deleteCategory","categoryId","generateTokenForCategory","generateTokenForTask","taskId","logoutUser","removeItem","sessionStorage"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080', // Deine Basis-URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('jwtToken'); // Holen Sie den Token aus dem Local Storage\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\nexport const sendWebSocketMessage = (destination, message) => {\n  console.log('Sending WebSocket message to:', destination);\n  console.log('Message content:', message);\n  webSocketService.sendMessage(destination, message);\n};\n\nexport const registerUser = async (user) => {\n  try {\n    const response = await api.post('/auth/register', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const accessToken = response.data;\n    if (accessToken) {\n      localStorage.setItem('jwtToken', accessToken);\n    }\n    return { accessToken };\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\nexport const fetchEmail = async () => {\n  try {\n    const response = await api.get('/auth/email');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email:', error);\n    throw new Error('Fetching email failed');\n  }\n};\n\nexport const fetchUserId = async (email) => {\n  try {\n    const response = await api.get(`/api/v1/user/useridByEmail?email=${email}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error);\n    throw new Error('Fetching user ID failed');\n  }\n};\n\nexport const fetchTasks = async () => {\n  try {\n    const response = await api.get('/api/v1/task/getTasks');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\nexport const addTask = async (task, userId) => {\n  try {\n    console.log('API call to add task with userId:', userId);\n    const response = await api.post('/api/v1/task/save', { ...task, userId });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\n\nexport const updateTask = async (task, userId) => {\n  try {\n    console.log('API call to update task with userId:', userId);\n    const response = await api.put('/api/v1/task/update', { ...task, userId });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\n\n\nexport const deleteTask = async (id) => {\n  try {\n    const response = await api.delete(`/api/v1/task/delete/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n\nexport const fetchUser = async (userId) => {\n  try {\n    const response = await api.get(`/api/v1/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\n\nexport const updateUser = async (user) => {\n  try {\n    const response = await api.put('/api/v1/user/update', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    const response = await api.delete(`/api/v1/user/deleteuser/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\n\nexport const addCategory = async (category) => {\n  try {\n    console.log('Adding category:', category);\n    const response = await api.post(`/api/v1/category/save`, category);\n    console.log('Category added:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding category:', error);\n    console.error('Error details:', error.response?.data);\n    throw error;\n  }\n};\n\nexport const deleteCategory = async (categoryId) => {\n  try {\n    const response = await api.delete(`/api/v1/category/delete/${categoryId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForCategory = async (categoryId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForCategory', { categoryId, userId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForTask', { taskId, userId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};\n\n\nexport const logoutUser = async () => {\n  try {\n    // Entferne Tokens oder andere Authentifizierungsdaten aus dem lokalen Speicher\n    localStorage.removeItem('jwtToken');\n    sessionStorage.removeItem('jwtToken');\n  } catch (error) {\n    console.error('Error logging out:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}