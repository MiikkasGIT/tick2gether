{"ast":null,"code":"// websocket.js\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nlet stompClient = null;\nexport function connectWebSocket(userId, onTaskMessageReceived) {\n  const socket = new SockJS('http://localhost:8080/ws');\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    onConnect: () => {\n      console.log('Connected to WebSocket server');\n      stompClient.subscribe(`/user/${userId}/queue/tasks`, message => {\n        const parsedMessage = JSON.parse(message.body);\n        onTaskMessageReceived(parsedMessage);\n      });\n    },\n    onStompError: frame => {\n      console.error('Broker reported error: ' + frame.headers['message']);\n      console.error('Additional details: ' + frame.body);\n    }\n  });\n  stompClient.activate();\n}\nexport function disconnectWebSocket() {\n  if (stompClient !== null) {\n    stompClient.deactivate();\n    console.log('Disconnected from WebSocket server');\n  }\n}\nexport function sendWebSocketMessage(destination, message) {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: destination,\n      body: JSON.stringify(message)\n    });\n  } else {\n    console.error('WebSocket is not connected');\n  }\n}","map":{"version":3,"names":["SockJS","Client","stompClient","connectWebSocket","userId","onTaskMessageReceived","socket","webSocketFactory","reconnectDelay","onConnect","console","log","subscribe","message","parsedMessage","JSON","parse","body","onStompError","frame","error","headers","activate","disconnectWebSocket","deactivate","sendWebSocketMessage","destination","connected","publish","stringify"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["// websocket.js\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\n\nlet stompClient = null;\n\nexport function connectWebSocket(userId, onTaskMessageReceived) {\n  const socket = new SockJS('http://localhost:8080/ws');\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    onConnect: () => {\n      console.log('Connected to WebSocket server');\n      stompClient.subscribe(`/user/${userId}/queue/tasks`, (message) => {\n        const parsedMessage = JSON.parse(message.body);\n        onTaskMessageReceived(parsedMessage);\n      });\n    },\n    onStompError: (frame) => {\n      console.error('Broker reported error: ' + frame.headers['message']);\n      console.error('Additional details: ' + frame.body);\n    }\n  });\n\n  stompClient.activate();\n}\n\nexport function disconnectWebSocket() {\n  if (stompClient !== null) {\n    stompClient.deactivate();\n    console.log('Disconnected from WebSocket server');\n  }\n}\n\nexport function sendWebSocketMessage(destination, message) {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: destination,\n      body: JSON.stringify(message)\n    });\n  } else {\n    console.error('WebSocket is not connected');\n  }\n}\n"],"mappings":"AAAA;AACA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,qBAAqB,EAAE;EAC9D,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,0BAA0B,CAAC;EACrDE,WAAW,GAAG,IAAID,MAAM,CAAC;IACvBM,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAEA,CAAA,KAAM;MACfC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CT,WAAW,CAACU,SAAS,CAAC,SAASR,MAAM,cAAc,EAAGS,OAAO,IAAK;QAChE,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;QAC9CZ,qBAAqB,CAACS,aAAa,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC;IACDI,YAAY,EAAGC,KAAK,IAAK;MACvBT,OAAO,CAACU,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC,SAAS,CAAC,CAAC;MACnEX,OAAO,CAACU,KAAK,CAAC,sBAAsB,GAAGD,KAAK,CAACF,IAAI,CAAC;IACpD;EACF,CAAC,CAAC;EAEFf,WAAW,CAACoB,QAAQ,CAAC,CAAC;AACxB;AAEA,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EACpC,IAAIrB,WAAW,KAAK,IAAI,EAAE;IACxBA,WAAW,CAACsB,UAAU,CAAC,CAAC;IACxBd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EACnD;AACF;AAEA,OAAO,SAASc,oBAAoBA,CAACC,WAAW,EAAEb,OAAO,EAAE;EACzD,IAAIX,WAAW,IAAIA,WAAW,CAACyB,SAAS,EAAE;IACxCzB,WAAW,CAAC0B,OAAO,CAAC;MAClBF,WAAW,EAAEA,WAAW;MACxBT,IAAI,EAAEF,IAAI,CAACc,SAAS,CAAChB,OAAO;IAC9B,CAAC,CAAC;EACJ,CAAC,MAAM;IACLH,OAAO,CAACU,KAAK,CAAC,4BAA4B,CAAC;EAC7C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}