{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, updateTask, fetchUserId, fetchEmail, addCategory, fetchCategories, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendUpdateCategoryMessage } from '../websocket';\nimport { categorizeTasks } from '../utils/categorizeTasks'; // Entfernen Sie STANDARD_CATEGORIES\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [showDeleteIcons, setShowDeleteIcons] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('WebSocket message received:', message);\n      switch (message.type) {\n        case 'task_update':\n          setTasks(prevTasks => prevTasks.map(task => task.id === message.task.id ? message.task : task));\n          break;\n        case 'category_update':\n          setCategories(prevCategories => prevCategories.map(category => category.categoryId === message.category.categoryId ? message.category : category));\n          break;\n        case 'task_delete':\n          setTasks(prevTasks => prevTasks.filter(task => task.id !== message.taskId));\n          break;\n        case 'category_delete':\n          setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== message.categoryId));\n          if ((selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId) === message.categoryId) {\n            setSelectedCategory(null);\n          }\n          break;\n        default:\n          console.warn('Unhandled WebSocket message type:', message.type);\n      }\n    };\n    connectWebSocket(handleWebSocketMessage);\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [selectedCategory]);\n  const handleCategorySelection = categoryId => {\n    const category = categories.find(cat => cat.categoryId === categoryId);\n    setSelectedCategory(category);\n  };\n  const handleToggleDeleteIcons = () => {\n    setShowDeleteIcons(!showDeleteIcons);\n  };\n  const handleDeleteCategory = async categoryId => {\n    try {\n      await deleteCategory(categoryId);\n      sendUpdateCategoryMessage({\n        type: 'category_delete',\n        categoryId\n      });\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const handleAddCategory = async (name, icon) => {\n    try {\n      const newCategory = await addCategory(userId, name, icon);\n      setCategories(prevCategories => [...prevCategories, {\n        ...newCategory,\n        categoryId: newCategory.categoryId,\n        icon: iconMap[name] || customCategoryIcon\n      }]);\n      setShowAddCategoryPopUp(false);\n      sendUpdateCategoryMessage({\n        type: 'category_update',\n        category: newCategory\n      });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleAddTask = async task => {\n    try {\n      const newTask = await addTask(task);\n      setTasks(prevTasks => [...prevTasks, newTask]);\n      setShowAddTaskPopUp(false);\n      sendUpdateTaskMessage({\n        type: 'task_update',\n        task: newTask\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleEditTask = async updatedTask => {\n    try {\n      const task = await updateTask(updatedTask);\n      setTasks(prevTasks => prevTasks.map(t => t.id === task.id ? task : t));\n      setShowEditTaskPopUp(false);\n      sendUpdateTaskMessage({\n        type: 'task_update',\n        task\n      });\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        categories: categories,\n        onSelectCategory: handleCategorySelection,\n        onToggleDeleteIcons: handleToggleDeleteIcons,\n        onDeleteCategory: handleDeleteCategory,\n        onAddCategory: handleAddCategory,\n        showDeleteIcons: showDeleteIcons,\n        showAddCategoryPopUp: showAddCategoryPopUp,\n        onShowAddCategoryPopUp: () => setShowAddCategoryPopUp(true),\n        onCloseAddCategoryPopUp: () => setShowAddCategoryPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        tasks: tasks.filter(task => task.categoryId === (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId)),\n        onEditTask: task => {\n          setCurrentTask(task);\n          setShowEditTaskPopUp(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n        onAddTask: () => setShowAddTaskPopUp(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n        task: currentTask,\n        onClose: () => setShowEditTaskPopUp(false),\n        onEditTask: handleEditTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n        onClose: () => setShowAddTaskPopUp(false),\n        onAddTask: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"c9ntXt/44zaz91p+Lzkji/f3KVQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","updateTask","fetchUserId","fetchEmail","addCategory","fetchCategories","deleteCategory","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","sendUpdateCategoryMessage","categorizeTasks","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","showDeleteIcons","setShowDeleteIcons","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Array","isArray","uniqueCategories","reduce","acc","category","some","cat","categoryId","push","icon","name","length","console","error","handleWebSocketMessage","message","log","type","prevTasks","map","task","id","prevCategories","filter","taskId","warn","handleCategorySelection","find","handleToggleDeleteIcons","handleDeleteCategory","handleAddCategory","newCategory","handleAddTask","newTask","handleEditTask","updatedTask","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","onToggleDeleteIcons","onDeleteCategory","onAddCategory","onShowAddCategoryPopUp","onCloseAddCategoryPopUp","onEditTask","onAddTask","onClose","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, updateTask, fetchUserId, fetchEmail, addCategory, fetchCategories, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendUpdateCategoryMessage } from '../websocket';\nimport { categorizeTasks } from '../utils/categorizeTasks'; // Entfernen Sie STANDARD_CATEGORIES\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [showDeleteIcons, setShowDeleteIcons] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon,\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('WebSocket message received:', message);\n\n      switch (message.type) {\n        case 'task_update':\n          setTasks((prevTasks) =>\n            prevTasks.map((task) => (task.id === message.task.id ? message.task : task))\n          );\n          break;\n        case 'category_update':\n          setCategories((prevCategories) =>\n            prevCategories.map((category) => (category.categoryId === message.category.categoryId ? message.category : category))\n          );\n          break;\n        case 'task_delete':\n          setTasks((prevTasks) => prevTasks.filter((task) => task.id !== message.taskId));\n          break;\n        case 'category_delete':\n          setCategories((prevCategories) => prevCategories.filter((category) => category.categoryId !== message.categoryId));\n          if (selectedCategory?.categoryId === message.categoryId) {\n            setSelectedCategory(null);\n          }\n          break;\n        default:\n          console.warn('Unhandled WebSocket message type:', message.type);\n      }\n    };\n\n    connectWebSocket(handleWebSocketMessage);\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [selectedCategory]);\n\n  const handleCategorySelection = (categoryId) => {\n    const category = categories.find((cat) => cat.categoryId === categoryId);\n    setSelectedCategory(category);\n  };\n\n  const handleToggleDeleteIcons = () => {\n    setShowDeleteIcons(!showDeleteIcons);\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    try {\n      await deleteCategory(categoryId);\n      sendUpdateCategoryMessage({ type: 'category_delete', categoryId });\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const handleAddCategory = async (name, icon) => {\n    try {\n      const newCategory = await addCategory(userId, name, icon);\n      setCategories((prevCategories) => [\n        ...prevCategories,\n        {\n          ...newCategory,\n          categoryId: newCategory.categoryId,\n          icon: iconMap[name] || customCategoryIcon,\n        },\n      ]);\n      setShowAddCategoryPopUp(false);\n      sendUpdateCategoryMessage({ type: 'category_update', category: newCategory });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleAddTask = async (task) => {\n    try {\n      const newTask = await addTask(task);\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n      setShowAddTaskPopUp(false);\n      sendUpdateTaskMessage({ type: 'task_update', task: newTask });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleEditTask = async (updatedTask) => {\n    try {\n      const task = await updateTask(updatedTask);\n      setTasks((prevTasks) =>\n        prevTasks.map((t) => (t.id === task.id ? task : t))\n      );\n      setShowEditTaskPopUp(false);\n      sendUpdateTaskMessage({ type: 'task_update', task });\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Navbar />\n      <div className=\"content\">\n        <Categories\n          categories={categories}\n          onSelectCategory={handleCategorySelection}\n          onToggleDeleteIcons={handleToggleDeleteIcons}\n          onDeleteCategory={handleDeleteCategory}\n          onAddCategory={handleAddCategory}\n          showDeleteIcons={showDeleteIcons}\n          showAddCategoryPopUp={showAddCategoryPopUp}\n          onShowAddCategoryPopUp={() => setShowAddCategoryPopUp(true)}\n          onCloseAddCategoryPopUp={() => setShowAddCategoryPopUp(false)}\n        />\n        <ToDoList\n          tasks={tasks.filter(task => task.categoryId === selectedCategory?.categoryId)}\n          onEditTask={(task) => {\n            setCurrentTask(task);\n            setShowEditTaskPopUp(true);\n          }}\n        />\n        <ToDoActions\n          onAddTask={() => setShowAddTaskPopUp(true)}\n        />\n        {showEditTaskPopUp && (\n          <EditTaskPopUp\n            task={currentTask}\n            onClose={() => setShowEditTaskPopUp(false)}\n            onEditTask={handleEditTask}\n          />\n        )}\n        {showAddTaskPopUp && (\n          <AddTaskPopUp\n            onClose={() => setShowAddTaskPopUp(false)}\n            onAddTask={handleAddTask}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}