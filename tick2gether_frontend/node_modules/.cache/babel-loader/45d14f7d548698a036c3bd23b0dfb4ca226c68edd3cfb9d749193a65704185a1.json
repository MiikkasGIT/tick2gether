{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  tasks = [],\n  setTasks,\n  isDeleteMode,\n  onEditTask,\n  onDeleteTask,\n  selectedCategory\n}) {\n  const handleEditTask = task => {\n    onEditTask(task);\n  };\n  const handleDeleteTask = id => {\n    onDeleteTask(id);\n  };\n  const handleCheckboxChange = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const today = startOfToday();\n  const filteredTasks = tasks.filter(task => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return task.planDate && !task.completed && isAfter(new Date(task.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return task.category.name === selectedCategory.name && (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today));\n      case 'All Tasks':\n        return (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)) && task.category.name !== 'Planned';\n      case 'Logbook':\n        return task.category.name === 'Logbook';\n      default:\n        return task.category.name === selectedCategory.name;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(ToDo, {\n        task: task,\n        handleCheckboxChange: handleCheckboxChange,\n        handleEditTask: handleEditTask,\n        handleDeleteTask: handleDeleteTask,\n        isDeleteMode: isDeleteMode,\n        isTodayCategory: selectedCategory.name === 'Today'\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","ToDoList","tasks","setTasks","isDeleteMode","onEditTask","onDeleteTask","selectedCategory","handleEditTask","task","handleDeleteTask","id","handleCheckboxChange","updatedTasks","map","taskId","completed","today","filteredTasks","filter","name","planDate","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\nexport default function ToDoList({ tasks = [], setTasks, isDeleteMode, onEditTask, onDeleteTask, selectedCategory }) {\n  const handleEditTask = (task) => {\n    onEditTask(task);\n  };\n\n  const handleDeleteTask = (id) => {\n    onDeleteTask(id);\n  };\n\n  const handleCheckboxChange = (id) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const today = startOfToday();\n\n  const filteredTasks = tasks.filter(task => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return task.planDate && !task.completed && isAfter(new Date(task.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return (task.category.name === selectedCategory.name && (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)));\n      case 'All Tasks':\n        return (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)) && task.category.name !== 'Planned';\n      case 'Logbook':\n        return task.category.name === 'Logbook';\n      default:\n        return task.category.name === selectedCategory.name;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTasks.map(task => (\n          <ToDo\n            key={task.taskId}\n            task={task}\n            handleCheckboxChange={handleCheckboxChange}\n            handleEditTask={handleEditTask}\n            handleDeleteTask={handleDeleteTask}\n            isDeleteMode={isDeleteMode}\n            isTodayCategory={selectedCategory.name === 'Today'}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}