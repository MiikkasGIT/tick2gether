{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, updateTask } from '../api'; // Beispiel-Pfad für API\nimport { fetchCategories, addCategory } from '../api'; // Beispiel-Pfad für API\nimport { sendWebSocketMessage, connectWebSocket, disconnectWebSocket } from '../websocket'; // Beispiel-Pfad für WebSocket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const userId = getUserId(); // Beispiel-Implementierung\n\n  useEffect(() => {\n    // Fetch initial data\n    const initializeData = async () => {\n      try {\n        const fetchedTasks = await fetchTasks(userId);\n        const fetchedCategories = await fetchCategories(userId);\n        setTasks(fetchedTasks);\n        setCategories(fetchedCategories);\n        if (fetchedCategories.length > 0) {\n          setSelectedCategory(fetchedCategories[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    initializeData();\n  }, [userId]);\n  useEffect(() => {\n    if (userId) {\n      const handleWebSocketMessage = message => {\n        console.log('Received WebSocket message:', message);\n        // Handle WebSocket message\n      };\n      connectWebSocket(handleWebSocketMessage);\n      return () => {\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  const handleAddTask = async newTask => {\n    try {\n      const data = await addTask(newTask);\n      setTasks(prevTasks => [...prevTasks, {\n        ...newTask,\n        id: data.taskId\n      }]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleCheckboxChange = async taskId => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedTask = {\n          ...task,\n          completed: !task.completed\n        };\n        if (updatedTask.completed) {\n          updatedTask.categoryId = 7; // Logbook category\n        }\n        return updatedTask;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    const updatedTask = updatedTasks.find(task => task.id === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    const updatedTask = updatedTasks.find(task => task.id === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      setCategories(prevCategories => [...prevCategories, {\n        id: data.categoryId,\n        name: data.name\n      }]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        categories: categories,\n        selectedCategory: selectedCategory,\n        onSelectCategory: setSelectedCategory,\n        onAddCategory: handleAddCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-section\",\n        children: [/*#__PURE__*/_jsxDEV(ToDoActions, {\n          toggleDeleteMode: () => setIsDeleteMode(!isDeleteMode),\n          showAddTaskPopUp: () => setShowAddTaskPopUp(true),\n          showAddCategoryPopUp: () => setShowAddCategoryPopUp(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n          todos: tasks,\n          isDeleteMode: isDeleteMode,\n          onEditTodo: task => {\n            setCurrentTask(task);\n            setShowEditTaskPopUp(true);\n          },\n          handleDeleteTask: handleDeleteTask,\n          handleCheckboxChange: handleCheckboxChange,\n          handleDateChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSave: task => {\n        handleAddTask(task);\n        setShowEditTaskPopUp(false);\n      },\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAdd: handleAddTask,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAdd: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"jrOHCxHbEBrylbYttAtwfpRDkQA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","updateTask","fetchCategories","addCategory","sendWebSocketMessage","connectWebSocket","disconnectWebSocket","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddTaskPopUp","setShowAddTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","currentTask","setCurrentTask","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","userId","getUserId","initializeData","fetchedTasks","fetchedCategories","length","error","console","handleWebSocketMessage","message","log","handleAddTask","newTask","data","prevTasks","id","taskId","handleDeleteTask","filter","task","handleCheckboxChange","updatedTasks","map","updatedTask","completed","categoryId","find","handleDateChange","date","purpose","Date","toISOString","handleAddCategory","newCategory","categoryExists","some","cat","name","warn","prevCategories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","onAddCategory","toggleDeleteMode","todos","onEditTodo","onSave","onClose","onAdd","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, updateTask } from '../api'; // Beispiel-Pfad für API\nimport { fetchCategories, addCategory } from '../api'; // Beispiel-Pfad für API\nimport { sendWebSocketMessage, connectWebSocket, disconnectWebSocket } from '../websocket'; // Beispiel-Pfad für WebSocket\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const userId = getUserId(); // Beispiel-Implementierung\n\n  useEffect(() => {\n    // Fetch initial data\n    const initializeData = async () => {\n      try {\n        const fetchedTasks = await fetchTasks(userId);\n        const fetchedCategories = await fetchCategories(userId);\n        setTasks(fetchedTasks);\n        setCategories(fetchedCategories);\n        if (fetchedCategories.length > 0) {\n          setSelectedCategory(fetchedCategories[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    initializeData();\n  }, [userId]);\n\n  useEffect(() => {\n    if (userId) {\n      const handleWebSocketMessage = (message) => {\n        console.log('Received WebSocket message:', message);\n        // Handle WebSocket message\n      };\n\n      connectWebSocket(handleWebSocketMessage);\n\n      return () => {\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n\n  const handleAddTask = async (newTask) => {\n    try {\n      const data = await addTask(newTask);\n      setTasks((prevTasks) => [...prevTasks, { ...newTask, id: data.taskId }]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks((prevTasks) => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleCheckboxChange = async (taskId) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedTask = { ...task, completed: !task.completed };\n        if (updatedTask.completed) {\n          updatedTask.categoryId = 7; // Logbook category\n        }\n        return updatedTask;\n      }\n      return task;\n    });\n\n    setTasks(updatedTasks);\n\n    const updatedTask = updatedTasks.find(task => task.id === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return task;\n    });\n\n    setTasks(updatedTasks);\n\n    const updatedTask = updatedTasks.find(task => task.id === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      setCategories((prevCategories) => [\n        ...prevCategories,\n        { id: data.categoryId, name: data.name }\n      ]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Navbar />\n      <div className=\"dashboard-content\">\n        <Categories\n          categories={categories}\n          selectedCategory={selectedCategory}\n          onSelectCategory={setSelectedCategory}\n          onAddCategory={handleAddCategory}\n        />\n        <div className=\"todo-section\">\n          <ToDoActions\n            toggleDeleteMode={() => setIsDeleteMode(!isDeleteMode)}\n            showAddTaskPopUp={() => setShowAddTaskPopUp(true)}\n            showAddCategoryPopUp={() => setShowAddCategoryPopUp(true)}\n          />\n          <ToDoList\n            todos={tasks}\n            isDeleteMode={isDeleteMode}\n            onEditTodo={(task) => {\n              setCurrentTask(task);\n              setShowEditTaskPopUp(true);\n            }}\n            handleDeleteTask={handleDeleteTask}\n            handleCheckboxChange={handleCheckboxChange}\n            handleDateChange={handleDateChange}\n          />\n        </div>\n      </div>\n\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSave={(task) => {\n            handleAddTask(task);\n            setShowEditTaskPopUp(false);\n          }}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAdd={handleAddTask}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAdd={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}