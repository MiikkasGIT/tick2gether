{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1' // Ihre Basis-URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token'); // Holen Sie den Token aus dem lokalen Speicher\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchUserId = async () => {\n  try {\n    const response = await api.get('/auth/userid');\n    console.log('User ID fetched successfully:', response.data); // Debugging-Ausgabe\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error); // Debugging-Ausgabe\n    throw new Error('Fetching user ID failed');\n  }\n};\napi.interceptors.response.use(response => {\n  const authMessage = response.headers['x-auth-message'];\n  if (authMessage) {\n    console.log(authMessage); // Log the authorization message\n  }\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const {\n      accessToken,\n      refreshToken\n    } = response.data;\n    if (accessToken) {\n      localStorage.setItem('access_token', accessToken); // Speichern Sie den JWT-Token im lokalen Speicher\n      const user = await fetchUserId(); // Benutzerdaten abrufen\n      Cookies.set('userId', user); // Speichern Sie die Benutzer-ID in den Cookies\n      console.debug('Login successful: JWT token and user ID set in cookies');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\nexport const fetchTasks = async userId => {\n  try {\n    const response = await api.get(`/task/getTasks?userId=${userId}`);\n    console.debug('Fetched tasks:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport const addTask = async task => {\n  try {\n    const response = await api.post('/task/save', task);\n    console.debug('Task added:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\nexport const updateTask = async task => {\n  try {\n    const response = await api.put('/task/update', task);\n    console.debug('Task updated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\nexport const deleteTask = async id => {\n  try {\n    const response = await api.delete(`/task/delete/${id}`);\n    console.debug('Task deleted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n// Benutzer\nexport const fetchUser = async userId => {\n  try {\n    const response = await api.get(`/user/${userId}`);\n    console.debug('Fetched user:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\nexport const registerUser = async user => {\n  try {\n    const response = await api.post('/auth/register', user);\n    console.debug('User registered:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const updateUser = async user => {\n  try {\n    const response = await api.put('/user/update', user);\n    console.debug('User updated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await api.delete(`/user/deleteuser/${id}`);\n    console.debug('User deleted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\n\n// Kategorien\nexport const addCategory = async category => {\n  try {\n    const response = await api.post('/category/save', category);\n    console.debug('Category added:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding category:', error);\n    throw error;\n  }\n};\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    console.debug('Token for category generated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    console.debug('Token for task generated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","Cookies","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchUserId","response","get","console","log","data","Error","authMessage","loginUser","credentials","post","accessToken","refreshToken","setItem","user","set","debug","fetchTasks","userId","addTask","task","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1', // Ihre Basis-URL\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token'); // Holen Sie den Token aus dem lokalen Speicher\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\nexport const fetchUserId = async () => {\n  try {\n    const response = await api.get('/auth/userid');\n    console.log('User ID fetched successfully:', response.data); // Debugging-Ausgabe\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error); // Debugging-Ausgabe\n    throw new Error('Fetching user ID failed');\n  }\n};\n\napi.interceptors.response.use(\n  response => {\n    const authMessage = response.headers['x-auth-message'];\n    if (authMessage) {\n      console.log(authMessage); // Log the authorization message\n    }\n    return response;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const { accessToken, refreshToken } = response.data;\n    if (accessToken) {\n      localStorage.setItem('access_token', accessToken); // Speichern Sie den JWT-Token im lokalen Speicher\n      const user = await fetchUserId(); // Benutzerdaten abrufen\n      Cookies.set('userId', user); // Speichern Sie die Benutzer-ID in den Cookies\n      console.debug('Login successful: JWT token and user ID set in cookies');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\n\nexport const fetchTasks = async (userId) => {\n  try {\n    const response = await api.get(`/task/getTasks?userId=${userId}`);\n    console.debug('Fetched tasks:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\nexport const addTask = async (task) => {\n  try {\n    const response = await api.post('/task/save', task);\n    console.debug('Task added:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\n\nexport const updateTask = async (task) => {\n  try {\n    const response = await api.put('/task/update', task);\n    console.debug('Task updated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\n\nexport const deleteTask = async (id) => {\n  try {\n    const response = await api.delete(`/task/delete/${id}`);\n    console.debug('Task deleted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n// Benutzer\nexport const fetchUser = async (userId) => {\n  try {\n    const response = await api.get(`/user/${userId}`);\n    console.debug('Fetched user:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\n\nexport const registerUser = async (user) => {\n  try {\n    const response = await api.post('/auth/register', user);\n    console.debug('User registered:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const updateUser = async (user) => {\n  try {\n    const response = await api.put('/user/update', user);\n    console.debug('User updated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    const response = await api.delete(`/user/deleteuser/${id}`);\n    console.debug('User deleted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\n\n// Kategorien\nexport const addCategory = async (category) => {\n  try {\n    const response = await api.post('/category/save', category);\n    console.debug('Category added:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding category:', error);\n    throw error;\n  }\n};\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    console.debug('Token for category generated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    console.debug('Token for task generated:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}