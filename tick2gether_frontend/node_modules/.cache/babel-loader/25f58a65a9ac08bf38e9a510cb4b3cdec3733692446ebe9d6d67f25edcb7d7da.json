{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState(new Map());\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        const taskMap = new Map(fetchedTasks.map(task => [task.taskId, task]));\n        setTasks(taskMap);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon\n        }));\n        setCategories(mappedCategories);\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    if (!userId) return;\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        ...updatedTaskData\n      } = message;\n      if (type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const updatedTasks = new Map(prevTasks);\n          updatedTasks.set(taskId, {\n            ...updatedTasks.get(taskId),\n            ...updatedTaskData\n          });\n          return updatedTasks;\n        });\n      }\n    };\n    console.log('Connecting WebSocket for user ID:', userId);\n    connectWebSocket(handleWebSocketMessage);\n    return () => {\n      console.log('Disconnecting WebSocket for user ID:', userId);\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.set(addedTask.taskId, addedTask);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.set(taskToUpdate.taskId, taskToUpdate);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.delete(id);\n        return updatedTasks;\n      });\n      sendWebSocketMessage(`/app/deleteTask/${id}`, {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: Array.from(tasks.values()),\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3WRlKgw/E9KPun6u50Hf0/s0Y/8=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","sendUpdateTaskMessage","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","Map","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","taskMap","map","task","taskId","fetchedCategories","mappedCategories","category","id","categoryId","icon","name","length","error","console","handleWebSocketMessage","message","log","type","updatedTaskData","prevTasks","updatedTasks","set","get","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","delete","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","prevCategories","toggleDeleteMode","prevMode","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","Array","from","values","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon\n} from '../icons';\nimport {\n  fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage } from '../websocket';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState(new Map());\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        const taskMap = new Map(fetchedTasks.map(task => [task.taskId, task]));\n        setTasks(taskMap);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon,\n        }));\n        setCategories(mappedCategories);\n\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    if (!userId) return;\n\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n\n      const { type, taskId, ...updatedTaskData } = message;\n\n      if (type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const updatedTasks = new Map(prevTasks);\n          updatedTasks.set(taskId, { ...updatedTasks.get(taskId), ...updatedTaskData });\n          return updatedTasks;\n        });\n      }\n    };\n\n    console.log('Connecting WebSocket for user ID:', userId);\n    connectWebSocket(handleWebSocketMessage);\n\n    return () => {\n      console.log('Disconnecting WebSocket for user ID:', userId);\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.set(addedTask.taskId, addedTask);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.id || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.set(taskToUpdate.taskId, taskToUpdate);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => {\n        const updatedTasks = new Map(prevTasks);\n        updatedTasks.delete(id);\n        return updatedTasks;\n      });\n      sendWebSocketMessage(`/app/deleteTask/${id}`, { type: 'TASK_DELETE', taskId: id });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, { type: 'CATEGORY_UPDATE', category: newCategoryObject });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categoriesFromBackend={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={Array.from(tasks.values())}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}