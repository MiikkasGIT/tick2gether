{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from'react';import{useNavigate}from'react-router-dom';import Categories from'../components/Categories';import ToDoList from'../components/ToDoList';import ToDoActions from'../components/ToDoActions';import Navbar from'../components/Navbar';import EditTaskPopUp from'../components/EditTaskPopUp';import AddTaskPopUp from'../components/AddTaskPopUp';import AddCategoryPopUp from'../components/AddCategoryPopUp';import{fetchTasks,addTask,deleteTask,fetchUserId,fetchEmail,addCategory,fetchCategories,deleteCategory,fetchAllUsers}from'../api';import{connectWebSocket,disconnectWebSocket,sendUpdateTaskMessage}from'../websocket';import{iconMap,customCategoryIcon}from'../icons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const[showEditTaskPopUp,setShowEditTaskPopUp]=useState(false);const[showAddCategoryPopUp,setShowAddCategoryPopUp]=useState(false);const[isDeleteMode,setIsDeleteMode]=useState(false);const[tasks,setTasks]=useState([]);const[categories,setCategories]=useState([]);const[users,setUsers]=useState([]);const[selectedCategory,setSelectedCategory]=useState(null);const[currentTask,setCurrentTask]=useState(null);const[showAddTaskPopUp,setShowAddTaskPopUp]=useState(false);const[userId,setUserId]=useState(null);const navigate=useNavigate();const initializeDashboard=useCallback(async()=>{try{const email=await fetchEmail();const fetchedUserId=await fetchUserId(email);if(fetchedUserId){setUserId(fetchedUserId);const fetchedTasks=await fetchTasks();setTasks(fetchedTasks);const fetchedCategories=await fetchCategories(fetchedUserId);const fetchedUsers=await fetchAllUsers();setUsers(fetchedUsers);const uniqueCategories=fetchedCategories.reduce((acc,category)=>{if(!acc.some(cat=>cat.categoryId===category.categoryId)){acc.push({...category,icon:iconMap[category.name]||customCategoryIcon});}return acc;},[]).sort((a,b)=>a.categoryId-b.categoryId);setCategories(uniqueCategories);if(uniqueCategories.length>0){setSelectedCategory(uniqueCategories[0]);}else{setSelectedCategory(null);}}else{navigate('/login');}}catch(error){console.error('Error initializing dashboard:',error);navigate('/login');}},[navigate]);useEffect(()=>{initializeDashboard();},[initializeDashboard]);const filteredTasks=useMemo(()=>{if(!selectedCategory)return tasks;switch(selectedCategory.name){case'All Tasks':return tasks.filter(task=>task.categoryId!==7&&!task.completed);case'Today':return tasks.filter(task=>task.categoryId===selectedCategory.categoryId&&!task.completed);case'Any Time':return tasks.filter(task=>task.categoryId===selectedCategory.categoryId&&!task.completed);case'Work':return tasks.filter(task=>task.categoryId===selectedCategory.categoryId&&!task.completed);case'Personal':return tasks.filter(task=>task.categoryId===selectedCategory.categoryId&&!task.completed);case'Planned':return tasks.filter(task=>task.planDate!==null&&!task.completed);case'Logbook':return tasks.filter(task=>task.completed);default:return tasks.filter(task=>task.categoryId===selectedCategory.categoryId&&!task.completed);}},[tasks,selectedCategory]);useEffect(()=>{const handleWebSocketMessage=message=>{const{type,taskId,sharedUserIds=[],...updatedData}=message;if(!sharedUserIds.includes(userId)){return;}setTasks(prevTasks=>{if(type==='TASK_UPDATE'){const taskIndex=prevTasks.findIndex(task=>task.taskId===taskId);if(taskIndex!==-1){const updatedTasks=[...prevTasks];updatedTasks[taskIndex]={...prevTasks[taskIndex],...updatedData};return updatedTasks;}else{return[...prevTasks,{taskId,...updatedData}];}}return prevTasks;});};if(userId){const fetchIds=async()=>{try{const fetchedTasks=await fetchTasks();const fetchedCategories=await fetchCategories(userId);const taskIds=fetchedTasks.map(task=>task.taskId);const categoryIds=Array.isArray(fetchedCategories)?fetchedCategories.map(category=>category.categoryId):[];connectWebSocket(userId,taskIds,categoryIds,handleWebSocketMessage);}catch(error){console.error('Error fetching IDs for WebSocket:',error);}};fetchIds();return()=>{disconnectWebSocket();};}},[userId]);const handleAddNewTask=async newTask=>{if(!selectedCategory)return;try{const formattedTask={...newTask,categoryId:selectedCategory.categoryId,userId:userId};const addedTask=await addTask(formattedTask,userId);setShowAddTaskPopUp(false);setTasks(prevTasks=>[...prevTasks,addedTask]);sendUpdateTaskMessage(addedTask);}catch(error){console.error('Error adding task:',error);}};const handleSaveTask=async updatedTask=>{try{const taskToUpdate={...updatedTask,userId:userId,taskId:currentTask.taskId,categoryId:currentTask.categoryId};setShowEditTaskPopUp(false);setTasks(prevTasks=>{const updatedTasks=prevTasks.map(task=>task.taskId===taskToUpdate.taskId?taskToUpdate:task);return updatedTasks;});sendUpdateTaskMessage(taskToUpdate);}catch(error){console.error('Error editing task:',error);}};const handleDeleteTask=async id=>{try{await deleteTask(id);setTasks(prevTasks=>prevTasks.filter(task=>task.taskId!==id));}catch(error){console.error('Error deleting task:',error);}};const handleAddCategory=async newCategory=>{try{const data=await addCategory(newCategory);const newCategoryObject={categoryId:data.categoryId,name:data.name,icon:customCategoryIcon};setCategories(prevCategories=>[...prevCategories,newCategoryObject]);setSelectedCategory(newCategoryObject);}catch(error){console.error('Error adding category:',error);}};const handleDeleteCategory=async id=>{try{await deleteCategory(id);setCategories(prevCategories=>prevCategories.filter(category=>category.categoryId!==id));}catch(error){console.error('Error deleting category:',error);}};const toggleDeleteMode=()=>{setIsDeleteMode(prevMode=>!prevMode);};const handleEditTask=task=>{setCurrentTask(task);setShowEditTaskPopUp(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",children:/*#__PURE__*/_jsx(Navbar,{})})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-16\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",children:/*#__PURE__*/_jsx(Categories,{onSelectCategory:setSelectedCategory,userId:userId,categoriesFromBackend:categories})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 w-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1.5 mb-4\",children:[selectedCategory&&selectedCategory.icon&&/*#__PURE__*/_jsx(selectedCategory.icon,{className:\"h-6 w-6\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold text-grayCustom-dark\",children:selectedCategory===null||selectedCategory===void 0?void 0:selectedCategory.name})]}),/*#__PURE__*/_jsx(ToDoList,{todos:filteredTasks,setTasks:setTasks,isDeleteMode:isDeleteMode,onEditTodo:handleEditTask,handleDeleteTask:handleDeleteTask,userId:userId,users:users// Pass users to ToDoList\n}),/*#__PURE__*/_jsx(ToDoActions,{toggleAddTaskModal:()=>setShowAddTaskPopUp(true),toggleDeleteMode:toggleDeleteMode,toggleAddCategoryModal:()=>setShowAddCategoryPopUp(true),handleDeleteCategory:handleDeleteCategory,selectedCategoryId:selectedCategory?selectedCategory.categoryId:null,userId:userId})]})})]}),showAddTaskPopUp&&/*#__PURE__*/_jsx(AddTaskPopUp,{onAddTask:handleAddNewTask,categories:categories,onClose:()=>setShowAddTaskPopUp(false)}),showEditTaskPopUp&&/*#__PURE__*/_jsx(EditTaskPopUp,{task:currentTask,onSaveTask:handleSaveTask,onClose:()=>setShowEditTaskPopUp(false)}),showAddCategoryPopUp&&/*#__PURE__*/_jsx(AddCategoryPopUp,{onAddCategory:handleAddCategory,onClose:()=>setShowAddCategoryPopUp(false),userId:userId})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","deleteCategory","fetchAllUsers","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","iconMap","customCategoryIcon","jsx","_jsx","jsxs","_jsxs","Dashboard","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","users","setUsers","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","fetchedUsers","uniqueCategories","reduce","acc","category","some","cat","categoryId","push","icon","name","sort","a","b","length","error","console","filteredTasks","filter","task","completed","planDate","handleWebSocketMessage","message","type","taskId","sharedUserIds","updatedData","includes","prevTasks","taskIndex","findIndex","updatedTasks","fetchIds","taskIds","map","categoryIds","Array","isArray","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","id","handleAddCategory","newCategory","data","newCategoryObject","prevCategories","handleDeleteCategory","toggleDeleteMode","prevMode","handleEditTask","className","children","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","toggleAddCategoryModal","selectedCategoryId","onAddTask","onClose","onSaveTask","onAddCategory"],"sources":["/Users/miikkakoensler/Downloads/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories, deleteCategory, fetchAllUsers } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const fetchedUsers = await fetchAllUsers();\n        setUsers(fetchedUsers);\n\n        const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n          if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n            acc.push({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon,\n            });\n          }\n          return acc;\n        }, []).sort((a, b) => a.categoryId - b.categoryId);\n\n        setCategories(uniqueCategories);\n\n        if (uniqueCategories.length > 0) {\n          setSelectedCategory(uniqueCategories[0]);\n        } else {\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  const filteredTasks = useMemo(() => {\n    if (!selectedCategory) return tasks;\n    switch (selectedCategory.name) {\n      case 'All Tasks':\n        return tasks.filter(task => task.categoryId !== 7 && !task.completed);\n      case 'Today':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Any Time':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Work':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Personal':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Planned':\n        return tasks.filter(task => task.planDate !== null && !task.completed);\n      case 'Logbook':\n        return tasks.filter(task => task.completed);\n      default:\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n    }\n  }, [tasks, selectedCategory]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      const { type, taskId, sharedUserIds = [], ...updatedData } = message;\n\n      if (!sharedUserIds.includes(userId)) {\n        return;\n      }\n\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedData };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, { taskId, ...updatedData }];\n          }\n        }\n        return prevTasks;\n      });\n    };\n\n    if (userId) {\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n\n      fetchIds();\n\n      return () => {\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId,\n      };\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: currentTask.categoryId,\n      };\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleDeleteCategory = async (id) => {\n    try {\n      await deleteCategory(id);\n      setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== id));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categoriesFromBackend={categories}\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n              users={users} // Pass users to ToDoList\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              handleDeleteCategory={handleDeleteCategory}\n              selectedCategoryId={selectedCategory ? selectedCategory.categoryId : null}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}