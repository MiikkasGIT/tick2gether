{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\n\n// Tasks\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = userId => api.get(`/user/${userId}`).then(res => res.data);\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const loginUser = credentials => {\n  return axios.post('/user/login', credentials).then(response => {\n    localStorage.setItem('token', response.headers.authorization.split(' ')[1]);\n    return response.data;\n  }).catch(error => {\n    console.error('Error during login:', error);\n    throw error;\n  });\n};\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\nexport const fetchCurrentUser = async () => {\n  try {\n    const response = await api.get('/user/me', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    console.log('Current user:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\n\n// Categories\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","fetchTasks","get","then","res","data","addTask","task","post","updateTask","put","deleteTask","id","delete","fetchUser","userId","registerUser","user","loginUser","credentials","response","localStorage","setItem","headers","authorization","split","catch","error","console","updateUser","deleteUser","fetchCurrentUser","Authorization","getItem","log","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\n// Tasks\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = (userId) => api.get(`/user/${userId}`).then(res => res.data);\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\nexport const loginUser = (credentials) => {\n  return axios.post('/user/login', credentials)\n    .then(response => {\n      localStorage.setItem('token', response.headers.authorization.split(' ')[1]);\n      return response.data;\n    })\n    .catch(error => {\n      console.error('Error during login:', error);\n      throw error;\n    });\n};\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\nexport const fetchCurrentUser = async () => {\n  try {\n    const response = await api.get('/user/me', {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n    console.log('Current user:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\n\n// Categories\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}