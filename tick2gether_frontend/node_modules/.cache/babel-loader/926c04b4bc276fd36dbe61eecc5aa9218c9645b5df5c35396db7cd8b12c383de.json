{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { fetchCategories, addCategory } from '../api';\nimport { sendWebSocketMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\nexport function useCategories(userId) {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const initializeCategories = useCallback(async () => {\n    try {\n      const fetchedCategories = await fetchCategories(userId);\n      const mappedCategories = fetchedCategories.map(category => ({\n        ...category,\n        id: category.categoryId,\n        icon: iconMap[category.name] || customCategoryIcon\n      }));\n      setCategories(mappedCategories);\n      if (mappedCategories.length > 0) {\n        setSelectedCategory(mappedCategories[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (userId) {\n      initializeCategories();\n    }\n  }, [initializeCategories, userId]);\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  return {\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n    handleAddCategory\n  };\n}\n_s(useCategories, \"20+HAYToqsy6zeZBvEAoNtNcH6w=\");","map":{"version":3,"names":["useState","useEffect","useCallback","fetchCategories","addCategory","sendWebSocketMessage","iconMap","customCategoryIcon","useCategories","userId","_s","categories","setCategories","selectedCategory","setSelectedCategory","initializeCategories","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","error","console","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","type","prevCategories"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/hooks/useCategories.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { fetchCategories, addCategory } from '../api';\nimport { sendWebSocketMessage } from '../websocket';\n\nimport { iconMap, customCategoryIcon } from '../icons'; \n\nexport function useCategories(userId) {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const initializeCategories = useCallback(async () => {\n    try {\n      const fetchedCategories = await fetchCategories(userId);\n      const mappedCategories = fetchedCategories.map(category => ({\n        ...category,\n        id: category.categoryId,\n        icon: iconMap[category.name] || customCategoryIcon,\n      }));\n      setCategories(mappedCategories);\n      if (mappedCategories.length > 0) {\n        setSelectedCategory(mappedCategories[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    if (userId) {\n      initializeCategories();\n    }\n  }, [initializeCategories, userId]);\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, { type: 'CATEGORY_UPDATE', category: newCategoryObject });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  return {\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n    handleAddCategory,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,eAAe,EAAEC,WAAW,QAAQ,QAAQ;AACrD,SAASC,oBAAoB,QAAQ,cAAc;AAEnD,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,UAAU;AAEtD,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMe,oBAAoB,GAAGb,WAAW,CAAC,YAAY;IACnD,IAAI;MACF,MAAMc,iBAAiB,GAAG,MAAMb,eAAe,CAACM,MAAM,CAAC;MACvD,MAAMQ,gBAAgB,GAAGD,iBAAiB,CAACE,GAAG,CAACC,QAAQ,KAAK;QAC1D,GAAGA,QAAQ;QACXC,EAAE,EAAED,QAAQ,CAACE,UAAU;QACvBC,IAAI,EAAEhB,OAAO,CAACa,QAAQ,CAACI,IAAI,CAAC,IAAIhB;MAClC,CAAC,CAAC,CAAC;MACHK,aAAa,CAACK,gBAAgB,CAAC;MAC/B,IAAIA,gBAAgB,CAACO,MAAM,GAAG,CAAC,EAAE;QAC/BV,mBAAmB,CAACG,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZR,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,EAAE;MACVM,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,oBAAoB,EAAEN,MAAM,CAAC,CAAC;EAElC,MAAMkB,iBAAiB,GAAG,MAAOC,WAAW,IAAK;IAC/C,IAAI;MACF,MAAMC,cAAc,GAAGlB,UAAU,CAACmB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,IAAI,KAAKK,WAAW,CAACL,IAAI,CAAC;MAC5E,IAAIM,cAAc,EAAE;QAClBH,OAAO,CAACM,IAAI,CAAC,0BAA0B,EAAEJ,WAAW,CAAC;QACrD;MACF;MACA,MAAMK,IAAI,GAAG,MAAM7B,WAAW,CAACwB,WAAW,CAAC;MAC3C,MAAMM,iBAAiB,GAAG;QACxBd,EAAE,EAAEa,IAAI,CAACZ,UAAU;QACnBE,IAAI,EAAEU,IAAI,CAACV,IAAI;QACfD,IAAI,EAAEf;MACR,CAAC;MACDF,oBAAoB,CAAC,uBAAuB6B,iBAAiB,CAACd,EAAE,EAAE,EAAE;QAAEe,IAAI,EAAE,iBAAiB;QAAEhB,QAAQ,EAAEe;MAAkB,CAAC,CAAC;MAC7HtB,aAAa,CAACwB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAEF,iBAAiB,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IACLd,UAAU;IACVE,gBAAgB;IAChBC,mBAAmB;IACnBa;EACF,CAAC;AACH;AAACjB,EAAA,CArDeF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}