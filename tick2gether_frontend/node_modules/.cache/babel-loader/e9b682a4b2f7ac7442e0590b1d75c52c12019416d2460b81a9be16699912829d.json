{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\napi.interceptors.request.use(config => {\n  const token = Cookies.get('token');\n  if (token) {\n    config.headers['Authorization'] = token;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const fetchTasks = userId => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\nexport const fetchUser = userId => api.get(`/user/${userId}`).then(res => res.data);\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const loginUser = async credentials => {\n  try {\n    console.log('Attempting to login with credentials:', credentials);\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response);\n    const token = response.headers['authorization'];\n    console.log('Response headers:', response.headers);\n    console.log('Storing token:', token);\n    if (token) {\n      Cookies.set('token', token, {\n        expires: 1\n      });\n    } else {\n      console.error('No token found in response headers');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token);\n  const response = await api.get('/user/me');\n  console.log('Current user:', response.data);\n  return response.data;\n};\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);","map":{"version":3,"names":["axios","Cookies","api","create","baseURL","withCredentials","interceptors","request","use","config","token","get","headers","error","Promise","reject","fetchTasks","userId","then","res","data","addTask","task","post","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","user","loginUser","credentials","console","log","response","set","expires","fetchCurrentUser","updateUser","deleteUser","addCategory","category"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\napi.interceptors.request.use(\n  config => {\n    const token = Cookies.get('token');\n    if (token) {\n      config.headers['Authorization'] = token;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport const fetchTasks = (userId) => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\nexport const fetchUser = (userId) => api.get(`/user/${userId}`).then(res => res.data);\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\nexport const loginUser = async (credentials) => {\n  try {\n    console.log('Attempting to login with credentials:', credentials);\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response);\n\n    const token = response.headers['authorization'];\n    console.log('Response headers:', response.headers);\n    console.log('Storing token:', token);\n    if (token) {\n      Cookies.set('token', token, { expires: 1 });\n    } else {\n      console.error('No token found in response headers');\n    }\n\n    return response.data;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token);\n  const response = await api.get('/user/me');\n  console.log('Current user:', response.data);\n  return response.data;\n};\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}