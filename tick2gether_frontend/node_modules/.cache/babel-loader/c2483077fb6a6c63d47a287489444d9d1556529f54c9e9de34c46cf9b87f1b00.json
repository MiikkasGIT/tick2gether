{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { updateTask } from '../api';\nimport { sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCategory = {\n  id: 1,\n  name: 'Default'\n};\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory,\n  handleDeleteTask,\n  userId\n}) {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n  useEffect(() => {\n    console.log('Todos updated:', todos);\n  }, [todos]);\n  const handleCheckboxChange = async id => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      // Aktualisiere das Backend über REST\n      await updateTask(updatedTask, userId);\n\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n        type: 'TASK_UPDATE',\n        task: updatedTask\n      });\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n  const handleDeleteClick = async id => {\n    console.log('Deleting task with ID:', id);\n    try {\n      await handleDeleteTask(id);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n  const handleDateChange = async (id, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${id}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n        type: 'TASK_UPDATE',\n        task: updatedTask\n      });\n      console.log('WebSocket update date successful');\n    } catch (error) {\n      console.error('Error updating date via WebSocket:', error);\n    }\n  };\n  const today = startOfToday();\n  const currentCategory = selectedCategory || defaultCategory;\n  const filteredTodos = todos.filter(todo => {\n    switch (currentCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === currentCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === currentCategory.id;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        // Sicherstellen, dass jeder Todo-Element einen eindeutigen Key hat\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => onEditTodo(todo),\n        isSelected: todo.taskId === selectedTodoId,\n        onDateChange: handleDateChange,\n        isDeleteMode: isDeleteMode,\n        userId: userId // Übergabe von userId\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"y7hXGgDEL6mLLQHq94VAZqd74Dw=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","ToDo","startOfToday","isAfter","updateTask","sendWebSocketMessage","jsxDEV","_jsxDEV","defaultCategory","id","name","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","handleDeleteTask","userId","_s","selectedTodoId","setSelectedTodoId","console","log","handleCheckboxChange","updatedTodos","map","todo","taskId","updatedTodo","completed","categoryId","updatedTask","find","type","task","error","handleDeleteClick","response","data","message","handleDateChange","date","purpose","Date","toISOString","today","currentCategory","filteredTodos","filter","planDate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleTodoClick","handleDelete","handleEditClick","isSelected","onDateChange","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { updateTask } from '../api';\nimport { sendWebSocketMessage } from '../websocket';\n\nconst defaultCategory = { id: 1, name: 'Default' };\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory, handleDeleteTask, userId }) {\n  const [selectedTodoId, setSelectedTodoId] = useState(null);\n\n  useEffect(() => {\n    console.log('Todos updated:', todos);\n  }, [todos]);\n\n  const handleCheckboxChange = async (id) => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      // Aktualisiere das Backend über REST\n      await updateTask(updatedTask, userId);\n\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_UPDATE', task: updatedTask });\n      console.log('WebSocket update task successful');\n    } catch (error) {\n      console.error('Error updating task via WebSocket:', error);\n    }\n  };\n\n  const handleDeleteClick = async (id) => {\n    console.log('Deleting task with ID:', id);\n    try {\n      await handleDeleteTask(id);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const handleDateChange = async (id, date, purpose) => {\n    console.log(`Updating ${purpose} date for ID: ${id}`);\n    const updatedTodos = todos.map(todo => {\n      if (todo.taskId === id) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === id);\n    try {\n      // Senden der WebSocket-Nachricht\n      sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_UPDATE', task: updatedTask });\n      console.log('WebSocket update date successful');\n    } catch (error) {\n      console.error('Error updating date via WebSocket:', error);\n    }\n  };\n\n  const today = startOfToday();\n\n  const currentCategory = selectedCategory || defaultCategory;\n\n  const filteredTodos = todos.filter(todo => {\n    switch (currentCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today) && todo.categoryId !== 7;\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === currentCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === currentCategory.id;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId} // Sicherstellen, dass jeder Todo-Element einen eindeutigen Key hat\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => setSelectedTodoId(todo.taskId === selectedTodoId ? null : todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => onEditTodo(todo)}\n            isSelected={todo.taskId === selectedTodoId}\n            onDateChange={handleDateChange}\n            isDeleteMode={isDeleteMode}\n            userId={userId} // Übergabe von userId\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}