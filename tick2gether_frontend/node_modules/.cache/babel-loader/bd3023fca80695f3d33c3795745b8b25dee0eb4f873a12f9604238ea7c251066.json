{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket'; // Removed sendUpdateCategoryMessage\nimport { categorizeTasks } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        ...updatedData\n      } = message;\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = {\n              ...prevTasks[taskIndex],\n              ...updatedData\n            };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, {\n              taskId,\n              ...updatedData\n            }];\n          }\n        }\n        return prevTasks;\n      });\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      // Update categories state with the new category if it's newly created\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(cat => cat.categoryId === addedTask.categoryId);\n        if (!categoryExists) {\n          fetchCategories(userId).then(fetchedCategories => {\n            const updatedCategories = fetchedCategories.map(category => ({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            }));\n            setCategories(updatedCategories);\n          });\n        }\n        return prevCategories;\n      });\n\n      // Update tasks state\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n        return uniqueTasks;\n      });\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    if (!selectedCategory) return;\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task);\n        return updatedTasks.filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId));\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        // Ensure 'categoryId' is used instead of 'id'\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject); // Select the new category after adding it\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    try {\n      await deleteCategory(id);\n      setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== id));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId] || []; // Ensure 'categoryId' is used\n\n  useEffect(() => {\n    console.log('Selected Category:', selectedCategory); // Debugging\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: filteredTasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.categoryId,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            handleDeleteCategory: handleDeleteCategory,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"2t0Kg1RNMzEa3CyxQazDIXsHWdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","deleteCategory","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","categorizeTasks","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Array","isArray","uniqueCategories","reduce","acc","category","some","cat","categoryId","push","icon","name","length","console","error","handleWebSocketMessage","message","log","type","taskId","updatedData","prevTasks","taskIndex","findIndex","task","updatedTasks","fetchIds","taskIds","map","categoryIds","handleAddNewTask","newTask","formattedTask","addedTask","prevCategories","categoryExists","then","updatedCategories","uniqueTasks","filter","index","self","t","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","id","handleAddCategory","newCategory","warn","data","newCategoryObject","handleDeleteCategory","toggleDeleteMode","prevMode","handleEditTask","categorizedTasks","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories, deleteCategory } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket'; // Removed sendUpdateCategoryMessage\nimport { categorizeTasks } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        if (Array.isArray(fetchedCategories)) {\n          const uniqueCategories = fetchedCategories.reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                categoryId: category.categoryId,\n                icon: iconMap[category.name] || customCategoryIcon,\n              });\n            }\n            return acc;\n          }, []);\n          setCategories(uniqueCategories);\n\n          if (uniqueCategories.length > 0) {\n            setSelectedCategory(uniqueCategories[0]);\n          } else {\n            setSelectedCategory(null); // Set to null if no categories exist\n          }\n        } else {\n          console.error('Fetched categories is not an array:', fetchedCategories);\n          setCategories([]);\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n    \n      const { type, taskId, ...updatedData } = message;\n    \n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedData };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, { taskId, ...updatedData }];\n          }\n        }\n        return prevTasks;\n      });\n    };\n    \n  \n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n  \n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n  \n      fetchIds();\n  \n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  \n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n  \n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n  \n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n  \n      // Update categories state with the new category if it's newly created\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(cat => cat.categoryId === addedTask.categoryId);\n        if (!categoryExists) {\n          fetchCategories(userId).then(fetchedCategories => {\n            const updatedCategories = fetchedCategories.map(category => ({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            }));\n            setCategories(updatedCategories);\n          });\n        }\n        return prevCategories;\n      });\n  \n      // Update tasks state\n      setTasks(prevTasks => {\n        const uniqueTasks = [...prevTasks, addedTask].filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n        return uniqueTasks;\n      });\n  \n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  \n\n  const handleSaveTask = async (updatedTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.categoryId || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks.filter((task, index, self) =>\n          index === self.findIndex((t) => t.taskId === task.taskId)\n        );\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId, // Ensure 'categoryId' is used instead of 'id'\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject); // Select the new category after adding it\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const handleDeleteCategory = async (id) => {\n    try {\n      await deleteCategory(id);\n      setCategories(prevCategories => prevCategories.filter(category => category.categoryId !== id));\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory?.categoryId] || []; // Ensure 'categoryId' is used\n\n  useEffect(() => {\n    console.log('Selected Category:', selectedCategory); // Debugging\n  }, [selectedCategory]);\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categoriesFromBackend={categories}\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.categoryId}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              handleDeleteCategory={handleDeleteCategory}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}