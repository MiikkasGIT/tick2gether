{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    const STANDARD_CATEGORIES = [{\n      id: 1,\n      name: 'All Tasks',\n      icon: iconMap['All Tasks'] || customCategoryIcon\n    }, {\n      id: 2,\n      name: 'Today',\n      icon: iconMap['Today'] || customCategoryIcon\n    }, {\n      id: 3,\n      name: 'Planned',\n      icon: iconMap['Planned'] || customCategoryIcon\n    }, {\n      id: 4,\n      name: 'Any Time',\n      icon: iconMap['Any Time'] || customCategoryIcon\n    }, {\n      id: 5,\n      name: 'Work',\n      icon: iconMap['Work'] || customCategoryIcon\n    }, {\n      id: 6,\n      name: 'Personal',\n      icon: iconMap['Personal'] || customCategoryIcon\n    }, {\n      id: 7,\n      name: 'Logbook',\n      icon: iconMap['Logbook'] || customCategoryIcon\n    }];\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched Categories:', fetchedCategories); // Debugging-Ausgabe\n\n        // Standardkategorien hinzufÃ¼gen, falls sie nicht vorhanden sind\n        const allCategories = [...STANDARD_CATEGORIES, ...fetchedCategories];\n        const uniqueCategories = allCategories.reduce((acc, category) => {\n          if (!acc.some(cat => cat.categoryId === category.id)) {\n            acc.push({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            });\n          }\n          return acc;\n        }, []).sort((a, b) => a.id - b.id);\n        console.log('Processed Categories:', uniqueCategories); // Debugging-Ausgabe\n        setCategories(uniqueCategories);\n        if (uniqueCategories.length > 0) {\n          setSelectedCategory(uniqueCategories[0]);\n        } else {\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  const filteredTasks = useMemo(() => {\n    if (!selectedCategory) return tasks;\n    switch (selectedCategory.name) {\n      case 'All Tasks':\n        return tasks.filter(task => !task.completed);\n      case 'Today':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Planned':\n        return tasks.filter(task => task.planDate !== null && !task.completed);\n      case 'Any Time':\n        return tasks.filter(task => task.planDate === null && !task.completed && task.categoryId === selectedCategory.categoryId);\n      case 'Work':\n      case 'Personal':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Logbook':\n        return tasks.filter(task => task.categoryId === 7 || task.completed);\n      default:\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n    }\n  }, [tasks, selectedCategory]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        userId: messageUserId,\n        taskId,\n        sharedUserIds,\n        type,\n        ...updatedData\n      } = message;\n      console.log('sharedUserIds:', sharedUserIds); // Debug-Ausgabe\n      console.log('Current userId:', userId); // Debug-Ausgabe\n\n      if (sharedUserIds && sharedUserIds.includes(userId)) {\n        setTasks(prevTasks => {\n          if (type === 'TASK_UPDATE') {\n            const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n            if (taskIndex !== -1) {\n              const updatedTasks = [...prevTasks];\n              updatedTasks[taskIndex] = {\n                ...prevTasks[taskIndex],\n                ...updatedData\n              };\n              console.log('Updated tasks:', updatedTasks);\n              return updatedTasks;\n            } else {\n              console.log('Adding new task:', {\n                taskId,\n                ...updatedData\n              });\n              return [...prevTasks, {\n                taskId,\n                ...updatedData\n              }];\n            }\n          }\n          return prevTasks;\n        });\n      } else {\n        console.log(`User ${userId} is not authorized to receive this task update.`);\n      }\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          const stompClient = connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n          return () => {\n            console.log('Disconnecting WebSocket for user ID:', userId);\n            disconnectWebSocket(stompClient);\n          };\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categories: categories // ÃberprÃ¼fen Sie, ob die Kategorien hier korrekt Ã¼bergeben werden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: filteredTasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory ? selectedCategory.categoryId : null,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"eiz9AjNw03uE8zyVHHrK4FOG/Rc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","STANDARD_CATEGORIES","id","name","icon","email","fetchedUserId","fetchedTasks","fetchedCategories","console","log","allCategories","uniqueCategories","reduce","acc","category","some","cat","categoryId","push","sort","a","b","length","error","filteredTasks","filter","task","completed","planDate","handleWebSocketMessage","message","messageUserId","taskId","sharedUserIds","type","updatedData","includes","prevTasks","taskIndex","findIndex","updatedTasks","fetchIds","taskIds","map","categoryIds","Array","isArray","stompClient","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","handleAddCategory","newCategory","data","newCategoryObject","prevCategories","toggleDeleteMode","prevMode","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    const STANDARD_CATEGORIES = [\n      { id: 1, name: 'All Tasks', icon: iconMap['All Tasks'] || customCategoryIcon },\n      { id: 2, name: 'Today', icon: iconMap['Today'] || customCategoryIcon },\n      { id: 3, name: 'Planned', icon: iconMap['Planned'] || customCategoryIcon },\n      { id: 4, name: 'Any Time', icon: iconMap['Any Time'] || customCategoryIcon },\n      { id: 5, name: 'Work', icon: iconMap['Work'] || customCategoryIcon },\n      { id: 6, name: 'Personal', icon: iconMap['Personal'] || customCategoryIcon },\n      { id: 7, name: 'Logbook', icon: iconMap['Logbook'] || customCategoryIcon },\n    ];\n\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched Categories:', fetchedCategories); // Debugging-Ausgabe\n\n        // Standardkategorien hinzufÃ¼gen, falls sie nicht vorhanden sind\n        const allCategories = [...STANDARD_CATEGORIES, ...fetchedCategories];\n        const uniqueCategories = allCategories.reduce((acc, category) => {\n          if (!acc.some(cat => cat.categoryId === category.id)) {\n            acc.push({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon,\n            });\n          }\n          return acc;\n        }, []).sort((a, b) => a.id - b.id);\n\n        console.log('Processed Categories:', uniqueCategories); // Debugging-Ausgabe\n        setCategories(uniqueCategories);\n\n        if (uniqueCategories.length > 0) {\n          setSelectedCategory(uniqueCategories[0]);\n        } else {\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  const filteredTasks = useMemo(() => {\n    if (!selectedCategory) return tasks;\n    switch (selectedCategory.name) {\n      case 'All Tasks':\n        return tasks.filter(task => !task.completed);\n      case 'Today':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Planned':\n        return tasks.filter(task => task.planDate !== null && !task.completed);\n      case 'Any Time':\n        return tasks.filter(task => task.planDate === null && !task.completed && task.categoryId === selectedCategory.categoryId);\n      case 'Work':\n      case 'Personal':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Logbook':\n        return tasks.filter(task => task.categoryId === 7 || task.completed);\n      default:\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n    }\n  }, [tasks, selectedCategory]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n    \n      const { userId: messageUserId, taskId, sharedUserIds, type, ...updatedData } = message;\n    \n      console.log('sharedUserIds:', sharedUserIds); // Debug-Ausgabe\n      console.log('Current userId:', userId); // Debug-Ausgabe\n    \n      if (sharedUserIds && sharedUserIds.includes(userId)) {\n        setTasks(prevTasks => {\n          if (type === 'TASK_UPDATE') {\n            const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n            if (taskIndex !== -1) {\n              const updatedTasks = [...prevTasks];\n              updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedData };\n              console.log('Updated tasks:', updatedTasks);\n              return updatedTasks;\n            } else {\n              console.log('Adding new task:', { taskId, ...updatedData });\n              return [...prevTasks, { taskId, ...updatedData }];\n            }\n          }\n          return prevTasks;\n        });\n      } else {\n        console.log(`User ${userId} is not authorized to receive this task update.`);\n      }\n    };\n  \n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n  \n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          const stompClient = connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n  \n          return () => {\n            console.log('Disconnecting WebSocket for user ID:', userId);\n            disconnectWebSocket(stompClient);\n          };\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n  \n      fetchIds();\n    }\n  }, [userId]);\n  \n\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n        <Categories\n          onSelectCategory={setSelectedCategory}\n          userId={userId}\n          categories={categories} // ÃberprÃ¼fen Sie, ob die Kategorien hier korrekt Ã¼bergeben werden\n        />\n\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory ? selectedCategory.categoryId : null}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}