{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nlet stompClient = null;\nexport const connectWebSocket = (userId, onTaskMessageReceived, onCategoryMessageReceived) => {\n  const socket = new SockJS('http://localhost:8080/ws');\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    // SockJS wird hier direkt verwendet\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000,\n    onConnect: frame => {\n      console.log('WebSocket connected');\n      try {\n        stompClient.subscribe(`/user/${userId}/queue/tasks`, message => {\n          const parsedMessage = JSON.parse(message.body);\n          console.log('Task message received for user:', userId, parsedMessage);\n          onTaskMessageReceived(parsedMessage);\n        });\n        console.log(`SUBSCRIBED to task topic: /user/${userId}/queue/tasks`);\n        stompClient.subscribe(`/user/${userId}/queue/categories`, message => {\n          const parsedMessage = JSON.parse(message.body);\n          console.log('Category message received for user:', userId, parsedMessage);\n          onCategoryMessageReceived(parsedMessage);\n        });\n        console.log(`SUBSCRIBED to category topic: /user/${userId}/queue/categories`);\n      } catch (error) {\n        console.error('Subscription error:', error);\n      }\n    },\n    onStompError: frame => {\n      console.error('Broker reported error: ' + frame.headers['message']);\n      console.error('Additional details: ' + frame.body);\n    },\n    onWebSocketClose: event => {\n      console.warn('WebSocket closed:', event);\n    },\n    onWebSocketError: error => {\n      console.error('WebSocket error:', error);\n    }\n  });\n  stompClient.activate();\n};\nexport const disconnectWebSocket = () => {\n  if (stompClient !== null) {\n    stompClient.deactivate();\n    console.log('WebSocket disconnected');\n  }\n};\nexport const sendWebSocketMessage = (destination, message) => {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: destination,\n      body: JSON.stringify(message)\n    });\n    console.log('Sending WebSocket message:', message);\n  } else {\n    console.error('WebSocket is not connected');\n  }\n};","map":{"version":3,"names":["Client","SockJS","stompClient","connectWebSocket","userId","onTaskMessageReceived","onCategoryMessageReceived","socket","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","frame","console","log","subscribe","message","parsedMessage","JSON","parse","body","error","onStompError","headers","onWebSocketClose","event","warn","onWebSocketError","activate","disconnectWebSocket","deactivate","sendWebSocketMessage","destination","connected","publish","stringify"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet stompClient = null;\n\nexport const connectWebSocket = (userId, onTaskMessageReceived, onCategoryMessageReceived) => {\n  const socket = new SockJS('http://localhost:8080/ws');\n  \n  stompClient = new Client({\n    webSocketFactory: () => socket, // SockJS wird hier direkt verwendet\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000,\n    onConnect: (frame) => {\n      console.log('WebSocket connected');\n      try {\n        stompClient.subscribe(`/user/${userId}/queue/tasks`, (message) => {\n          const parsedMessage = JSON.parse(message.body);\n          console.log('Task message received for user:', userId, parsedMessage);\n          onTaskMessageReceived(parsedMessage);\n        });\n        console.log(`SUBSCRIBED to task topic: /user/${userId}/queue/tasks`);\n\n        stompClient.subscribe(`/user/${userId}/queue/categories`, (message) => {\n          const parsedMessage = JSON.parse(message.body);\n          console.log('Category message received for user:', userId, parsedMessage);\n          onCategoryMessageReceived(parsedMessage);\n        });\n        console.log(`SUBSCRIBED to category topic: /user/${userId}/queue/categories`);\n      } catch (error) {\n        console.error('Subscription error:', error);\n      }\n    },\n    onStompError: (frame) => {\n      console.error('Broker reported error: ' + frame.headers['message']);\n      console.error('Additional details: ' + frame.body);\n    },\n    onWebSocketClose: (event) => {\n      console.warn('WebSocket closed:', event);\n    },\n    onWebSocketError: (error) => {\n      console.error('WebSocket error:', error);\n    }\n  });\n\n  stompClient.activate();\n};\n\nexport const disconnectWebSocket = () => {\n  if (stompClient !== null) {\n    stompClient.deactivate();\n    console.log('WebSocket disconnected');\n  }\n};\n\nexport const sendWebSocketMessage = (destination, message) => {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: destination,\n      body: JSON.stringify(message),\n    });\n    console.log('Sending WebSocket message:', message);\n  } else {\n    console.error('WebSocket is not connected');\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}