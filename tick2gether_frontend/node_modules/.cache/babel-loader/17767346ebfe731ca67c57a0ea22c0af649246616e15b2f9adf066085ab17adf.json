{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon\n        }));\n        setCategories(mappedCategories);\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    // Connect WebSocket\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        type,\n        taskId,\n        ...updatedTaskData\n      } = message;\n      if (type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = {\n              ...prevTasks[taskIndex],\n              ...updatedTaskData\n            };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, {\n              taskId,\n              ...updatedTaskData\n            }];\n          }\n        });\n      }\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      connectWebSocket(handleWebSocketMessage);\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const handleCheckboxChange = async taskId => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task:', {\n        ...updatedTask,\n        userId\n      });\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task date:', {\n        ...updatedTask,\n        userId\n      });\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            handleCheckboxChange: handleCheckboxChange,\n            handleTodoClick: taskId => setSelectedTodoId(taskId === selectedTodoId ? null : taskId),\n            handleDeleteClick: handleDeleteTask,\n            handleEditClick: handleEditTask,\n            isDeleteMode: isDeleteMode,\n            selectedTodoId: selectedTodoId,\n            onDateChange: handleDateChange,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"WZ2es564ueosmpeL3PaIwMO0C0U=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","sendUpdateTaskMessage","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","error","handleWebSocketMessage","message","console","log","type","taskId","updatedTaskData","prevTasks","taskIndex","findIndex","task","updatedTasks","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","filter","handleAddCategory","newCategory","categoryExists","some","cat","warn","data","newCategoryObject","prevCategories","toggleDeleteMode","prevMode","handleEditTask","handleCheckboxChange","updatedTodos","todo","updatedTodo","completed","find","handleDateChange","date","purpose","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","handleTodoClick","setSelectedTodoId","selectedTodoId","handleDeleteClick","handleEditClick","onDateChange","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon\n} from '../icons';\nimport {\n  fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage, sendUpdateTaskMessage } from '../websocket';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        const mappedCategories = fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon,\n        }));\n        setCategories(mappedCategories);\n\n        if (mappedCategories.length > 0) {\n          setSelectedCategory(mappedCategories[0]);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    // Connect WebSocket\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n\n      const { type, taskId, ...updatedTaskData } = message;\n\n      if (type === 'TASK_UPDATE') {\n        setTasks(prevTasks => {\n          const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n          if (taskIndex !== -1) {\n            const updatedTasks = [...prevTasks];\n            updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedTaskData };\n            return updatedTasks;\n          } else {\n            return [...prevTasks, { taskId, ...updatedTaskData }];\n          }\n        });\n      }\n    };\n\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      connectWebSocket(handleWebSocketMessage);\n\n      return () => {\n        console.log('Disconnecting WebSocket for user ID:', userId);\n        disconnectWebSocket();\n      };\n    }\n  }, [userId]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory?.id || currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task)));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n      sendWebSocketMessage(`/app/deleteTask/${id}`, { type: 'TASK_DELETE', taskId: id });\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, { type: 'CATEGORY_UPDATE', category: newCategoryObject });\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const handleCheckboxChange = async (taskId) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task:', { ...updatedTask, userId });\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      console.log('Sending WebSocket message to update task date:', { ...updatedTask, userId });\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categoriesFromBackend={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              handleCheckboxChange={handleCheckboxChange}\n              handleTodoClick={(taskId) => setSelectedTodoId(taskId === selectedTodoId ? null : taskId)}\n              handleDeleteClick={handleDeleteTask}\n              handleEditClick={handleEditTask}\n              isDeleteMode={isDeleteMode}\n              selectedTodoId={selectedTodoId}\n              onDateChange={handleDateChange}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}