{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCategories = [{\n  id: 1,\n  name: 'All Tasks',\n  icon: PlannedIcon\n}, {\n  id: 2,\n  name: 'Today',\n  icon: PlannedIcon\n}, {\n  id: 3,\n  name: 'Planned',\n  icon: PlannedIcon\n}, {\n  id: 4,\n  name: 'Any Time',\n  icon: PlannedIcon\n}, {\n  id: 5,\n  name: 'Work',\n  icon: PlannedIcon\n}, {\n  id: 6,\n  name: 'Personal',\n  icon: PlannedIcon\n}, {\n  id: 7,\n  name: 'Logbook',\n  icon: PlannedIcon\n}];\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email); // User ID korrekt abrufen\n        if (fetchedUserId) {\n          console.log('Fetched userId:', fetchedUserId);\n          setUserId(fetchedUserId);\n          const tasks = await fetchTasks();\n          console.log('Fetched tasks:', tasks);\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId); // Fetch categories from the backend\n          console.log('Fetched categories:', fetchedCategories);\n          setCategories([...initialCategories, ...fetchedCategories]);\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n  const initializeWebSocket = useCallback(userId => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n      webSocketRef.current = true;\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n  }, [userId, initializeWebSocket]);\n  const handleAddNewTask = async newTask => {\n    try {\n      console.log('Adding new task:', newTask);\n      console.log('User ID:', userId);\n      const addedTask = await addTask(newTask, userId);\n      setShowAddTaskPopUp(false);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, {\n        type: 'TASK_ADD',\n        task: addedTask\n      });\n      console.log('WebSocket message sent: ', {\n        type: 'TASK_ADD',\n        task: addedTask\n      });\n      console.log('Task added successfully:', addedTask);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(task => task.taskId === addedTask.taskId);\n        if (!taskExists) {\n          return [...prevTasks, addedTask];\n        }\n        return prevTasks;\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        // Ensure userId is included\n        taskId: currentTask.taskId\n      };\n      console.log('Updating task:', taskToUpdate);\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, {\n        type: 'TASK_UPDATE',\n        task: updated\n      });\n      console.log('WebSocket message sent: ', {\n        type: 'TASK_UPDATE',\n        task: updated\n      });\n      console.log('Task updated successfully:', updated);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === updated.taskId ? updated : task));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      console.log('Deleting task with ID:', id);\n      await deleteTask(id, userId);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n      console.log('WebSocket message sent: ', {\n        type: 'TASK_DELETE',\n        taskId: id\n      });\n      console.log('Task deleted successfully:', id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      console.log('Adding new category:', newCategory);\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: PlannedIcon,\n        userId: data.userId\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage(`/user/${userId}/topic/categories`, {\n        type: 'CATEGORY_ADD',\n        category: newCategoryObject\n      });\n      console.log('WebSocket message sent: ', {\n        type: 'CATEGORY_ADD',\n        category: newCategoryObject\n      });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const onTaskMessageReceived = message => {\n    console.log('WebSocket task message received:', message);\n    const {\n      type,\n      task,\n      taskId\n    } = message;\n    if (!type) {\n      console.error('Unknown message type:', type);\n      return;\n    }\n    console.log('Received message:', message);\n    if (type === 'TASK_ADD' || type === 'TASK_UPDATE') {\n      if (!task) {\n        console.warn('Invalid task received:', task);\n        return;\n      }\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (type === 'TASK_ADD' && !taskExists) {\n          return [...prevTasks, task];\n        } else if (type === 'TASK_UPDATE') {\n          return prevTasks.map(t => t.taskId === task.taskId ? task : t);\n        }\n        return prevTasks;\n      });\n    } else if (type === 'TASK_DELETE') {\n      if (!taskId) {\n        console.warn('Invalid taskId received for delete:', taskId);\n        return;\n      }\n      setTasks(prevTasks => prevTasks.filter(t => t.taskId !== taskId));\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  };\n  const onCategoryMessageReceived = message => {\n    console.log('WebSocket category message received:', message);\n    const {\n      type,\n      category,\n      categoryId\n    } = message;\n    if (!type) {\n      console.error('Unknown message type:', type);\n      return;\n    }\n    console.log('Received message:', message);\n    if (type === 'CATEGORY_ADD' || type === 'CATEGORY_SHARE') {\n      // HinzufÃ¼gen von CATEGORY_SHARE\n      if (!category) {\n        console.warn('Invalid category received:', category);\n        return;\n      }\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(c => c.id === category.categoryId);\n        if (!categoryExists) {\n          return [...prevCategories, {\n            ...category,\n            icon: PlannedIcon\n          }];\n        }\n        return prevCategories;\n      });\n    } else if (type === 'CATEGORY_UPDATE') {\n      setCategories(prevCategories => prevCategories.map(c => c.id === category.categoryId ? {\n        ...category,\n        icon: PlannedIcon\n      } : c));\n    } else if (type === 'CATEGORY_DELETE') {\n      if (!categoryId) {\n        console.warn('Invalid categoryId received for delete:', categoryId);\n        return;\n      }\n      setCategories(prevCategories => prevCategories.filter(c => c.id !== categoryId));\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      onClose: () => setShowAddTaskPopUp(false),\n      currentCategoryId: selectedCategory.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && currentTask && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"g7gvEG7G2B4IAQ2qxhlfDYtd20k=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","PlannedIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","initialCategories","id","name","icon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","fetchUserAndTasksAndCategories","email","fetchedUserId","console","log","fetchedCategories","error","initializeWebSocket","current","onTaskMessageReceived","onCategoryMessageReceived","handleAddNewTask","newTask","addedTask","type","task","prevTasks","taskExists","some","taskId","handleSaveTask","updatedTask","taskToUpdate","updated","map","handleDeleteTask","filter","handleAddCategory","newCategory","data","newCategoryObject","categoryId","prevCategories","category","toggleDeleteMode","prevMode","handleEditTask","message","warn","t","categoryExists","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","currentCategoryId","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { PlannedIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, sendWebSocketMessage } from '../websocket';\n\nconst initialCategories = [\n  { id: 1, name: 'All Tasks', icon: PlannedIcon },\n  { id: 2, name: 'Today', icon: PlannedIcon },\n  { id: 3, name: 'Planned', icon: PlannedIcon },\n  { id: 4, name: 'Any Time', icon: PlannedIcon },\n  { id: 5, name: 'Work', icon: PlannedIcon },\n  { id: 6, name: 'Personal', icon: PlannedIcon },\n  { id: 7, name: 'Logbook', icon: PlannedIcon },\n];\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(initialCategories);\n  const [selectedCategory, setSelectedCategory] = useState(initialCategories[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);  // User ID korrekt abrufen\n        if (fetchedUserId) {\n          console.log('Fetched userId:', fetchedUserId);\n          setUserId(fetchedUserId);\n          const tasks = await fetchTasks();\n          console.log('Fetched tasks:', tasks);\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId); // Fetch categories from the backend\n          console.log('Fetched categories:', fetchedCategories);\n          setCategories([...initialCategories, ...fetchedCategories]);\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n\n  const initializeWebSocket = useCallback((userId) => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n      webSocketRef.current = true;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n  }, [userId, initializeWebSocket]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      console.log('Adding new task:', newTask);\n      console.log('User ID:', userId);\n      const addedTask = await addTask(newTask, userId);\n      setShowAddTaskPopUp(false);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, { type: 'TASK_ADD', task: addedTask });\n      console.log('WebSocket message sent: ', { type: 'TASK_ADD', task: addedTask });\n      console.log('Task added successfully:', addedTask);\n\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(task => task.taskId === addedTask.taskId);\n        if (!taskExists) {\n          return [...prevTasks, addedTask];\n        }\n        return prevTasks;\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId, // Ensure userId is included\n        taskId: currentTask.taskId,\n      };\n      console.log('Updating task:', taskToUpdate);\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, { type: 'TASK_UPDATE', task: updated });\n      console.log('WebSocket message sent: ', { type: 'TASK_UPDATE', task: updated });\n      console.log('Task updated successfully:', updated);\n\n      setTasks(prevTasks =>\n        prevTasks.map(task => (task.taskId === updated.taskId ? updated : task))\n      );\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      console.log('Deleting task with ID:', id);\n      await deleteTask(id, userId);\n      sendWebSocketMessage(`/user/${userId}/topic/tasks`, { type: 'TASK_DELETE', taskId: id });\n      console.log('WebSocket message sent: ', { type: 'TASK_DELETE', taskId: id });\n      console.log('Task deleted successfully:', id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      console.log('Adding new category:', newCategory);\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: PlannedIcon,\n        userId: data.userId,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage(`/user/${userId}/topic/categories`, { type: 'CATEGORY_ADD', category: newCategoryObject });\n      console.log('WebSocket message sent: ', { type: 'CATEGORY_ADD', category: newCategoryObject });\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const onTaskMessageReceived = (message) => {\n    console.log('WebSocket task message received:', message);\n    const { type, task, taskId } = message;\n\n    if (!type) {\n      console.error('Unknown message type:', type);\n      return;\n    }\n\n    console.log('Received message:', message);\n\n    if (type === 'TASK_ADD' || type === 'TASK_UPDATE') {\n      if (!task) {\n        console.warn('Invalid task received:', task);\n        return;\n      }\n\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (type === 'TASK_ADD' && !taskExists) {\n          return [...prevTasks, task];\n        } else if (type === 'TASK_UPDATE') {\n          return prevTasks.map(t => (t.taskId === task.taskId ? task : t));\n        }\n        return prevTasks;\n      });\n    } else if (type === 'TASK_DELETE') {\n      if (!taskId) {\n        console.warn('Invalid taskId received for delete:', taskId);\n        return;\n      }\n      setTasks(prevTasks => prevTasks.filter(t => t.taskId !== taskId));\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  };\n\n  \nconst onCategoryMessageReceived = (message) => {\n  console.log('WebSocket category message received:', message);\n  const { type, category, categoryId } = message;\n\n  if (!type) {\n    console.error('Unknown message type:', type);\n    return;\n  }\n\n  console.log('Received message:', message);\n\n  if (type === 'CATEGORY_ADD' || type === 'CATEGORY_SHARE') { // HinzufÃ¼gen von CATEGORY_SHARE\n    if (!category) {\n      console.warn('Invalid category received:', category);\n      return;\n    }\n\n    setCategories(prevCategories => {\n      const categoryExists = prevCategories.some(c => c.id === category.categoryId);\n      if (!categoryExists) {\n        return [...prevCategories, { ...category, icon: PlannedIcon }];\n      }\n      return prevCategories;\n    });\n  } else if (type === 'CATEGORY_UPDATE') {\n    setCategories(prevCategories =>\n      prevCategories.map(c => (c.id === category.categoryId ? { ...category, icon: PlannedIcon } : c))\n    );\n  } else if (type === 'CATEGORY_DELETE') {\n    if (!categoryId) {\n      console.warn('Invalid categoryId received for delete:', categoryId);\n      return;\n    }\n    setCategories(prevCategories => prevCategories.filter(c => c.id !== categoryId));\n  } else {\n    console.error('Unknown message type:', type);\n  }\n};\n\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categories={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          onClose={() => setShowAddTaskPopUp(false)}\n          currentCategoryId={selectedCategory.id}\n        />\n      )}\n      {showEditTaskPopUp && currentTask && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}