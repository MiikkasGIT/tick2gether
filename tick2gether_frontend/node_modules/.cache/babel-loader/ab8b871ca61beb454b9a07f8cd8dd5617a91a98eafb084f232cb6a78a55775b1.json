{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{format}from'date-fns';import{AddTodoIcon,PlanTaskIcon,PlannedIcon}from'../icons';import Calendar from'./Calendar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddTaskPopUp(_ref){let{onAddTask,onClose,currentCategoryId}=_ref;const[taskText,setTaskText]=useState('');const[planDate,setPlanDate]=useState(null);const[deadlineDate,setDeadlineDate]=useState(null);const[showCalendar,setShowCalendar]=useState(false);const[showTooltip,setShowTooltip]=useState(false);const[calendarPurpose,setCalendarPurpose]=useState(null);// 'plan' or 'deadline'\nconst ref=useRef(null);useEffect(()=>{function handleClickOutside(event){if(ref.current&&!ref.current.contains(event.target)){onClose();}}document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[ref,onClose]);const handleAddTask=async e=>{e.preventDefault();if(taskText.trim()===''){setShowTooltip(true);return;}const newTask={text:taskText,categoryId:currentCategoryId||null,planDate:planDate?format(planDate,'yyyy-MM-dd'):null,deadlineDate:deadlineDate?format(deadlineDate,'yyyy-MM-dd'):null,sharedUserIds:[]};await onAddTask(newTask);setTaskText('');setPlanDate(null);setDeadlineDate(null);setShowTooltip(false);onClose();};const handleDateChange=date=>{if(calendarPurpose==='plan'){setPlanDate(date);}else if(calendarPurpose==='deadline'){setDeadlineDate(date);}setShowCalendar(false);};return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\",children:/*#__PURE__*/_jsx(\"div\",{ref:ref,className:\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"flex flex-col space-y-4\",onSubmit:handleAddTask,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type in what you have to do\",className:\"flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom \".concat(showTooltip?'border-red-500':'border-gray-300'),value:taskText,onChange:e=>setTaskText(e.target.value),style:{minWidth:'300px'}// Adjust the minimum width for larger screens\n}),showTooltip&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\",children:\"To Do Input cannot be empty.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\",onClick:()=>{setCalendarPurpose('deadline');setShowCalendar(true);},style:{flex:'1 1 0'},children:[/*#__PURE__*/_jsx(PlanTaskIcon,{className:\"h-5 w-5\"}),deadlineDate?format(new Date(deadlineDate),'MMMM d'):'Deadline']}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>{setCalendarPurpose('plan');setShowCalendar(true);},className:\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\",style:{flex:'1 1 0'},children:[/*#__PURE__*/_jsx(PlannedIcon,{className:\"h-5 w-5 text-pinkCustom\"}),planDate?format(new Date(planDate),'MMMM d'):'Plan']}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\",style:{flex:'1 1 0'},children:[/*#__PURE__*/_jsx(AddTodoIcon,{className:\"h-5 w-5\"}),\"Add Task\"]})]}),showCalendar&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-0 mt-2\",children:/*#__PURE__*/_jsx(Calendar,{selectedDate:calendarPurpose==='plan'?planDate:deadlineDate,setSelectedDate:handleDateChange,setShowCalendar:setShowCalendar})})]})})});}","map":{"version":3,"names":["React","useState","useRef","useEffect","format","AddTodoIcon","PlanTaskIcon","PlannedIcon","Calendar","jsx","_jsx","jsxs","_jsxs","AddTaskPopUp","_ref","onAddTask","onClose","currentCategoryId","taskText","setTaskText","planDate","setPlanDate","deadlineDate","setDeadlineDate","showCalendar","setShowCalendar","showTooltip","setShowTooltip","calendarPurpose","setCalendarPurpose","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTask","e","preventDefault","trim","newTask","text","categoryId","sharedUserIds","handleDateChange","date","className","children","onSubmit","type","placeholder","concat","value","onChange","style","minWidth","onClick","flex","Date","selectedDate","setSelectedDate"],"sources":["/Users/miikkakoensler/Downloads/Tick2GetherProject/tick2gether_frontend/src/components/AddTaskPopUp.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { AddTodoIcon, PlanTaskIcon, PlannedIcon } from '../icons';\nimport Calendar from './Calendar';\n\nexport default function AddTaskPopUp({ onAddTask, onClose, currentCategoryId }) {\n  const [taskText, setTaskText] = useState('');\n  const [planDate, setPlanDate] = useState(null);\n  const [deadlineDate, setDeadlineDate] = useState(null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [calendarPurpose, setCalendarPurpose] = useState(null); // 'plan' or 'deadline'\n  const ref = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClose]);\n\n  const handleAddTask = async (e) => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    const newTask = {\n      text: taskText,\n      categoryId: currentCategoryId || null,\n      planDate: planDate ? format(planDate, 'yyyy-MM-dd') : null,\n      deadlineDate: deadlineDate ? format(deadlineDate, 'yyyy-MM-dd') : null,\n      sharedUserIds: []\n    };\n\n    await onAddTask(newTask); \n    \n    setTaskText('');\n    setPlanDate(null);\n    setDeadlineDate(null);\n    setShowTooltip(false);\n    onClose();\n  };\n\n  const handleDateChange = (date) => {\n    if (calendarPurpose === 'plan') {\n      setPlanDate(date);\n    } else if (calendarPurpose === 'deadline') {\n      setDeadlineDate(date);\n    }\n    setShowCalendar(false);\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\">\n      <div ref={ref} className=\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\">\n        <form className=\"flex flex-col space-y-4\" onSubmit={handleAddTask}>\n          <input\n            type=\"text\"\n            placeholder=\"Type in what you have to do\"\n            className={`flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`}\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n            style={{ minWidth: '300px' }} // Adjust the minimum width for larger screens\n          />\n          {showTooltip && (\n            <div className=\"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\">\n              To Do Input cannot be empty.\n            </div>\n          )}\n          <div className=\"flex space-x-2\">\n            <button\n              type=\"button\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\"\n              onClick={() => {\n                setCalendarPurpose('deadline');\n                setShowCalendar(true);\n              }}\n              style={{ flex: '1 1 0' }}\n            >\n              <PlanTaskIcon className=\"h-5 w-5\" />\n              {deadlineDate ? format(new Date(deadlineDate), 'MMMM d') : 'Deadline'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setCalendarPurpose('plan');\n                setShowCalendar(true);\n              }}\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              <PlannedIcon className=\"h-5 w-5 text-pinkCustom\" />\n              {planDate ? format(new Date(planDate), 'MMMM d') : 'Plan'}\n            </button>\n            <button\n              type=\"submit\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              <AddTodoIcon className=\"h-5 w-5\" />\n              Add Task\n            </button>\n          </div>\n          {showCalendar && (\n            <div className=\"absolute right-0 mt-2\">\n              <Calendar\n                selectedDate={calendarPurpose === 'plan' ? planDate : deadlineDate}\n                setSelectedDate={handleDateChange}\n                setShowCalendar={setShowCalendar}\n              />\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}