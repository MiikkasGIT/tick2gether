{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched Categories:', fetchedCategories); // Debugging-Ausgabe\n\n        const sortedCategories = fetchedCategories.reduce((acc, category) => {\n          if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n            acc.push({\n              ...category,\n              icon: iconMap[category.name] || customCategoryIcon\n            });\n          }\n          return acc;\n        }, []).sort((a, b) => a.categoryId - b.categoryId);\n        setCategories(sortedCategories);\n        if (sortedCategories.length > 0) {\n          setSelectedCategory(sortedCategories[0]);\n        } else {\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  const filteredTasks = useMemo(() => {\n    if (!selectedCategory) return tasks;\n    switch (selectedCategory.name) {\n      case 'All Tasks':\n        return tasks.filter(task => !task.completed);\n      case 'Today':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Planned':\n        return tasks.filter(task => task.planDate !== null && !task.completed);\n      case 'Any Time':\n        return tasks.filter(task => task.planDate === null && !task.completed && task.categoryId === selectedCategory.categoryId);\n      case 'Work':\n      case 'Personal':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Logbook':\n        return tasks.filter(task => task.categoryId === 7 || task.completed);\n      default:\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n    }\n  }, [tasks, selectedCategory]);\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      const {\n        userId: messageUserId,\n        taskId,\n        sharedUserIds,\n        type,\n        ...updatedData\n      } = message;\n      console.log('sharedUserIds:', sharedUserIds); // Debug-Ausgabe\n      console.log('Current userId:', userId); // Debug-Ausgabe\n\n      if (sharedUserIds.includes(userId)) {\n        setTasks(prevTasks => {\n          if (type === 'TASK_UPDATE') {\n            const taskIndex = prevTasks.findIndex(task => task.taskId === numericTaskId);\n            if (taskIndex !== -1) {\n              const updatedTasks = [...prevTasks];\n              updatedTasks[taskIndex] = {\n                ...prevTasks[taskIndex],\n                ...updatedData\n              };\n              console.log('Updated tasks:', updatedTasks);\n              return updatedTasks;\n            } else {\n              console.log('Adding new task:', {\n                taskId: numericTaskId,\n                ...updatedData\n              });\n              return [...prevTasks, {\n                taskId: numericTaskId,\n                ...updatedData\n              }];\n            }\n          }\n          return prevTasks;\n        });\n      } else {\n        console.log(`User ${userId} is not authorized to receive this task update.`);\n      }\n    };\n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          const stompClient = connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n          return () => {\n            console.log('Disconnecting WebSocket for user ID:', userId);\n            disconnectWebSocket(stompClient);\n          };\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n      fetchIds();\n    }\n  }, [userId]);\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: currentTask.categoryId\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task);\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categories: categories // Aktualisiere hier, um sicherzustellen, dass die Kategorien korrekt Ã¼bergeben werden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: filteredTasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory ? selectedCategory.categoryId : null,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      categories: categories,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"eiz9AjNw03uE8zyVHHrK4FOG/Rc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","console","log","sortedCategories","reduce","acc","category","some","cat","categoryId","push","icon","name","sort","a","b","length","error","filteredTasks","filter","task","completed","planDate","handleWebSocketMessage","message","messageUserId","taskId","sharedUserIds","type","updatedData","includes","prevTasks","taskIndex","findIndex","numericTaskId","updatedTasks","fetchIds","taskIds","map","categoryIds","Array","isArray","stompClient","handleAddNewTask","newTask","formattedTask","addedTask","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","id","handleAddCategory","newCategory","data","newCategoryObject","prevCategories","toggleDeleteMode","prevMode","handleEditTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (fetchedUserId) {\n        setUserId(fetchedUserId);\n\n        const fetchedTasks = await fetchTasks();\n        setTasks(fetchedTasks);\n\n        const fetchedCategories = await fetchCategories(fetchedUserId);\n        console.log('Fetched Categories:', fetchedCategories); // Debugging-Ausgabe\n\n        const sortedCategories = fetchedCategories\n          .reduce((acc, category) => {\n            if (!acc.some(cat => cat.categoryId === category.categoryId)) {\n              acc.push({\n                ...category,\n                icon: iconMap[category.name] || customCategoryIcon,\n              });\n            }\n            return acc;\n          }, [])\n          .sort((a, b) => a.categoryId - b.categoryId);\n\n        setCategories(sortedCategories);\n\n        if (sortedCategories.length > 0) {\n          setSelectedCategory(sortedCategories[0]);\n        } else {\n          setSelectedCategory(null);\n        }\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  const filteredTasks = useMemo(() => {\n    if (!selectedCategory) return tasks;\n    switch (selectedCategory.name) {\n      case 'All Tasks':\n        return tasks.filter(task => !task.completed);\n      case 'Today':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Planned':\n        return tasks.filter(task => task.planDate !== null && !task.completed);\n      case 'Any Time':\n        return tasks.filter(task => task.planDate === null && !task.completed && task.categoryId === selectedCategory.categoryId);\n      case 'Work':\n      case 'Personal':\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n      case 'Logbook':\n        return tasks.filter(task => task.categoryId === 7 || task.completed);\n      default:\n        return tasks.filter(task => task.categoryId === selectedCategory.categoryId && !task.completed);\n    }\n  }, [tasks, selectedCategory]);\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n  \n      const { userId: messageUserId, taskId, sharedUserIds, type, ...updatedData } = message;\n  \n      console.log('sharedUserIds:', sharedUserIds); // Debug-Ausgabe\n      console.log('Current userId:', userId); // Debug-Ausgabe\n  \n  \n      if (sharedUserIds.includes(userId)) {\n        setTasks(prevTasks => {\n          if (type === 'TASK_UPDATE') {\n            const taskIndex = prevTasks.findIndex(task => task.taskId === numericTaskId);\n            if (taskIndex !== -1) {\n              const updatedTasks = [...prevTasks];\n              updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedData };\n              console.log('Updated tasks:', updatedTasks);\n              return updatedTasks;\n            } else {\n              console.log('Adding new task:', { taskId: numericTaskId, ...updatedData });\n              return [...prevTasks, { taskId: numericTaskId, ...updatedData }];\n            }\n          }\n          return prevTasks;\n        });\n      } else {\n        console.log(`User ${userId} is not authorized to receive this task update.`);\n      }\n    };\n  \n    if (userId) {\n      console.log('Connecting WebSocket for user ID:', userId);\n  \n      const fetchIds = async () => {\n        try {\n          const fetchedTasks = await fetchTasks();\n          const fetchedCategories = await fetchCategories(userId);\n          const taskIds = fetchedTasks.map(task => task.taskId);\n          const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n          const stompClient = connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n  \n          return () => {\n            console.log('Disconnecting WebSocket for user ID:', userId);\n            disconnectWebSocket(stompClient);\n          };\n        } catch (error) {\n          console.error('Error fetching IDs for WebSocket:', error);\n        }\n      };\n  \n      fetchIds();\n    }\n  }, [userId]);\n  \n\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.categoryId,\n        userId: userId\n      };\n      console.log(\"Formatted Task before sending to backend:\", formattedTask);\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: currentTask.categoryId,\n      };\n      console.log(\"Task to Update before sending to backend:\", taskToUpdate);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => (task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n        return updatedTasks;\n      });\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        categoryId: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categories={categories} // Aktualisiere hier, um sicherzustellen, dass die Kategorien korrekt Ã¼bergeben werden\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={filteredTasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory ? selectedCategory.categoryId : null}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          categories={categories}\n          onClose={() => setShowAddTaskPopUp(false)}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}