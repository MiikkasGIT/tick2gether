{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, SparkleLightIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nconst customCategoryLightIcon = SparkleLightIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n  const initializeWebSocket = userId => {\n    if (webSocketRef.current) {\n      console.log('WebSocket already connected');\n      return;\n    }\n    connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n    webSocketRef.current = true; // Markiere, dass WebSocket verbunden ist\n  };\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n    return () => {\n      disconnectWebSocket();\n      webSocketRef.current = null;\n    };\n  }, [userId]);\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n            isSelected: false,\n            fullWidth: false,\n            showDelete: false\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId)\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      // Kein WebSocket-Nachricht senden, da nur Updates empfangen werden\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId\n      };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === updated.taskId ? updated : task));\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId, userId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const onTaskMessageReceived = message => {\n    console.log('Task update received:', message);\n    // Hier kannst du Logik hinzufügen, um empfangene Aufgaben-Updates zu verarbeiten\n    setTasks(prevTasks => [...prevTasks, message]);\n  };\n  const onCategoryMessageReceived = message => {\n    console.log('Category update received:', message);\n    // Hier kannst du Logik hinzufügen, um empfangene Kategorisierungs-Updates zu verarbeiten\n    setCategories(prevCategories => [...prevCategories, message]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: tasks,\n      onEdit: setCurrentTask,\n      onDelete: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n      onAddTask: () => setShowAddTaskPopUp(true),\n      onAddCategory: () => setShowAddCategoryPopUp(true),\n      isDeleteMode: isDeleteMode,\n      setIsDeleteMode: setIsDeleteMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onClose: () => setShowAddTaskPopUp(false),\n      onAddTask: handleAddNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onClose: () => setShowEditTaskPopUp(false),\n      onSave: handleSaveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onClose: () => setShowAddCategoryPopUp(false),\n      onAddCategory: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"P3H4CItIa3fiypHnliCTG0m5pII=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","SparkleLightIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","customCategoryLightIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","webSocketRef","initializeWebSocket","current","console","log","onTaskMessageReceived","onCategoryMessageReceived","fetchUserAndTasksAndCategories","email","fetchedUserId","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","isSelected","fullWidth","showDelete","length","error","handleAddNewTask","newTask","formattedTask","Number","addedTask","prevTasks","handleSaveTask","updatedTask","taskToUpdate","taskId","updated","task","handleDeleteTask","filter","message","prevCategories","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","onAddTask","onAddCategory","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon,\n  AnyTimeIcon,\n  PersonalIcon,\n  PlannedIcon,\n  SparkleIcon,\n  SparkleLightIcon,\n  TodayIcon,\n  WorkIcon,\n  BookIcon\n} from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket } from '../websocket';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\nconst customCategoryLightIcon = SparkleLightIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  const initializeWebSocket = (userId) => {\n    if (webSocketRef.current) {\n      console.log('WebSocket already connected');\n      return;\n    }\n    connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n    webSocketRef.current = true; // Markiere, dass WebSocket verbunden ist\n  };\n\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n\n    return () => {\n      disconnectWebSocket();\n      webSocketRef.current = null;\n    };\n  }, [userId]);\n\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n            isSelected: false,\n            fullWidth: false,\n            showDelete: false,\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = { ...newTask, categoryId: Number(newTask.categoryId) };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      // Kein WebSocket-Nachricht senden, da nur Updates empfangen werden\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = { ...updatedTask, userId: userId, taskId: currentTask.taskId };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n\n      setTasks(prevTasks =>\n        prevTasks.map(task => (task.taskId === updated.taskId ? updated : task))\n      );\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId, userId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const onTaskMessageReceived = (message) => {\n    console.log('Task update received:', message);\n    // Hier kannst du Logik hinzufügen, um empfangene Aufgaben-Updates zu verarbeiten\n    setTasks(prevTasks => [...prevTasks, message]);\n  };\n\n  const onCategoryMessageReceived = (message) => {\n    console.log('Category update received:', message);\n    // Hier kannst du Logik hinzufügen, um empfangene Kategorisierungs-Updates zu verarbeiten\n    setCategories(prevCategories => [...prevCategories, message]);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Categories categories={categories} />\n      <ToDoList tasks={tasks} onEdit={setCurrentTask} onDelete={handleDeleteTask} />\n      <ToDoActions\n        onAddTask={() => setShowAddTaskPopUp(true)}\n        onAddCategory={() => setShowAddCategoryPopUp(true)}\n        isDeleteMode={isDeleteMode}\n        setIsDeleteMode={setIsDeleteMode}\n      />\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onClose={() => setShowAddTaskPopUp(false)}\n          onAddTask={handleAddNewTask}\n        />\n      )}\n      {showEditTaskPopUp && (\n        <EditTaskPopUp\n          task={currentTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n          onSave={handleSaveTask}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onClose={() => setShowAddCategoryPopUp(false)}\n          onAddCategory={addCategory}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SACEC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,SAAS,EACTC,QAAQ,EACRC,QAAQ,QACH,UAAU;AACjB,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,eAAe,QAAQ,QAAQ;AAC3H,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,OAAO,GAAG;EACd,WAAW,EAAErB,YAAY;EACzB,OAAO,EAAEM,SAAS;EAClB,SAAS,EAAEH,WAAW;EACtB,UAAU,EAAEF,WAAW;EACvB,MAAM,EAAEM,QAAQ;EAChB,UAAU,EAAEL,YAAY;EACxB,SAAS,EAAEM;AACb,CAAC;AAED,MAAMc,kBAAkB,GAAGlB,WAAW;AACtC,MAAMmB,uBAAuB,GAAGlB,gBAAgB;AAEhD,SAASmB,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqD,MAAM,EAAEC,SAAS,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMuD,QAAQ,GAAGpD,WAAW,CAAC,CAAC;EAC9B,MAAMqD,YAAY,GAAGtD,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMuD,mBAAmB,GAAIJ,MAAM,IAAK;IACtC,IAAIG,YAAY,CAACE,OAAO,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C;IACF;IACAhC,gBAAgB,CAACiC,qBAAqB,EAAEC,yBAAyB,EAAET,MAAM,CAAC;IAC1EG,YAAY,CAACE,OAAO,GAAG,IAAI,CAAC,CAAC;EAC/B,CAAC;EAEDzD,SAAS,CAAC,MAAM;IACd,IAAIoD,MAAM,EAAE;MACVI,mBAAmB,CAACJ,MAAM,CAAC;IAC7B;IAEA,OAAO,MAAM;MACXxB,mBAAmB,CAAC,CAAC;MACrB2B,YAAY,CAACE,OAAO,GAAG,IAAI;IAC7B,CAAC;EACH,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZpD,SAAS,CAAC,MAAM;IACd,MAAM8D,8BAA8B,GAAG,MAAAA,CAAA,KAAY;MACjD,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMvC,UAAU,CAAC,CAAC;QAChC,MAAMwC,aAAa,GAAG,MAAMzC,WAAW,CAACwC,KAAK,CAAC;QAC9C,IAAIC,aAAa,EAAE;UACjBX,SAAS,CAACW,aAAa,CAAC;UAExB,MAAMtB,KAAK,GAAG,MAAMvB,UAAU,CAAC,CAAC;UAChCwB,QAAQ,CAACD,KAAK,CAAC;UAEf,MAAMuB,iBAAiB,GAAG,MAAMvC,eAAe,CAACsC,aAAa,CAAC;UAC9D,MAAME,gBAAgB,GAAGD,iBAAiB,CAACE,GAAG,CAACC,QAAQ,KAAK;YAC1D,GAAGA,QAAQ;YACXC,EAAE,EAAED,QAAQ,CAACE,UAAU;YACvBC,IAAI,EAAExC,OAAO,CAACqC,QAAQ,CAACI,IAAI,CAAC,IAAIxC,kBAAkB;YAClDyC,UAAU,EAAE,KAAK;YACjBC,SAAS,EAAE,KAAK;YAChBC,UAAU,EAAE;UACd,CAAC,CAAC,CAAC;UACH9B,aAAa,CAACqB,gBAAgB,CAAC;UAC/B,IAAIA,gBAAgB,CAACU,MAAM,GAAG,CAAC,EAAE;YAC/B7B,mBAAmB,CAACmB,gBAAgB,CAAC,CAAC,CAAC,CAAC;UAC1C;QACF,CAAC,MAAM;UACLZ,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdnB,OAAO,CAACmB,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClEvB,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDQ,8BAA8B,CAAC,CAAC;EAClC,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMwB,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,IAAI;MACF,MAAMC,aAAa,GAAG;QAAE,GAAGD,OAAO;QAAET,UAAU,EAAEW,MAAM,CAACF,OAAO,CAACT,UAAU;MAAE,CAAC;MAC5E,MAAMY,SAAS,GAAG,MAAM9D,OAAO,CAAC4D,aAAa,EAAE5B,MAAM,CAAC;MACtDD,mBAAmB,CAAC,KAAK,CAAC;;MAE1B;MACAR,QAAQ,CAACwC,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOC,WAAW,IAAK;IAC5C,IAAI;MACF,MAAMC,YAAY,GAAG;QAAE,GAAGD,WAAW;QAAEjC,MAAM,EAAEA,MAAM;QAAEmC,MAAM,EAAEvC,WAAW,CAACuC;MAAO,CAAC;MACnF,MAAMC,OAAO,GAAG,MAAMnE,UAAU,CAACiE,YAAY,EAAElC,MAAM,CAAC;MACtDf,oBAAoB,CAAC,KAAK,CAAC;MAE3BM,QAAQ,CAACwC,SAAS,IAChBA,SAAS,CAAChB,GAAG,CAACsB,IAAI,IAAKA,IAAI,CAACF,MAAM,KAAKC,OAAO,CAACD,MAAM,GAAGC,OAAO,GAAGC,IAAK,CACzE,CAAC;IACH,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMa,gBAAgB,GAAG,MAAOH,MAAM,IAAK;IACzC,IAAI;MACF,MAAMjE,UAAU,CAACiE,MAAM,EAAEnC,MAAM,CAAC;MAChCT,QAAQ,CAACwC,SAAS,IAAIA,SAAS,CAACQ,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACF,MAAM,KAAKA,MAAM,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMjB,qBAAqB,GAAIgC,OAAO,IAAK;IACzClC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEiC,OAAO,CAAC;IAC7C;IACAjD,QAAQ,CAACwC,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAES,OAAO,CAAC,CAAC;EAChD,CAAC;EAED,MAAM/B,yBAAyB,GAAI+B,OAAO,IAAK;IAC7ClC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEiC,OAAO,CAAC;IACjD;IACA/C,aAAa,CAACgD,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAED,OAAO,CAAC,CAAC;EAC/D,CAAC;EAED,oBACE9D,OAAA;IAAAgE,QAAA,gBACEhE,OAAA,CAACxB,MAAM;MAAAyF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpE,OAAA,CAAC3B,UAAU;MAACyC,UAAU,EAAEA;IAAW;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCpE,OAAA,CAAC1B,QAAQ;MAACsC,KAAK,EAAEA,KAAM;MAACyD,MAAM,EAAElD,cAAe;MAACmD,QAAQ,EAAEV;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EpE,OAAA,CAACzB,WAAW;MACVgG,SAAS,EAAEA,CAAA,KAAMlD,mBAAmB,CAAC,IAAI,CAAE;MAC3CmD,aAAa,EAAEA,CAAA,KAAM/D,uBAAuB,CAAC,IAAI,CAAE;MACnDC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACDhD,gBAAgB,iBACfpB,OAAA,CAACtB,YAAY;MACX+F,OAAO,EAAEA,CAAA,KAAMpD,mBAAmB,CAAC,KAAK,CAAE;MAC1CkD,SAAS,EAAEvB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACF,EACA9D,iBAAiB,iBAChBN,OAAA,CAACvB,aAAa;MACZkF,IAAI,EAAEzC,WAAY;MAClBuD,OAAO,EAAEA,CAAA,KAAMlE,oBAAoB,CAAC,KAAK,CAAE;MAC3CmE,MAAM,EAAEpB;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF,EACA5D,oBAAoB,iBACnBR,OAAA,CAACrB,gBAAgB;MACf8F,OAAO,EAAEA,CAAA,KAAMhE,uBAAuB,CAAC,KAAK,CAAE;MAC9C+D,aAAa,EAAE7E;IAAY;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/D,EAAA,CArJQD,SAAS;EAAA,QAUChC,WAAW;AAAA;AAAAuG,EAAA,GAVrBvE,SAAS;AAuJlB,eAAeA,SAAS;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}