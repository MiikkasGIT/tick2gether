{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/WebSocketComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = () => {\n  _s();\n  const [task, setTask] = useState(null);\n  useEffect(() => {\n    // Erstelle eine SockJS-Verbindung\n    const socket = new SockJS('http://localhost:8080/ws-endpoint'); // URL zu deinem WebSocket-Endpunkt\n    const stompClient = Stomp.over(socket);\n\n    // Verbinde mit dem Server\n    stompClient.connect({}, frame => {\n      console.log('Connected: ' + frame);\n\n      // Abonniere den WebSocket-Kanal\n      stompClient.subscribe('/user/1/queue/tasks', message => {\n        console.log('Received message:', message.body);\n        const data = JSON.parse(message.body);\n        if (data.type === 'TASK_UPDATE') {\n          setTask(data.task); // Update den Zustand mit den neuen Task-Daten\n        }\n      });\n    });\n\n    // Aufräumen der Verbindung bei Unmount der Komponente\n    return () => {\n      stompClient.disconnect(() => {\n        console.log('Disconnected');\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: task ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Task ID: \", task.taskId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Text: \", task.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", task.deadlineDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Plan Date: \", task.planDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category ID: \", task.categoryId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Completed: \", task.completed ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No task data received.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSocketComponent, \"HbcssAxLTHWqCRHO839ApGabvjg=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","Stomp","jsxDEV","_jsxDEV","WebSocketComponent","_s","task","setTask","socket","stompClient","over","connect","frame","console","log","subscribe","message","body","data","JSON","parse","type","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","taskId","text","deadlineDate","planDate","categoryId","completed","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/WebSocketComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\nconst WebSocketComponent = () => {\n    const [task, setTask] = useState(null);\n\n    useEffect(() => {\n        // Erstelle eine SockJS-Verbindung\n        const socket = new SockJS('http://localhost:8080/ws-endpoint'); // URL zu deinem WebSocket-Endpunkt\n        const stompClient = Stomp.over(socket);\n\n        // Verbinde mit dem Server\n        stompClient.connect({}, (frame) => {\n            console.log('Connected: ' + frame);\n\n            // Abonniere den WebSocket-Kanal\n            stompClient.subscribe('/user/1/queue/tasks', (message) => {\n                console.log('Received message:', message.body);\n                const data = JSON.parse(message.body);\n                if (data.type === 'TASK_UPDATE') {\n                    setTask(data.task); // Update den Zustand mit den neuen Task-Daten\n                }\n            });\n        });\n\n        // Aufräumen der Verbindung bei Unmount der Komponente\n        return () => {\n            stompClient.disconnect(() => {\n                console.log('Disconnected');\n            });\n        };\n    }, []);\n\n    return (\n        <div>\n            <h1>WebSocket Test Component</h1>\n            <div>\n                {task ? (\n                    <div>\n                        <h2>Task ID: {task.taskId}</h2>\n                        <p>Text: {task.text}</p>\n                        <p>Deadline: {task.deadlineDate}</p>\n                        <p>Plan Date: {task.planDate}</p>\n                        <p>Category ID: {task.categoryId}</p>\n                        <p>Completed: {task.completed ? 'Yes' : 'No'}</p>\n                    </div>\n                ) : (\n                    <p>No task data received.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WebSocketComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}