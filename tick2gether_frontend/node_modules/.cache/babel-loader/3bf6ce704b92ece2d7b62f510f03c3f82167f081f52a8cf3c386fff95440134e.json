{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, SparkleLightIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, sendWebSocketMessage, disconnectWebSocket } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nconst customCategoryLightIcon = SparkleLightIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isWebSocketConnected, setIsWebSocketConnected] = useState(false);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  // Initialize WebSocket connection\n  const initializeWebSocket = useCallback(userId => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        const stompClient = connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n        webSocketRef.current = stompClient;\n        setIsWebSocketConnected(true);\n        console.log('WebSocket connection initialized.');\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n    return () => {\n      if (webSocketRef.current) {\n        disconnectWebSocket();\n        webSocketRef.current = null;\n        setIsWebSocketConnected(false);\n      }\n    };\n  }, [userId, initializeWebSocket]);\n\n  // Fetch user data and initialize state\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        console.log('Fetching user email...');\n        const email = await fetchEmail();\n        console.log('Fetched email:', email);\n        console.log('Fetching user ID for email:', email);\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          console.log('Fetched userId:', fetchedUserId);\n          setUserId(fetchedUserId);\n          console.log('Fetching tasks...');\n          const tasks = await fetchTasks();\n          console.log('Fetched tasks:', tasks);\n          setTasks(tasks);\n          console.log('Fetching categories for userId:', fetchedUserId);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          console.log('Fetched categories:', fetchedCategories);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n            isSelected: false,\n            fullWidth: false,\n            showDelete: false\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          console.warn('User not found, redirecting to login...');\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n\n  // Handle task addition\n  const handleAddNewTask = async newTask => {\n    try {\n      console.log('Adding new task:', newTask);\n      console.log('User ID:', userId);\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId)\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n          type: 'TASK_ADD',\n          task: addedTask\n        });\n        console.log('WebSocket message sent: ', {\n          type: 'TASK_ADD',\n          task: addedTask\n        });\n      } else {\n        console.error('WebSocket connection is not initialized.');\n      }\n      console.log('Task added successfully:', addedTask);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(task => task.taskId === addedTask.taskId);\n        if (!taskExists) {\n          return [...prevTasks, addedTask];\n        }\n        return prevTasks;\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Handle task update\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId\n      };\n      console.log('Updating task:', taskToUpdate);\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n          type: 'TASK_UPDATE',\n          task: updated\n        });\n        console.log('WebSocket message sent: ', {\n          type: 'TASK_UPDATE',\n          task: updated\n        });\n      }\n      console.log('Task updated successfully:', updated);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === updated.taskId ? updated : task));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  // Handle task deletion\n  const handleDeleteTask = async id => {\n    try {\n      console.log('Deleting task with ID:', id);\n      await deleteTask(id, userId);\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', {\n          type: 'TASK_DELETE',\n          taskId: id\n        });\n        console.log('WebSocket message sent: ', {\n          type: 'TASK_DELETE',\n          taskId: id\n        });\n      }\n      console.log('Task deleted successfully:', id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Handle category addition\n  const handleAddCategory = async newCategory => {\n    try {\n      console.log('Adding new category:', newCategory);\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n        isSelected: false,\n        fullWidth: false,\n        showDelete: false,\n        userId: data.userId\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/categories', {\n          type: 'CATEGORY_ADD',\n          category: newCategoryObject\n        });\n        console.log('WebSocket message sent: ', {\n          type: 'CATEGORY_ADD',\n          category: newCategoryObject\n        });\n      }\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  // Toggle delete mode\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  // Handle task edit\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  // WebSocket message handlers\n  const onTaskMessageReceived = message => {\n    console.log('WebSocket task message received:', message);\n    const {\n      type,\n      task,\n      taskId\n    } = message;\n    if (type === 'TASK_ADD' || type === 'TASK_UPDATE') {\n      if (!task) {\n        console.warn('Invalid task received:', task);\n        return;\n      }\n      console.log('Updating tasks list with:', task);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (type === 'TASK_ADD' && !taskExists) {\n          return [...prevTasks, task];\n        } else if (type === 'TASK_UPDATE') {\n          return prevTasks.map(t => t.taskId === task.taskId ? task : t);\n        }\n        return prevTasks;\n      });\n    } else if (type === 'TASK_DELETE') {\n      if (!taskId) {\n        console.warn('Invalid taskId received for delete:', taskId);\n        return;\n      }\n      console.log('Removing task with ID:', taskId);\n      setTasks(prevTasks => prevTasks.filter(t => t.taskId !== taskId));\n    }\n  };\n  const onCategoryMessageReceived = message => {\n    console.log('WebSocket category message received:', message);\n    const {\n      type,\n      category,\n      categoryId\n    } = message;\n    if (!type) {\n      console.error('Unknown message type:', type);\n      return;\n    }\n    console.log('Received message:', message);\n    if (type === 'CATEGORY_ADD' || type === 'CATEGORY_SHARE') {\n      if (!category) {\n        console.warn('Invalid category received:', category);\n        return;\n      }\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(c => c.id === category.categoryId);\n        if (!categoryExists) {\n          return [...prevCategories, {\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n            isSelected: false,\n            fullWidth: false,\n            showDelete: false\n          }];\n        }\n        return prevCategories;\n      });\n    } else if (type === 'CATEGORY_UPDATE') {\n      setCategories(prevCategories => prevCategories.map(c => c.id === category.categoryId ? {\n        ...category,\n        id: category.categoryId,\n        icon: iconMap[category.name] || customCategoryIcon,\n        isSelected: false,\n        fullWidth: false,\n        showDelete: false\n      } : c));\n    } else if (type === 'CATEGORY_DELETE') {\n      if (!categoryId) {\n        console.warn('Invalid categoryId received for delete:', categoryId);\n        return;\n      }\n      setCategories(prevCategories => prevCategories.filter(c => c.id !== categoryId));\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [selectedCategory && selectedCategory.icon && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: tasks,\n            setTasks: setTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTodo: handleEditTask,\n            selectedCategory: selectedCategory,\n            handleDeleteTask: handleDeleteTask,\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode,\n            selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n            toggleAddCategoryModal: () => setShowAddCategoryPopUp(true),\n            userId: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddNewTask,\n      onClose: () => setShowAddTaskPopUp(false),\n      currentCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && currentTask && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSaveTask: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false),\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"sf8ZJw7qsHARaWT1/PwJXbRn8uQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","SparkleLightIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","sendWebSocketMessage","disconnectWebSocket","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","customCategoryLightIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","isWebSocketConnected","setIsWebSocketConnected","navigate","webSocketRef","initializeWebSocket","current","console","log","stompClient","onTaskMessageReceived","onCategoryMessageReceived","error","fetchUserAndTasksAndCategories","email","fetchedUserId","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","isSelected","fullWidth","showDelete","length","warn","handleAddNewTask","newTask","formattedTask","Number","addedTask","type","task","prevTasks","taskExists","some","taskId","handleSaveTask","updatedTask","taskToUpdate","updated","handleDeleteTask","filter","handleAddCategory","newCategory","categoryExists","cat","data","newCategoryObject","prevCategories","toggleDeleteMode","prevMode","handleEditTask","message","t","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","todos","onEditTodo","toggleAddTaskModal","selectedCategoryId","toggleAddCategoryModal","onAddTask","onClose","currentCategoryId","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, SparkleLightIcon, TodayIcon, WorkIcon, BookIcon\n} from '../icons';\nimport {\n  fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport { connectWebSocket, sendWebSocketMessage, disconnectWebSocket } from '../websocket';\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\nconst customCategoryLightIcon = SparkleLightIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [isWebSocketConnected, setIsWebSocketConnected] = useState(false);\n  const navigate = useNavigate();\n  const webSocketRef = useRef(null);\n\n  // Initialize WebSocket connection\n  const initializeWebSocket = useCallback((userId) => {\n    if (!webSocketRef.current) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        const stompClient = connectWebSocket(onTaskMessageReceived, onCategoryMessageReceived, userId);\n        webSocketRef.current = stompClient;\n        setIsWebSocketConnected(true);\n        console.log('WebSocket connection initialized.');\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      initializeWebSocket(userId);\n    }\n    return () => {\n      if (webSocketRef.current) {\n        disconnectWebSocket();\n        webSocketRef.current = null;\n        setIsWebSocketConnected(false);\n      }\n    };\n  }, [userId, initializeWebSocket]);\n\n  // Fetch user data and initialize state\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        console.log('Fetching user email...');\n        const email = await fetchEmail();\n        console.log('Fetched email:', email);\n\n        console.log('Fetching user ID for email:', email);\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          console.log('Fetched userId:', fetchedUserId);\n          setUserId(fetchedUserId);\n\n          console.log('Fetching tasks...');\n          const tasks = await fetchTasks();\n          console.log('Fetched tasks:', tasks);\n          setTasks(tasks);\n\n          console.log('Fetching categories for userId:', fetchedUserId);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          console.log('Fetched categories:', fetchedCategories);\n\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n            isSelected: false,\n            fullWidth: false,\n            showDelete: false,\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          console.warn('User not found, redirecting to login...');\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error fetching user, tasks, or categories:', error);\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n  }, [navigate]);\n\n  // Handle task addition\n  const handleAddNewTask = async (newTask) => {\n    try {\n      console.log('Adding new task:', newTask);\n      console.log('User ID:', userId);\n\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId),\n      };\n\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_ADD', task: addedTask });\n        console.log('WebSocket message sent: ', { type: 'TASK_ADD', task: addedTask });\n      } else {\n        console.error('WebSocket connection is not initialized.');\n      }\n\n      console.log('Task added successfully:', addedTask);\n\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(task => task.taskId === addedTask.taskId);\n        if (!taskExists) {\n          return [...prevTasks, addedTask];\n        }\n        return prevTasks;\n      });\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Handle task update\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n      };\n      console.log('Updating task:', taskToUpdate);\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_UPDATE', task: updated });\n        console.log('WebSocket message sent: ', { type: 'TASK_UPDATE', task: updated });\n      }\n      console.log('Task updated successfully:', updated);\n\n      setTasks(prevTasks =>\n        prevTasks.map(task => (task.taskId === updated.taskId ? updated : task))\n      );\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  // Handle task deletion\n  const handleDeleteTask = async (id) => {\n    try {\n      console.log('Deleting task with ID:', id);\n      await deleteTask(id, userId);\n\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/tasks', { type: 'TASK_DELETE', taskId: id });\n        console.log('WebSocket message sent: ', { type: 'TASK_DELETE', taskId: id });\n      }\n      console.log('Task deleted successfully:', id);\n\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Handle category addition\n  const handleAddCategory = async (newCategory) => {\n    try {\n      console.log('Adding new category:', newCategory);\n\n      const categoryExists = categories.some(cat => cat.name === newCategory.name);\n      if (categoryExists) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n\n      const data = await addCategory(newCategory);\n      console.log('Category added successfully:', data);\n\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon,\n        isSelected: false,\n        fullWidth: false,\n        showDelete: false,\n        userId: data.userId,\n      };\n\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n\n      if (isWebSocketConnected) {\n        sendWebSocketMessage('/user/' + userId + '/topic/categories', { type: 'CATEGORY_ADD', category: newCategoryObject });\n        console.log('WebSocket message sent: ', { type: 'CATEGORY_ADD', category: newCategoryObject });\n      }\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  // Toggle delete mode\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  // Handle task edit\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  // WebSocket message handlers\n  const onTaskMessageReceived = (message) => {\n    console.log('WebSocket task message received:', message);\n    const { type, task, taskId } = message;\n\n    if (type === 'TASK_ADD' || type === 'TASK_UPDATE') {\n      if (!task) {\n        console.warn('Invalid task received:', task);\n        return;\n      }\n\n      console.log('Updating tasks list with:', task);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (type === 'TASK_ADD' && !taskExists) {\n          return [...prevTasks, task];\n        } else if (type === 'TASK_UPDATE') {\n          return prevTasks.map(t => (t.taskId === task.taskId ? task : t));\n        }\n        return prevTasks;\n      });\n    } else if (type === 'TASK_DELETE') {\n      if (!taskId) {\n        console.warn('Invalid taskId received for delete:', taskId);\n        return;\n      }\n      console.log('Removing task with ID:', taskId);\n      setTasks(prevTasks => prevTasks.filter(t => t.taskId !== taskId));\n    }\n  };\n\n  const onCategoryMessageReceived = (message) => {\n    console.log('WebSocket category message received:', message);\n    const { type, category, categoryId } = message;\n\n    if (!type) {\n      console.error('Unknown message type:', type);\n      return;\n    }\n\n    console.log('Received message:', message);\n\n    if (type === 'CATEGORY_ADD' || type === 'CATEGORY_SHARE') {\n      if (!category) {\n        console.warn('Invalid category received:', category);\n        return;\n      }\n\n      setCategories(prevCategories => {\n        const categoryExists = prevCategories.some(c => c.id === category.categoryId);\n        if (!categoryExists) {\n          return [...prevCategories, { ...category, id: category.categoryId, icon: iconMap[category.name] || customCategoryIcon, isSelected: false, fullWidth: false, showDelete: false }];\n        }\n        return prevCategories;\n      });\n    } else if (type === 'CATEGORY_UPDATE') {\n      setCategories(prevCategories =>\n        prevCategories.map(c => (c.id === category.categoryId ? { ...category, id: category.categoryId, icon: iconMap[category.name] || customCategoryIcon, isSelected: false, fullWidth: false, showDelete: false } : c))\n      );\n    } else if (type === 'CATEGORY_DELETE') {\n      if (!categoryId) {\n        console.warn('Invalid categoryId received for delete:', categoryId);\n        return;\n      }\n      setCategories(prevCategories => prevCategories.filter(c => c.id !== categoryId));\n    } else {\n      console.error('Unknown message type:', type);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} userId={userId} categoriesFromBackend={categories} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory && selectedCategory.icon && <selectedCategory.icon className=\"h-6 w-6\" />}\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory?.name}</span>\n            </div>\n            <ToDoList\n              todos={tasks}\n              setTasks={setTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTodo={handleEditTask}\n              selectedCategory={selectedCategory}\n              handleDeleteTask={handleDeleteTask}\n              userId={userId}\n            />\n            <ToDoActions\n              toggleAddTaskModal={() => setShowAddTaskPopUp(true)}\n              toggleDeleteMode={toggleDeleteMode}\n              selectedCategoryId={selectedCategory?.id}\n              toggleAddCategoryModal={() => setShowAddCategoryPopUp(true)}\n              userId={userId}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp\n          onAddTask={handleAddNewTask}\n          onClose={() => setShowAddTaskPopUp(false)}\n          currentCategoryId={selectedCategory?.id}\n        />\n      )}\n      {showEditTaskPopUp && currentTask && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSaveTask={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n          userId={userId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}