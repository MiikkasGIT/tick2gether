{"ast":null,"code":"export const STANDARD_CATEGORIES = [{\n  categoryId: 1,\n  name: 'All Tasks'\n}, {\n  categoryId: 2,\n  name: 'Today'\n}, {\n  categoryId: 3,\n  name: 'Planned'\n}, {\n  categoryId: 4,\n  name: 'Any Time'\n}, {\n  categoryId: 5,\n  name: 'Work'\n}, {\n  categoryId: 6,\n  name: 'Personal'\n}, {\n  categoryId: 7,\n  name: 'Logbook'\n}];\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  // Erstellen Sie ein Set von Kategorie-IDs für einen schnellen Zugriff\n  const standardCategoryIds = new Set(STANDARD_CATEGORIES.map(category => category.categoryId));\n\n  // Durchlaufen Sie alle Kategorien\n  categories.forEach(category => {\n    if (standardCategoryIds.has(category.categoryId)) {\n      // Standardkategorien\n      switch (category.categoryId) {\n        case 1:\n          // All Tasks\n          categorizedTasks[category.categoryId] = tasks;\n          break;\n        case 2:\n          // Today\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 3:\n          // Planned\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.planDate);\n          break;\n        case 4:\n          // Any Time (es ist ein Ordner, keine Aufgaben)\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 5:\n          // Work\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 6:\n          // Personal\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 7:\n          // Logbook\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.completed);\n          break;\n        default:\n          categorizedTasks[category.categoryId] = [];\n          break;\n      }\n    } else {\n      // Falls es sich um eine benutzerdefinierte Kategorie handelt\n      categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n    }\n  });\n  return categorizedTasks;\n};","map":{"version":3,"names":["STANDARD_CATEGORIES","categoryId","name","categorizeTasks","tasks","categories","categorizedTasks","standardCategoryIds","Set","map","category","forEach","has","filter","task","planDate","completed"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/utils/categorizeTasks.jsx"],"sourcesContent":["export const STANDARD_CATEGORIES = [\n  { categoryId: 1, name: 'All Tasks' },\n  { categoryId: 2, name: 'Today' },\n  { categoryId: 3, name: 'Planned' },\n  { categoryId: 4, name: 'Any Time' },\n  { categoryId: 5, name: 'Work' },\n  { categoryId: 6, name: 'Personal' },\n  { categoryId: 7, name: 'Logbook' },\n];\n\nexport const categorizeTasks = (tasks, categories) => {\n  const categorizedTasks = {};\n\n  // Erstellen Sie ein Set von Kategorie-IDs für einen schnellen Zugriff\n  const standardCategoryIds = new Set(STANDARD_CATEGORIES.map(category => category.categoryId));\n\n  // Durchlaufen Sie alle Kategorien\n  categories.forEach(category => {\n    if (standardCategoryIds.has(category.categoryId)) {\n      // Standardkategorien\n      switch (category.categoryId) {\n        case 1:\n          // All Tasks\n          categorizedTasks[category.categoryId] = tasks;\n          break;\n        case 2:\n          // Today\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 3:\n          // Planned\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.planDate);\n          break;\n        case 4:\n          // Any Time (es ist ein Ordner, keine Aufgaben)\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 5:\n          // Work\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 6:\n          // Personal\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n          break;\n        case 7:\n          // Logbook\n          categorizedTasks[category.categoryId] = tasks.filter(task => task.completed);\n          break;\n        default:\n          categorizedTasks[category.categoryId] = [];\n          break;\n      }\n    } else {\n      // Falls es sich um eine benutzerdefinierte Kategorie handelt\n      categorizedTasks[category.categoryId] = tasks.filter(task => task.categoryId === category.categoryId);\n    }\n  });\n\n  return categorizedTasks;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,CACjC;EAAEC,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAY,CAAC,EACpC;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAChC;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,EAClC;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EACnC;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC/B;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,EACnC;EAAED,UAAU,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAU,CAAC,CACnC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;EACpD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;;EAE3B;EACA,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,CAACR,mBAAmB,CAACS,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACT,UAAU,CAAC,CAAC;;EAE7F;EACAI,UAAU,CAACM,OAAO,CAACD,QAAQ,IAAI;IAC7B,IAAIH,mBAAmB,CAACK,GAAG,CAACF,QAAQ,CAACT,UAAU,CAAC,EAAE;MAChD;MACA,QAAQS,QAAQ,CAACT,UAAU;QACzB,KAAK,CAAC;UACJ;UACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK;UAC7C;QACF,KAAK,CAAC;UACJ;UACAE,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,UAAU,KAAKS,QAAQ,CAACT,UAAU,CAAC;UACrG;QACF,KAAK,CAAC;UACJ;UACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;UAC3E;QACF,KAAK,CAAC;UACJ;UACAT,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,UAAU,KAAKS,QAAQ,CAACT,UAAU,CAAC;UACrG;QACF,KAAK,CAAC;UACJ;UACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,UAAU,KAAKS,QAAQ,CAACT,UAAU,CAAC;UACrG;QACF,KAAK,CAAC;UACJ;UACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,UAAU,KAAKS,QAAQ,CAACT,UAAU,CAAC;UACrG;QACF,KAAK,CAAC;UACJ;UACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,SAAS,CAAC;UAC5E;QACF;UACEV,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAG,EAAE;UAC1C;MACJ;IACF,CAAC,MAAM;MACL;MACAK,gBAAgB,CAACI,QAAQ,CAACT,UAAU,CAAC,GAAGG,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,UAAU,KAAKS,QAAQ,CAACT,UAAU,CAAC;IACvG;EACF,CAAC,CAAC;EAEF,OAAOK,gBAAgB;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}