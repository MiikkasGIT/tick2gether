{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon } from '../icons';\nimport { fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport webSocketService from '../websocket'; // Verwende den WebSocketService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon\n};\nconst customCategoryIcon = SparkleIcon;\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const initializeWebSocket = useCallback(userId => {\n    if (!webSocketService.isConnected) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        webSocketService.connect(userId, onTaskMessageReceived, onCategoryMessageReceived);\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n          initializeWebSocket(fetchedUserId);\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n    return () => {\n      if (webSocketService.isConnected) {\n        console.log('Disconnecting WebSocket...');\n        webSocketService.disconnect();\n        console.log('WebSocket disconnected.');\n      } else {\n        console.log('WebSocket reference not set, nothing to disconnect.');\n      }\n    };\n  }, [initializeWebSocket, navigate]);\n  const handleAddNewTask = async newTask => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId)\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleSaveTask = async updatedTask => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: updatedTask.categoryId ? Number(updatedTask.categoryId) : currentTask.categoryId // Sicherstellen, dass die categoryId vorhanden ist\n      };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === updated.taskId ? updated : task));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleAddCategory = async newCategory => {\n    try {\n      const addedCategory = await addCategory(newCategory, userId);\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n  const onTaskMessageReceived = message => {\n    if (message.type === 'TASK_UPDATE' || message.type === 'TASK_DELETE') {\n      console.log('Task message received:', message);\n      // Handle task updates or deletes\n    }\n  };\n  const onCategoryMessageReceived = message => {\n    if (message.type === 'CATEGORY_UPDATE' || message.type === 'CATEGORY_DELETE') {\n      console.log('Category message received:', message);\n      // Handle category updates or deletes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        onSelectCategory: setSelectedCategory,\n        userId: userId,\n        categoriesFromBackend: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n        toggleAddTaskModal: () => setShowAddTaskPopUp(!showAddTaskPopUp),\n        toggleDeleteMode: () => setIsDeleteMode(!isDeleteMode),\n        selectedCategoryId: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id,\n        toggleAddCategoryModal: () => setShowAddCategoryPopUp(!showAddCategoryPopUp),\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        todos: tasks,\n        setTasks: setTasks,\n        isDeleteMode: isDeleteMode,\n        onEditTodo: setCurrentTask,\n        selectedCategory: selectedCategory,\n        handleDeleteTask: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n        onAddTask: handleAddNewTask,\n        categories: categories,\n        onClose: () => setShowAddTaskPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), showEditTaskPopUp && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n        task: currentTask,\n        onSaveTask: handleSaveTask,\n        onClose: () => setShowEditTaskPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n        onAddCategory: handleAddCategory,\n        onClose: () => setShowAddCategoryPopUp(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3QoduBtwrRDn5eUDh3q/ehOfCa8=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","AllTasksIcon","AnyTimeIcon","PersonalIcon","PlannedIcon","SparkleIcon","TodayIcon","WorkIcon","BookIcon","fetchTasks","addTask","updateTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","webSocketService","jsxDEV","_jsxDEV","iconMap","customCategoryIcon","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeWebSocket","isConnected","console","log","connect","onTaskMessageReceived","onCategoryMessageReceived","error","fetchUserAndTasksAndCategories","email","fetchedUserId","fetchedCategories","mappedCategories","map","category","id","categoryId","icon","name","length","disconnect","handleAddNewTask","newTask","formattedTask","Number","addedTask","prevTasks","handleSaveTask","updatedTask","taskToUpdate","taskId","updated","task","handleDeleteTask","filter","handleAddCategory","newCategory","addedCategory","prevCategories","message","type","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelectCategory","categoriesFromBackend","toggleAddTaskModal","toggleDeleteMode","selectedCategoryId","toggleAddCategoryModal","todos","onEditTodo","onAddTask","onClose","onSaveTask","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport {\n  AllTasksIcon, AnyTimeIcon, PersonalIcon, PlannedIcon, SparkleIcon, TodayIcon, WorkIcon, BookIcon\n} from '../icons';\nimport {\n  fetchTasks, addTask, updateTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories\n} from '../api';\nimport webSocketService from '../websocket'; // Verwende den WebSocketService\n\nconst iconMap = {\n  'All Tasks': AllTasksIcon,\n  'Today': TodayIcon,\n  'Planned': PlannedIcon,\n  'Any Time': AnyTimeIcon,\n  'Work': WorkIcon,\n  'Personal': PersonalIcon,\n  'Logbook': BookIcon,\n};\n\nconst customCategoryIcon = SparkleIcon;\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  const initializeWebSocket = useCallback((userId) => {\n    if (!webSocketService.isConnected) {\n      console.log('Connecting WebSocket with userId:', userId);\n      try {\n        webSocketService.connect(userId, onTaskMessageReceived, onCategoryMessageReceived);\n      } catch (error) {\n        console.error('Error initializing WebSocket:', error);\n      }\n    } else {\n      console.log('WebSocket already connected for userId:', userId);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchUserAndTasksAndCategories = async () => {\n      try {\n        const email = await fetchEmail();\n        const fetchedUserId = await fetchUserId(email);\n        if (fetchedUserId) {\n          setUserId(fetchedUserId);\n          initializeWebSocket(fetchedUserId);\n          const tasks = await fetchTasks();\n          setTasks(tasks);\n          const fetchedCategories = await fetchCategories(fetchedUserId);\n          const mappedCategories = fetchedCategories.map(category => ({\n            ...category,\n            id: category.categoryId,\n            icon: iconMap[category.name] || customCategoryIcon,\n          }));\n          setCategories(mappedCategories);\n          if (mappedCategories.length > 0) {\n            setSelectedCategory(mappedCategories[0]);\n          }\n        } else {\n          navigate('/login');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    fetchUserAndTasksAndCategories();\n\n    return () => {\n      if (webSocketService.isConnected) {\n        console.log('Disconnecting WebSocket...');\n        webSocketService.disconnect();\n        console.log('WebSocket disconnected.');\n      } else {\n        console.log('WebSocket reference not set, nothing to disconnect.');\n      }\n    };\n  }, [initializeWebSocket, navigate]);\n\n  const handleAddNewTask = async (newTask) => {\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: Number(newTask.categoryId),\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setShowAddTaskPopUp(false);\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleSaveTask = async (updatedTask) => {\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId: userId,\n        taskId: currentTask.taskId,\n        categoryId: updatedTask.categoryId ? Number(updatedTask.categoryId) : currentTask.categoryId, // Sicherstellen, dass die categoryId vorhanden ist\n      };\n      const updated = await updateTask(taskToUpdate, userId);\n      setShowEditTaskPopUp(false);\n      setTasks(prevTasks => prevTasks.map(task => (task.taskId === updated.taskId ? updated : task)));\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleAddCategory = async (newCategory) => {\n    try {\n      const addedCategory = await addCategory(newCategory, userId);\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n      setShowAddCategoryPopUp(false);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    }\n  };\n\n  const onTaskMessageReceived = (message) => {\n    if (message.type === 'TASK_UPDATE' || message.type === 'TASK_DELETE') {\n      console.log('Task message received:', message);\n      // Handle task updates or deletes\n    }\n  };\n\n  const onCategoryMessageReceived = (message) => {\n    if (message.type === 'CATEGORY_UPDATE' || message.type === 'CATEGORY_DELETE') {\n      console.log('Category message received:', message);\n      // Handle category updates or deletes\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Categories\n          onSelectCategory={setSelectedCategory}\n          userId={userId}\n          categoriesFromBackend={categories}\n        />\n        <ToDoActions\n          toggleAddTaskModal={() => setShowAddTaskPopUp(!showAddTaskPopUp)}\n          toggleDeleteMode={() => setIsDeleteMode(!isDeleteMode)}\n          selectedCategoryId={selectedCategory?.id}\n          toggleAddCategoryModal={() => setShowAddCategoryPopUp(!showAddCategoryPopUp)}\n          userId={userId}\n        />\n        <ToDoList\n          todos={tasks}\n          setTasks={setTasks}\n          isDeleteMode={isDeleteMode}\n          onEditTodo={setCurrentTask}\n          selectedCategory={selectedCategory}\n          handleDeleteTask={handleDeleteTask}\n        />\n        {showAddTaskPopUp && (\n          <AddTaskPopUp\n            onAddTask={handleAddNewTask}\n            categories={categories}\n            onClose={() => setShowAddTaskPopUp(false)}\n          />\n        )}\n        {showEditTaskPopUp && (\n          <EditTaskPopUp\n            task={currentTask}\n            onSaveTask={handleSaveTask}\n            onClose={() => setShowEditTaskPopUp(false)}\n          />\n        )}\n        {showAddCategoryPopUp && (\n          <AddCategoryPopUp\n            onAddCategory={handleAddCategory}\n            onClose={() => setShowAddCategoryPopUp(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}