{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = ({\n  userId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const onTaskMessageReceived = message => {\n    console.log('Task message received:', message);\n    const {\n      type,\n      task\n    } = message;\n    if (type === 'TASK_UPDATE' && task) {\n      console.log('Processing TASK_UPDATE:', task);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (taskExists) {\n          return prevTasks.map(t => t.taskId === task.taskId ? task : t);\n        } else {\n          return [...prevTasks, task];\n        }\n      });\n    } else {\n      console.log('Unknown task message type or missing task data:', type);\n    }\n  };\n  useEffect(() => {\n    connectWebSocket(userId, onTaskMessageReceived);\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const updateTask = task => {\n    const message = {\n      type: 'TASK_UPDATE',\n      task: task\n    };\n    sendWebSocketMessage('/app/updateTask', message);\n  };\n  const task = {\n    userId: userId,\n    taskId: 1,\n    text: 'Updated Task',\n    deadlineDate: null,\n    planDate: null,\n    completed: false\n  };\n\n  // Beispiel für das Senden einer Task-Aktualisierung\n  const handleUpdateTask = () => {\n    updateTask(task);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebSocket Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateTask,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.text\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","connectWebSocket","disconnectWebSocket","sendWebSocketMessage","jsxDEV","_jsxDEV","WebSocketComponent","userId","_s","tasks","setTasks","onTaskMessageReceived","message","console","log","type","task","prevTasks","taskExists","some","t","taskId","map","updateTask","text","deadlineDate","planDate","completed","handleUpdateTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendWebSocketMessage } from '../websocket';\n\nconst WebSocketComponent = ({ userId }) => {\n  const [tasks, setTasks] = useState([]);\n\n  const onTaskMessageReceived = (message) => {\n    console.log('Task message received:', message);\n    const { type, task } = message;\n\n    if (type === 'TASK_UPDATE' && task) {\n      console.log('Processing TASK_UPDATE:', task);\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.some(t => t.taskId === task.taskId);\n        if (taskExists) {\n          return prevTasks.map(t => (t.taskId === task.taskId ? task : t));\n        } else {\n          return [...prevTasks, task];\n        }\n      });\n    } else {\n      console.log('Unknown task message type or missing task data:', type);\n    }\n  };\n\n  useEffect(() => {\n    connectWebSocket(userId, onTaskMessageReceived);\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const updateTask = (task) => {\n    const message = {\n      type: 'TASK_UPDATE',\n      task: task,\n    };\n    sendWebSocketMessage('/app/updateTask', message);\n  };\n\n  const task = {\n    userId: userId,\n    taskId: 1,\n    text: 'Updated Task',\n    deadlineDate: null,\n    planDate: null,\n    completed: false,\n  };\n\n  // Beispiel für das Senden einer Task-Aktualisierung\n  const handleUpdateTask = () => {\n    updateTask(task);\n  };\n\n  return (\n    <div>\n      <h1>WebSocket Test</h1>\n      <button onClick={handleUpdateTask}>Update Task</button>\n      <ul>\n        {tasks.map(task => (\n          <li key={task.taskId}>{task.text}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}