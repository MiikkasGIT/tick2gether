{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendWebSocketMessage } from '../websocket';\nimport { categorizeTasks, STANDARD_CATEGORIES } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(STANDARD_CATEGORIES);\n  const [selectedCategory, setSelectedCategory] = useState(STANDARD_CATEGORIES[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  // Function to initialize dashboard\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n      if (!fetchedUserId) {\n        navigate('/login');\n        return;\n      }\n      setUserId(fetchedUserId);\n      const [fetchedTasks, fetchedCategories] = await Promise.all([fetchTasks(), fetchCategories(fetchedUserId)]);\n      setTasks(fetchedTasks);\n      setCategories([...STANDARD_CATEGORIES, ...(Array.isArray(fetchedCategories) ? fetchedCategories.map(category => ({\n        ...category,\n        id: category.categoryId,\n        icon: iconMap[category.name] || customCategoryIcon\n      })) : [])]);\n      if (Array.isArray(fetchedCategories) && fetchedCategories.length > 0) {\n        setSelectedCategory(fetchedCategories[0]);\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n  useEffect(() => {\n    if (!userId) return;\n    const handleWebSocketMessage = message => {\n      const {\n        type,\n        taskId,\n        categoryId,\n        ...updatedData\n      } = message;\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          return prevTasks.map(task => task.taskId === taskId ? {\n            ...task,\n            ...updatedData\n          } : task);\n        }\n        return prevTasks;\n      });\n      setCategories(prevCategories => {\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          const index = prevCategories.findIndex(category => category.id === categoryId);\n          if (index !== -1) {\n            return [...prevCategories.slice(0, index), {\n              ...prevCategories[index],\n              ...updatedData\n            }, ...prevCategories.slice(index + 1)];\n          } else {\n            return [...prevCategories, {\n              id: categoryId,\n              ...updatedData\n            }];\n          }\n        }\n        return prevCategories;\n      });\n    };\n    const fetchIds = async () => {\n      try {\n        const [fetchedTasks, fetchedCategories] = await Promise.all([fetchTasks(), fetchCategories(userId)]);\n        const taskIds = fetchedTasks.map(task => task.taskId);\n        const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n        connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n      } catch (error) {\n        console.error('Error fetching IDs for WebSocket:', error);\n      }\n    };\n    fetchIds();\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  // Function to handle adding new task\n  const handleAddNewTask = async newTask => {\n    if (!selectedCategory) return;\n    try {\n      const formattedTask = {\n        ...newTask,\n        categoryId: selectedCategory.id,\n        userId\n      };\n      const addedTask = await addTask(formattedTask, userId);\n      setTasks(prevTasks => [...prevTasks, addedTask].filter((task, index, self) => index === self.findIndex(t => t.taskId === task.taskId)));\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    } finally {\n      setShowAddTaskPopUp(false);\n    }\n  };\n\n  // Function to handle saving task\n  const handleSaveTask = async updatedTask => {\n    if (!selectedCategory) return;\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory.id || currentTask.categoryId\n      };\n      setTasks(prevTasks => prevTasks.map(task => task.taskId === taskToUpdate.taskId ? taskToUpdate : task));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    } finally {\n      setShowEditTaskPopUp(false);\n    }\n  };\n\n  // Function to handle deleting task\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Function to handle adding category\n  const handleAddCategory = async newCategory => {\n    try {\n      if (categories.some(cat => cat.name === newCategory.name)) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n      const data = await addCategory(newCategory);\n      const newCategoryObject = {\n        id: data.categoryId,\n        name: data.name,\n        icon: customCategoryIcon\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    } finally {\n      setShowAddCategoryPopUp(false);\n    }\n  };\n\n  // Function to toggle delete mode\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  // Function to handle editing task\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory,\n          userId: userId,\n          categoriesFromBackend: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [(selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.icon) && /*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"w-8 h-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold flex-1\",\n              children: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n              onAddTask: () => setShowAddTaskPopUp(true),\n              onToggleDeleteMode: toggleDeleteMode,\n              isDeleteMode: isDeleteMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            tasks: filteredTasks,\n            isDeleteMode: isDeleteMode,\n            onEditTask: handleEditTask,\n            onDeleteTask: handleDeleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onSave: handleAddNewTask,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 28\n    }, this), showEditTaskPopUp && currentTask && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      task: currentTask,\n      onSave: handleSaveTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), showAddCategoryPopUp && /*#__PURE__*/_jsxDEV(AddCategoryPopUp, {\n      onAddCategory: handleAddCategory,\n      onClose: () => setShowAddCategoryPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"v5rA4F+zoJ0pbE+WvoiYZPyR2OI=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Categories","ToDoList","ToDoActions","Navbar","EditTaskPopUp","AddTaskPopUp","AddCategoryPopUp","fetchTasks","addTask","deleteTask","fetchUserId","fetchEmail","addCategory","fetchCategories","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","sendWebSocketMessage","categorizeTasks","STANDARD_CATEGORIES","iconMap","customCategoryIcon","jsxDEV","_jsxDEV","Dashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","tasks","setTasks","categories","setCategories","selectedCategory","setSelectedCategory","currentTask","setCurrentTask","showAddTaskPopUp","setShowAddTaskPopUp","userId","setUserId","navigate","initializeDashboard","email","fetchedUserId","fetchedTasks","fetchedCategories","Promise","all","Array","isArray","map","category","id","categoryId","icon","name","length","error","console","handleWebSocketMessage","message","type","taskId","updatedData","prevTasks","task","prevCategories","index","findIndex","slice","fetchIds","taskIds","categoryIds","handleAddNewTask","newTask","formattedTask","addedTask","filter","self","t","handleSaveTask","updatedTask","taskToUpdate","handleDeleteTask","handleAddCategory","newCategory","some","cat","warn","data","newCategoryObject","toggleDeleteMode","prevMode","handleEditTask","categorizedTasks","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","categoriesFromBackend","onAddTask","onToggleDeleteMode","onEditTask","onDeleteTask","onSave","onClose","onAddCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport EditTaskPopUp from '../components/EditTaskPopUp';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport AddCategoryPopUp from '../components/AddCategoryPopUp';\nimport { fetchTasks, addTask, deleteTask, fetchUserId, fetchEmail, addCategory, fetchCategories } from '../api';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage, sendWebSocketMessage } from '../websocket';\nimport { categorizeTasks, STANDARD_CATEGORIES } from '../utils/categorizeTasks';\nimport { iconMap, customCategoryIcon } from '../icons';\n\nfunction Dashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState(STANDARD_CATEGORIES);\n  const [selectedCategory, setSelectedCategory] = useState(STANDARD_CATEGORIES[0]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n\n  // Function to initialize dashboard\n  const initializeDashboard = useCallback(async () => {\n    try {\n      const email = await fetchEmail();\n      const fetchedUserId = await fetchUserId(email);\n\n      if (!fetchedUserId) {\n        navigate('/login');\n        return;\n      }\n\n      setUserId(fetchedUserId);\n\n      const [fetchedTasks, fetchedCategories] = await Promise.all([\n        fetchTasks(),\n        fetchCategories(fetchedUserId),\n      ]);\n\n      setTasks(fetchedTasks);\n      setCategories([\n        ...STANDARD_CATEGORIES,\n        ...(Array.isArray(fetchedCategories) ? fetchedCategories.map(category => ({\n          ...category,\n          id: category.categoryId,\n          icon: iconMap[category.name] || customCategoryIcon,\n        })) : [])\n      ]);\n\n      if (Array.isArray(fetchedCategories) && fetchedCategories.length > 0) {\n        setSelectedCategory(fetchedCategories[0]);\n      }\n    } catch (error) {\n      console.error('Error initializing dashboard:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    initializeDashboard();\n  }, [initializeDashboard]);\n\n  useEffect(() => {\n    if (!userId) return;\n\n    const handleWebSocketMessage = (message) => {\n      const { type, taskId, categoryId, ...updatedData } = message;\n\n      setTasks(prevTasks => {\n        if (type === 'TASK_UPDATE') {\n          return prevTasks.map(task => task.taskId === taskId ? { ...task, ...updatedData } : task);\n        }\n        return prevTasks;\n      });\n\n      setCategories(prevCategories => {\n        if (type === 'CATEGORY_UPDATE' || type === 'CATEGORY_SHARE') {\n          const index = prevCategories.findIndex(category => category.id === categoryId);\n          if (index !== -1) {\n            return [\n              ...prevCategories.slice(0, index),\n              { ...prevCategories[index], ...updatedData },\n              ...prevCategories.slice(index + 1),\n            ];\n          } else {\n            return [...prevCategories, { id: categoryId, ...updatedData }];\n          }\n        }\n        return prevCategories;\n      });\n    };\n\n    const fetchIds = async () => {\n      try {\n        const [fetchedTasks, fetchedCategories] = await Promise.all([\n          fetchTasks(),\n          fetchCategories(userId),\n        ]);\n\n        const taskIds = fetchedTasks.map(task => task.taskId);\n        const categoryIds = Array.isArray(fetchedCategories) ? fetchedCategories.map(category => category.categoryId) : [];\n\n        connectWebSocket(userId, taskIds, categoryIds, handleWebSocketMessage);\n      } catch (error) {\n        console.error('Error fetching IDs for WebSocket:', error);\n      }\n    };\n\n    fetchIds();\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  // Function to handle adding new task\n  const handleAddNewTask = async (newTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const formattedTask = { ...newTask, categoryId: selectedCategory.id, userId };\n      const addedTask = await addTask(formattedTask, userId);\n\n      setTasks(prevTasks => [...prevTasks, addedTask].filter((task, index, self) =>\n        index === self.findIndex((t) => t.taskId === task.taskId)\n      ));\n      sendUpdateTaskMessage(addedTask);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    } finally {\n      setShowAddTaskPopUp(false);\n    }\n  };\n\n  // Function to handle saving task\n  const handleSaveTask = async (updatedTask) => {\n    if (!selectedCategory) return;\n\n    try {\n      const taskToUpdate = {\n        ...updatedTask,\n        userId,\n        taskId: currentTask.taskId,\n        categoryId: selectedCategory.id || currentTask.categoryId,\n      };\n\n      setTasks(prevTasks => prevTasks.map(task =>\n        task.taskId === taskToUpdate.taskId ? taskToUpdate : task\n      ));\n      sendUpdateTaskMessage(taskToUpdate);\n    } catch (error) {\n      console.error('Error editing task:', error);\n    } finally {\n      setShowEditTaskPopUp(false);\n    }\n  };\n\n  // Function to handle deleting task\n  const handleDeleteTask = async (id) => {\n    try {\n      await deleteTask(id);\n      setTasks(prevTasks => prevTasks.filter(task => task.taskId !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Function to handle adding category\n  const handleAddCategory = async (newCategory) => {\n    try {\n      if (categories.some(cat => cat.name === newCategory.name)) {\n        console.warn('Category already exists:', newCategory);\n        return;\n      }\n\n      const data = await addCategory(newCategory);\n      const newCategoryObject = { id: data.categoryId, name: data.name, icon: customCategoryIcon };\n      \n      setCategories(prevCategories => [...prevCategories, newCategoryObject]);\n      sendWebSocketMessage(`/app/updateCategory/${newCategoryObject.id}`, {\n        type: 'CATEGORY_UPDATE',\n        category: newCategoryObject\n      });\n      setSelectedCategory(newCategoryObject);\n    } catch (error) {\n      console.error('Error adding category:', error);\n    } finally {\n      setShowAddCategoryPopUp(false);\n    }\n  };\n\n  // Function to toggle delete mode\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(prevMode => !prevMode);\n  };\n\n  // Function to handle editing task\n  const handleEditTask = (task) => {\n    setCurrentTask(task);\n    setShowEditTaskPopUp(true);\n  };\n\n  const categorizedTasks = categorizeTasks(tasks, categories);\n  const filteredTasks = categorizedTasks[selectedCategory?.id] || [];\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories\n            onSelectCategory={setSelectedCategory}\n            userId={userId}\n            categoriesFromBackend={categories}\n          />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              {selectedCategory?.icon && <selectedCategory.icon className=\"w-8 h-8\" />}\n              <h2 className=\"text-2xl font-bold flex-1\">\n                {selectedCategory?.name}\n              </h2>\n              <ToDoActions\n                onAddTask={() => setShowAddTaskPopUp(true)}\n                onToggleDeleteMode={toggleDeleteMode}\n                isDeleteMode={isDeleteMode}\n              />\n            </div>\n            <ToDoList\n              tasks={filteredTasks}\n              isDeleteMode={isDeleteMode}\n              onEditTask={handleEditTask}\n              onDeleteTask={handleDeleteTask}\n            />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && <AddTaskPopUp onSave={handleAddNewTask} onClose={() => setShowAddTaskPopUp(false)} />}\n      {showEditTaskPopUp && currentTask && (\n        <EditTaskPopUp\n          task={currentTask}\n          onSave={handleSaveTask}\n          onClose={() => setShowEditTaskPopUp(false)}\n        />\n      )}\n      {showAddCategoryPopUp && (\n        <AddCategoryPopUp\n          onAddCategory={handleAddCategory}\n          onClose={() => setShowAddCategoryPopUp(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}