{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx\",\n  _s = $RefreshSig$();\n// src/pages/HelloWebSocket.jsx\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWebsocket = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  useEffect(() => {\n    connectWebSocket(message => {\n      console.log('Message received from server:', message);\n      try {\n        setResponse(JSON.parse(message));\n      } catch (e) {\n        console.error('Error parsing message:', e);\n        setResponse({\n          error: 'Invalid JSON received from server'\n        });\n      }\n    });\n    return () => disconnectWebSocket();\n  }, []);\n  const handleSendMessage = () => {\n    const taskDTO = {\n      userId: 1,\n      taskId: 1,\n      text: 'Updated Task Text',\n      deadlineDate: null,\n      planDate: null,\n      categoryId: 1,\n      completed: false\n    };\n    sendUpdateTaskMessage('1', taskDTO);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Update Task Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response from server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(response, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(HelloWebsocket, \"UzygO7jZ75H4HW8mRsa6teov5jY=\");\n_c = HelloWebsocket;\nexport default HelloWebsocket;\nvar _c;\n$RefreshReg$(_c, \"HelloWebsocket\");","map":{"version":3,"names":["React","useEffect","useState","connectWebSocket","disconnectWebSocket","sendUpdateTaskMessage","jsxDEV","_jsxDEV","HelloWebsocket","_s","response","setResponse","message","console","log","JSON","parse","e","error","handleSendMessage","taskDTO","userId","taskId","text","deadlineDate","planDate","categoryId","completed","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/HelloWebSocket.jsx"],"sourcesContent":["// src/pages/HelloWebSocket.jsx\nimport React, { useEffect, useState } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendUpdateTaskMessage } from '../websocket';\n\nconst HelloWebsocket = () => {\n    const [response, setResponse] = useState(null);\n\n    useEffect(() => {\n        connectWebSocket((message) => {\n            console.log('Message received from server:', message);\n            try {\n                setResponse(JSON.parse(message));\n            } catch (e) {\n                console.error('Error parsing message:', e);\n                setResponse({ error: 'Invalid JSON received from server' });\n            }\n        });\n\n        return () => disconnectWebSocket();\n    }, []);\n\n    const handleSendMessage = () => {\n        const taskDTO = {\n            userId: 1,\n            taskId: 1,\n            text: 'Updated Task Text',\n            deadlineDate: null,\n            planDate: null,\n            categoryId: 1,\n            completed: false\n        };\n        sendUpdateTaskMessage('1', taskDTO);\n    };\n\n    return (\n        <div>\n            <button onClick={handleSendMessage}>Send Update Task Message</button>\n            {response && (\n                <div>\n                    <h2>Response from server:</h2>\n                    <pre>{JSON.stringify(response, null, 2)}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default HelloWebsocket;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZE,gBAAgB,CAAES,OAAO,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,OAAO,CAAC;MACrD,IAAI;QACAD,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOK,CAAC,EAAE;QACRJ,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAED,CAAC,CAAC;QAC1CN,WAAW,CAAC;UAAEO,KAAK,EAAE;QAAoC,CAAC,CAAC;MAC/D;IACJ,CAAC,CAAC;IAEF,OAAO,MAAMd,mBAAmB,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,mBAAmB;MACzBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;IACf,CAAC;IACDtB,qBAAqB,CAAC,GAAG,EAAEe,OAAO,CAAC;EACvC,CAAC;EAED,oBACIb,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAQsB,OAAO,EAAEV,iBAAkB;MAAAS,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpEvB,QAAQ,iBACLH,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAAqB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B1B,OAAA;QAAAqB,QAAA,EAAMb,IAAI,CAACmB,SAAS,CAACxB,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACxB,EAAA,CAzCID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}