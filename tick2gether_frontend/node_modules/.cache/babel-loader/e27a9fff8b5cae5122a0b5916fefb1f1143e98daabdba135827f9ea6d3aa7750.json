{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/EditTaskPopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon, PlannedIcon, AddTodoIcon } from '../icons';\nimport Calendar from './Calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTaskPopUp({\n  task,\n  onSaveTask,\n  onClose\n}) {\n  _s();\n  const [taskText, setTaskText] = useState(task.text);\n  const [planDate, setPlanDate] = useState(task.planDate ? new Date(task.planDate) : null);\n  const [deadlineDate, setDeadlineDate] = useState(task.deadlineDate ? new Date(task.deadlineDate) : null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [calendarPurpose, setCalendarPurpose] = useState(null); // 'plan' or 'deadline'\n  const ref = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClose]);\n  const handleSaveTask = async e => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    const updatedTask = {\n      ...task,\n      text: taskText,\n      planDate: planDate ? format(planDate, 'yyyy-MM-dd') : null,\n      deadlineDate: deadlineDate ? format(deadlineDate, 'yyyy-MM-dd') : null\n    };\n    await onSaveTask(updatedTask);\n    onClose();\n  };\n  const handleDateChange = date => {\n    if (calendarPurpose === 'plan') {\n      setPlanDate(date);\n    } else if (calendarPurpose === 'deadline') {\n      setDeadlineDate(date);\n    }\n    setShowCalendar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex flex-col space-y-4\",\n        onSubmit: handleSaveTask,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type in what you have to do\",\n          className: `flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`,\n          value: taskText,\n          onChange: e => setTaskText(e.target.value),\n          style: {\n            minWidth: '300px'\n          } // Adjust the minimum width for larger screens\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\",\n          children: \"To Do Input cannot be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\",\n            onClick: () => {\n              setCalendarPurpose('deadline');\n              setShowCalendar(true);\n            },\n            style: {\n              flex: '1 1 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PlanTaskIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), deadlineDate ? format(new Date(deadlineDate), 'MMMM d') : 'Deadline']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setCalendarPurpose('plan');\n              setShowCalendar(true);\n            },\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\",\n            style: {\n              flex: '1 1 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PlannedIcon, {\n              className: \"h-5 w-5 text-pinkCustom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), planDate ? format(new Date(planDate), 'MMMM d') : 'Plan']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\",\n            style: {\n              flex: '1 1 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(AddTodoIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), \"Save Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute right-0 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            selectedDate: calendarPurpose === 'plan' ? planDate : deadlineDate,\n            setSelectedDate: handleDateChange,\n            setShowCalendar: setShowCalendar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTaskPopUp, \"xHQkJTpAxhYC6boDXICYQ7AsLoM=\");\n_c = EditTaskPopUp;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopUp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","format","PlanTaskIcon","PlannedIcon","AddTodoIcon","Calendar","jsxDEV","_jsxDEV","EditTaskPopUp","task","onSaveTask","onClose","_s","taskText","setTaskText","text","planDate","setPlanDate","Date","deadlineDate","setDeadlineDate","showCalendar","setShowCalendar","showTooltip","setShowTooltip","calendarPurpose","setCalendarPurpose","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSaveTask","e","preventDefault","trim","updatedTask","handleDateChange","date","className","children","onSubmit","type","placeholder","value","onChange","style","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flex","selectedDate","setSelectedDate","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/EditTaskPopUp.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon, PlannedIcon, AddTodoIcon } from '../icons';\nimport Calendar from './Calendar';\n\nexport default function EditTaskPopUp({ task, onSaveTask, onClose }) {\n  const [taskText, setTaskText] = useState(task.text);\n  const [planDate, setPlanDate] = useState(task.planDate ? new Date(task.planDate) : null);\n  const [deadlineDate, setDeadlineDate] = useState(task.deadlineDate ? new Date(task.deadlineDate) : null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [calendarPurpose, setCalendarPurpose] = useState(null); // 'plan' or 'deadline'\n  const ref = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClose]);\n\n  const handleSaveTask = async (e) => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    const updatedTask = {\n      ...task,\n      text: taskText,\n      planDate: planDate ? format(planDate, 'yyyy-MM-dd') : null,\n      deadlineDate: deadlineDate ? format(deadlineDate, 'yyyy-MM-dd') : null,\n    };\n\n    await onSaveTask(updatedTask);\n    onClose();\n  };\n\n  const handleDateChange = (date) => {\n    if (calendarPurpose === 'plan') {\n      setPlanDate(date);\n    } else if (calendarPurpose === 'deadline') {\n      setDeadlineDate(date);\n    }\n    setShowCalendar(false);\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\">\n      <div ref={ref} className=\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\">\n        <form className=\"flex flex-col space-y-4\" onSubmit={handleSaveTask}>\n          <input\n            type=\"text\"\n            placeholder=\"Type in what you have to do\"\n            className={`flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`}\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n            style={{ minWidth: '300px' }} // Adjust the minimum width for larger screens\n          />\n          {showTooltip && (\n            <div className=\"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\">\n              To Do Input cannot be empty.\n            </div>\n          )}\n          <div className=\"flex space-x-2\">\n            <button\n              type=\"button\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\"\n              onClick={() => {\n                setCalendarPurpose('deadline');\n                setShowCalendar(true);\n              }}\n              style={{ flex: '1 1 0' }}\n            >\n              <PlanTaskIcon className=\"h-5 w-5\" />\n              {deadlineDate ? format(new Date(deadlineDate), 'MMMM d') : 'Deadline'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setCalendarPurpose('plan');\n                setShowCalendar(true);\n              }}\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              <PlannedIcon className=\"h-5 w-5 text-pinkCustom\" />\n              {planDate ? format(new Date(planDate), 'MMMM d') : 'Plan'}\n            </button>\n            <button\n              type=\"submit\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              <AddTodoIcon className=\"h-5 w-5\" />\n              Save Task\n            </button>\n          </div>\n          {showCalendar && (\n            <div className=\"absolute right-0 mt-2\">\n              <Calendar\n                selectedDate={calendarPurpose === 'plan' ? planDate : deadlineDate}\n                setSelectedDate={handleDateChange}\n                setShowCalendar={setShowCalendar}\n              />\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}