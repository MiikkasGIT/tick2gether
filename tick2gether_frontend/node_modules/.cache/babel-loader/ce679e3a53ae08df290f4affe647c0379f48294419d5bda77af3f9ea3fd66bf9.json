{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTodos,\n  isDeleteMode,\n  onEditTodo,\n  onDateChange,\n  selectedCategory\n}) {\n  const handleCheckboxChange = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const handleDelete = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  const handleEditClick = todo => {\n    onEditTodo(todo);\n  };\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo => todo.id === id ? {\n        ...todo,\n        [`${purpose}Date`]: date\n      } : todo);\n      await onDateChange(id, date, purpose);\n    } catch (error) {\n      console.error('Error updating date:', error);\n    }\n  };\n  const today = startOfToday();\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n      case 'Logbook':\n        return todo.category === 'Logbook';\n      default:\n        return todo.category === selectedCategory.name;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.id),\n        handleDelete: () => handleDelete(todo.id),\n        handleEditClick: () => handleEditClick(todo),\n        isDeleteMode: isDeleteMode,\n        onDateChange: handleDateChange,\n        isTodayCategory: selectedCategory.name === 'Today'\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","ToDoList","todos","setTodos","isDeleteMode","onEditTodo","onDateChange","selectedCategory","handleCheckboxChange","id","updatedTodos","map","todo","completed","handleDelete","filter","handleEditClick","handleDateChange","date","purpose","error","console","today","filteredTodos","name","planDate","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\nexport default function ToDoList({ todos = [], setTodos, isDeleteMode, onEditTodo, onDateChange, selectedCategory }) {\n  \n  const handleCheckboxChange = (id) => {\n    const updatedTodos = todos.map(todo => \n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const handleEditClick = (todo) => {\n    onEditTodo(todo);\n  };\n\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo =>\n        todo.id === id ? { ...todo, [`${purpose}Date`]: date } : todo\n      );\n      await onDateChange(id, date, purpose); \n    } catch (error) {\n      console.error('Error updating date:', error);\n    }\n  };\n\n  const today = startOfToday();\n\n  const filteredTodos = todos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return (todo.category === selectedCategory.name && (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)));\n      case 'All Tasks':\n        return (!todo.planDate || isSameDay(new Date(todo.planDate), today) || isBefore(new Date(todo.planDate), today)) && todo.category !== 'Planned';\n      case 'Logbook':\n        return todo.category === 'Logbook';\n      default:\n        return todo.category === selectedCategory.name;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.id}\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.id)}\n            handleDelete={() => handleDelete(todo.id)}\n            handleEditClick={() => handleEditClick(todo)}\n            isDeleteMode={isDeleteMode}\n            onDateChange={handleDateChange}\n            isTodayCategory={selectedCategory.name === 'Today'}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}