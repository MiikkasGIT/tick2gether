{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList({\n  tasks,\n  setTasks,\n  isDeleteMode,\n  onEditTask,\n  onDeleteTask,\n  selectedCategory\n}) {\n  const handleCheckboxChange = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleDelete = id => {\n    const updatedTasks = tasks.filter(task => task.taskId !== id);\n    setTasks(updatedTasks);\n  };\n  const handleTodoClick = (task, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTask(task);\n    } else {\n      setTasks(tasks.map(t => t.taskId === task.taskId ? {\n        ...t,\n        selected: !t.selected\n      } : {\n        ...t,\n        selected: false\n      }));\n    }\n  };\n  const handleEditClick = task => {\n    onEditTask(task);\n  };\n  const handleDateChange = (id, date, purpose) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        if (purpose === 'plan') {\n          return {\n            ...task,\n            planDate: date\n          };\n        } else if (purpose === 'deadline') {\n          return {\n            ...task,\n            hasCalendar: !!date,\n            deadlineDate: date\n          };\n        }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const today = startOfToday();\n  const filteredTasks = tasks.filter(task => {\n    switch (selectedCategory) {\n      case 'Planned':\n        return task.planDate && !task.completed && isAfter(new Date(task.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return task.category === selectedCategory && (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today));\n      case 'All Tasks':\n        return (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)) && task.category !== 'Planned';\n      case 'Logbook':\n        return task.category === 'Logbook';\n      default:\n        return task.category === selectedCategory;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(ToDo, {\n        task: task,\n        handleCheckboxChange: handleCheckboxChange,\n        handleTodoClick: handleTodoClick,\n        handleDelete: handleDelete,\n        handleEditClick: handleEditClick,\n        isDeleteMode: isDeleteMode,\n        onDateChange: handleDateChange,\n        isTodayCategory: selectedCategory === 'Today' // Check for 'Today' category\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","startOfToday","isSameDay","isAfter","isBefore","jsxDEV","_jsxDEV","ToDoList","tasks","setTasks","isDeleteMode","onEditTask","onDeleteTask","selectedCategory","handleCheckboxChange","id","updatedTasks","map","task","taskId","completed","handleDelete","filter","handleTodoClick","e","target","tagName","t","selected","handleEditClick","handleDateChange","date","purpose","planDate","hasCalendar","deadlineDate","today","filteredTasks","Date","category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onDateChange","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isSameDay, isAfter, isBefore } from 'date-fns';\n\nfunction ToDoList({ tasks, setTasks, isDeleteMode, onEditTask, onDeleteTask, selectedCategory }) {\n  const handleCheckboxChange = (id) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTasks = tasks.filter(task => task.taskId !== id);\n    setTasks(updatedTasks);\n  };\n\n  const handleTodoClick = (task, e) => {\n    if (e.target.tagName === 'LABEL') {\n      onEditTask(task);\n    } else {\n      setTasks(tasks.map(t =>\n        t.taskId === task.taskId ? { ...t, selected: !t.selected } : { ...t, selected: false }\n      ));\n    }\n  };\n\n  const handleEditClick = (task) => {\n    onEditTask(task);\n  };\n\n  const handleDateChange = (id, date, purpose) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.taskId === id) {\n        if (purpose === 'plan') {\n          return { ...task, planDate: date };\n        } else if (purpose === 'deadline') {\n          return { ...task, hasCalendar: !!date, deadlineDate: date };\n        }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const today = startOfToday();\n\n  const filteredTasks = tasks.filter(task => {\n    switch (selectedCategory) {\n      case 'Planned':\n        return task.planDate && !task.completed && isAfter(new Date(task.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return (task.category === selectedCategory && (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)));\n      case 'All Tasks':\n        return (!task.planDate || isSameDay(new Date(task.planDate), today) || isBefore(new Date(task.planDate), today)) && task.category !== 'Planned';\n      case 'Logbook':\n        return task.category === 'Logbook';\n      default:\n        return task.category === selectedCategory;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTasks.map(task => (\n          <ToDo\n            key={task.taskId}\n            task={task}\n            handleCheckboxChange={handleCheckboxChange}\n            handleTodoClick={handleTodoClick}\n            handleDelete={handleDelete}\n            handleEditClick={handleEditClick}\n            isDeleteMode={isDeleteMode}\n            onDateChange={handleDateChange}\n            isTodayCategory={selectedCategory === 'Today'} // Check for 'Today' category\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n\nexport default ToDoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}