{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { connect, disconnect, sendMessage } from '../webs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTestComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // Assuming the user ID is 1 for testing purposes\n\n  useEffect(() => {\n    const onMessage = message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    connect(userId, onMessage);\n    return () => {\n      disconnect();\n    };\n  }, [userId]);\n  const sendTestMessage = () => {\n    const message = {\n      taskId: 1,\n      text: 'Test Task',\n      userId: 1,\n      categoryId: 1\n    };\n    sendMessage(`/app/sendTestMessage/${userId}`, message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendTestMessage,\n      children: \"Send Test Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketTestComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketTestComponent;\nexport default WebSocketTestComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTestComponent\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","connect","disconnect","sendMessage","jsxDEV","_jsxDEV","WebSocketTestComponent","_s","messages","setMessages","userId","onMessage","message","prevMessages","sendTestMessage","taskId","text","categoryId","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { connect, disconnect, sendMessage } from '../webs';\n\nconst WebSocketTestComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // Assuming the user ID is 1 for testing purposes\n\n  useEffect(() => {\n    const onMessage = (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    };\n\n    connect(userId, onMessage);\n\n    return () => {\n      disconnect();\n    };\n  }, [userId]);\n\n  const sendTestMessage = () => {\n    const message = { taskId: 1, text: 'Test Task', userId: 1, categoryId: 1 };\n    sendMessage(`/app/sendTestMessage/${userId}`, message);\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Test Component</h2>\n      <button onClick={sendTestMessage}>Send Test Message</button>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{JSON.stringify(message)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketTestComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,OAAO,EAAEC,UAAU,EAAEC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,MAAM,GAAG,CAAC,CAAC,CAAC;;EAElBb,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAIC,OAAO,IAAK;MAC7BH,WAAW,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEDX,OAAO,CAACS,MAAM,EAAEC,SAAS,CAAC;IAE1B,OAAO,MAAM;MACXT,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACQ,MAAM,CAAC,CAAC;EAEZ,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMF,OAAO,GAAG;MAAEG,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEN,MAAM,EAAE,CAAC;MAAEO,UAAU,EAAE;IAAE,CAAC;IAC1Ed,WAAW,CAAC,wBAAwBO,MAAM,EAAE,EAAEE,OAAO,CAAC;EACxD,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjB,OAAA;MAAQkB,OAAO,EAAET,eAAgB;MAAAI,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DjB,OAAA;MAAAa,QAAA,EACGV,QAAQ,CAACgB,GAAG,CAAC,CAACZ,OAAO,EAAEa,KAAK,kBAC3BpB,OAAA;QAAAa,QAAA,EAAiBQ,IAAI,CAACC,SAAS,CAACf,OAAO;MAAC,GAA/Ba,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCID,sBAAsB;AAAAsB,EAAA,GAAtBtB,sBAAsB;AAkC5B,eAAeA,sBAAsB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}