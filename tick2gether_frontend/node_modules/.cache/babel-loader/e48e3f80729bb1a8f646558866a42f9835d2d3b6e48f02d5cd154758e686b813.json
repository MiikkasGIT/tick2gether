{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/EditTaskPopUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon } from '../icons';\nimport Calendar from './Calendar';\nimport { updateTask } from '../api'; // Importieren Sie die updateTask-Funktion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTaskPopUp({\n  task,\n  onSaveTask,\n  onClose\n}) {\n  _s();\n  const [taskText, setTaskText] = useState(task.text);\n  const [selectedPlanDate, setSelectedPlanDate] = useState(task.planDate || null);\n  const [selectedDeadlineDate, setSelectedDeadlineDate] = useState(task.deadlineDate || null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [calendarPurpose, setCalendarPurpose] = useState(null); // 'plan' or 'deadline'\n  const [showTooltip, setShowTooltip] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClose]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    const updatedTask = {\n      ...task,\n      text: taskText,\n      planDate: selectedPlanDate ? format(selectedPlanDate, 'yyyy-MM-dd') : null,\n      deadlineDate: selectedDeadlineDate ? format(selectedDeadlineDate, 'yyyy-MM-dd') : null\n    };\n    try {\n      const data = await updateTask(updatedTask);\n      onSaveTask(data);\n      setShowTooltip(false);\n      onClose();\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const handleDateChange = date => {\n    if (calendarPurpose === 'plan') {\n      setSelectedPlanDate(date);\n    } else if (calendarPurpose === 'deadline') {\n      setSelectedDeadlineDate(date);\n    }\n    setShowCalendar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: \"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex flex-col space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type in what you have to do\",\n          className: `flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`,\n          value: taskText,\n          onChange: e => setTaskText(e.target.value),\n          style: {\n            minWidth: '300px'\n          } // Adjust the minimum width for larger screens\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\",\n          children: \"To Do Input cannot be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\",\n            onClick: () => {\n              setCalendarPurpose('deadline');\n              setShowCalendar(true);\n            },\n            style: {\n              flex: '1 1 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PlanTaskIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), selectedDeadlineDate ? format(new Date(selectedDeadlineDate), 'MMMM d') : 'Deadline']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setCalendarPurpose('plan');\n              setShowCalendar(true);\n            },\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\",\n            style: {\n              flex: '1 1 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(PlanTaskIcon, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), selectedPlanDate ? format(new Date(selectedPlanDate), 'MMMM d') : 'Plan']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\",\n            style: {\n              flex: '1 1 0'\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), showCalendar && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute right-0 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            selectedDate: calendarPurpose === 'plan' ? selectedPlanDate : selectedDeadlineDate,\n            setSelectedDate: handleDateChange,\n            setShowCalendar: setShowCalendar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTaskPopUp, \"UzCp3QGevDyvyiI/kLJF8AqI5LM=\");\n_c = EditTaskPopUp;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopUp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","format","PlanTaskIcon","Calendar","updateTask","jsxDEV","_jsxDEV","EditTaskPopUp","task","onSaveTask","onClose","_s","taskText","setTaskText","text","selectedPlanDate","setSelectedPlanDate","planDate","selectedDeadlineDate","setSelectedDeadlineDate","deadlineDate","showCalendar","setShowCalendar","calendarPurpose","setCalendarPurpose","showTooltip","setShowTooltip","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSubmit","e","preventDefault","trim","updatedTask","data","error","console","handleDateChange","date","className","children","onSubmit","type","placeholder","value","onChange","style","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flex","Date","selectedDate","setSelectedDate","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/EditTaskPopUp.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { PlanTaskIcon } from '../icons';\nimport Calendar from './Calendar';\nimport { updateTask } from '../api'; // Importieren Sie die updateTask-Funktion\n\nexport default function EditTaskPopUp({ task, onSaveTask, onClose }) {\n  const [taskText, setTaskText] = useState(task.text);\n  const [selectedPlanDate, setSelectedPlanDate] = useState(task.planDate || null);\n  const [selectedDeadlineDate, setSelectedDeadlineDate] = useState(task.deadlineDate || null);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [calendarPurpose, setCalendarPurpose] = useState(null); // 'plan' or 'deadline'\n  const [showTooltip, setShowTooltip] = useState(false);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref, onClose]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (taskText.trim() === '') {\n      setShowTooltip(true);\n      return;\n    }\n    const updatedTask = {\n      ...task,\n      text: taskText,\n      planDate: selectedPlanDate ? format(selectedPlanDate, 'yyyy-MM-dd') : null,\n      deadlineDate: selectedDeadlineDate ? format(selectedDeadlineDate, 'yyyy-MM-dd') : null,\n    };\n\n    try {\n      const data = await updateTask(updatedTask);\n      onSaveTask(data);\n      setShowTooltip(false);\n      onClose();\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const handleDateChange = (date) => {\n    if (calendarPurpose === 'plan') {\n      setSelectedPlanDate(date);\n    } else if (calendarPurpose === 'deadline') {\n      setSelectedDeadlineDate(date);\n    }\n    setShowCalendar(false);\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50\">\n      <div ref={ref} className=\"bg-white rounded-large shadow-custom relative p-1.5 border border-gray-300 w-full max-w-lg\">\n        <form onSubmit={handleSubmit} className=\"flex flex-col space-y-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Type in what you have to do\"\n            className={`flex-grow p-2 border rounded-custom bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-blueCustom ${showTooltip ? 'border-red-500' : 'border-gray-300'}`}\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n            style={{ minWidth: '300px' }} // Adjust the minimum width for larger screens\n          />\n          {showTooltip && (\n            <div className=\"text-sm text-red-500 bg-white border border-red-500 rounded-custom p-2 shadow-lg w-auto left-0 font-semibold\">\n              To Do Input cannot be empty.\n            </div>\n          )}\n          <div className=\"flex space-x-2\">\n            <button\n              type=\"button\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-grayCustom-dark font-medium bg-[#0000000D] hover:bg-gray-200\"\n              onClick={() => {\n                setCalendarPurpose('deadline');\n                setShowCalendar(true);\n              }}\n              style={{ flex: '1 1 0' }}\n            >\n              <PlanTaskIcon className=\"h-5 w-5\" />\n              {selectedDeadlineDate ? format(new Date(selectedDeadlineDate), 'MMMM d') : 'Deadline'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setCalendarPurpose('plan');\n                setShowCalendar(true);\n              }}\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-pinkCustom font-medium bg-pinkCustom-light hover:bg-pink-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              <PlanTaskIcon className=\"h-5 w-5\" />\n              {selectedPlanDate ? format(new Date(selectedPlanDate), 'MMMM d') : 'Plan'}\n            </button>\n            <button\n              type=\"submit\"\n              className=\"flex items-center justify-center gap-1 flex-grow h-10 rounded-custom text-blueCustom font-medium bg-blueCustom-light hover:bg-blue-200\"\n              style={{ flex: '1 1 0' }}\n            >\n              Edit\n            </button>\n          </div>\n          {showCalendar && (\n            <div className=\"absolute right-0 mt-2\">\n              <Calendar\n                selectedDate={calendarPurpose === 'plan' ? selectedPlanDate : selectedDeadlineDate}\n                setSelectedDate={handleDateChange}\n                setShowCalendar={setShowCalendar}\n              />\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}