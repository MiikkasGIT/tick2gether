{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList({\n  todos = [],\n  setTasks,\n  isDeleteMode,\n  onEditTodo,\n  selectedCategory\n}) {\n  _s();\n  const [selectedTodoId, setSelectedTodoId] = useState(null); // State für die ausgewählte Aufgaben-ID\n  const [localTodos, setLocalTodos] = useState(todos); // Lokaler State für die Aufgaben\n\n  // Effekt, der bei jeder Änderung der todos-Liste ausgeführt wird\n  useEffect(() => {\n    setLocalTodos(todos);\n    console.log('Todos updated:', todos);\n  }, [todos]);\n\n  // Funktion zum Bearbeiten des Status der Checkbox einer Aufgabe\n  const handleCheckboxChange = id => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = localTodos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n\n  // Funktion zum Löschen einer Aufgabe\n  const handleDeleteClick = id => {\n    console.log('Deleting task with ID:', id);\n    const updatedTodos = localTodos.filter(todo => todo.taskId !== id);\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n\n  // Funktion, die aufgerufen wird, wenn auf eine Aufgabe geklickt wird\n  const handleTodoClick = id => {\n    console.log('Todo clicked with ID:', id);\n    setSelectedTodoId(id); // Ausgewählte Aufgaben-ID im State setzen\n  };\n\n  // Funktion zum Bearbeiten einer Aufgabe\n  const handleEditClick = todo => {\n    onEditTodo(todo); // Funktion zum Bearbeiten der Aufgabe aufrufen\n  };\n\n  // Funktion zum Ändern des Datums einer Aufgabe\n  const handleDateChange = (id, date, purpose) => {\n    const formattedDate = date.toISOString().split('T')[0]; // Datum im Format \"yyyy-MM-dd\" formatieren\n    console.log(`Updating ${purpose} date to:`, formattedDate);\n    const updatedTodos = localTodos.map(todo => todo.taskId === id ? {\n      ...todo,\n      [`${purpose}Date`]: formattedDate\n    } : todo);\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n  const today = startOfToday(); // Heutiges Datum\n\n  // Filtern der Aufgaben basierend auf der ausgewählten Kategorie\n  const filteredTodos = localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      className: \"sr-only\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n        // Verwendung der taskId als Schlüssel\n        todo: todo,\n        handleCheckboxChange: () => handleCheckboxChange(todo.taskId),\n        handleTodoClick: () => handleTodoClick(todo.taskId),\n        handleDelete: () => handleDeleteClick(todo.taskId),\n        handleEditClick: () => handleEditClick(todo),\n        isDeleteMode: isDeleteMode,\n        onDateChange: handleDateChange,\n        isSelected: todo.taskId === selectedTodoId // Übergeben des ausgewählten Zustands\n        ,\n        isTodayCategory: selectedCategory.name === 'Today'\n      }, todo.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"isE7RHpnWkp6sOdTU/M3gLTaVVA=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","ToDo","startOfToday","isAfter","jsxDEV","_jsxDEV","ToDoList","todos","setTasks","isDeleteMode","onEditTodo","selectedCategory","_s","selectedTodoId","setSelectedTodoId","localTodos","setLocalTodos","console","log","handleCheckboxChange","id","updatedTodos","map","todo","taskId","updatedTodo","completed","categoryId","handleDeleteClick","filter","handleTodoClick","handleEditClick","handleDateChange","date","purpose","formattedDate","toISOString","split","today","filteredTodos","name","planDate","Date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","onDateChange","isSelected","isTodayCategory","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/components/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDo from './ToDo';\nimport { startOfToday, isAfter } from 'date-fns';\n\nexport default function ToDoList({ todos = [], setTasks, isDeleteMode, onEditTodo, selectedCategory }) {\n  const [selectedTodoId, setSelectedTodoId] = useState(null); // State für die ausgewählte Aufgaben-ID\n  const [localTodos, setLocalTodos] = useState(todos); // Lokaler State für die Aufgaben\n\n  // Effekt, der bei jeder Änderung der todos-Liste ausgeführt wird\n  useEffect(() => {\n    setLocalTodos(todos);\n    console.log('Todos updated:', todos);\n  }, [todos]);\n\n  // Funktion zum Bearbeiten des Status der Checkbox einer Aufgabe\n  const handleCheckboxChange = (id) => {\n    console.log('Checkbox changed for ID:', id);\n    const updatedTodos = localTodos.map(todo => {\n      if (todo.taskId === id) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Kategorie-ID auf 7 setzen, wenn die Aufgabe abgeschlossen ist\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n\n  // Funktion zum Löschen einer Aufgabe\n  const handleDeleteClick = (id) => {\n    console.log('Deleting task with ID:', id);\n    const updatedTodos = localTodos.filter(todo => todo.taskId !== id);\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n\n  // Funktion, die aufgerufen wird, wenn auf eine Aufgabe geklickt wird\n  const handleTodoClick = (id) => {\n    console.log('Todo clicked with ID:', id);\n    setSelectedTodoId(id); // Ausgewählte Aufgaben-ID im State setzen\n  };\n\n  // Funktion zum Bearbeiten einer Aufgabe\n  const handleEditClick = (todo) => {\n    onEditTodo(todo); // Funktion zum Bearbeiten der Aufgabe aufrufen\n  };\n\n  // Funktion zum Ändern des Datums einer Aufgabe\n  const handleDateChange = (id, date, purpose) => {\n    const formattedDate = date.toISOString().split('T')[0]; // Datum im Format \"yyyy-MM-dd\" formatieren\n    console.log(`Updating ${purpose} date to:`, formattedDate);\n    const updatedTodos = localTodos.map(todo =>\n      todo.taskId === id ? { ...todo, [`${purpose}Date`]: formattedDate } : todo\n    );\n    setLocalTodos(updatedTodos); // Lokalen State aktualisieren\n  };\n\n  const today = startOfToday(); // Heutiges Datum\n\n  // Filtern der Aufgaben basierend auf der ausgewählten Kategorie\n  const filteredTodos = localTodos.filter(todo => {\n    switch (selectedCategory.name) {\n      case 'Planned':\n        return todo.planDate && !todo.completed && isAfter(new Date(todo.planDate), today);\n      case 'Today':\n      case 'Personal':\n      case 'Work':\n      case 'Any Time':\n        return todo.categoryId === selectedCategory.id;\n      case 'All Tasks':\n        return !todo.planDate && todo.categoryId !== 7;\n      case 'Logbook':\n        return todo.categoryId === 7;\n      default:\n        return todo.categoryId === selectedCategory.id;\n    }\n  });\n\n  return (\n    <fieldset>\n      <legend className=\"sr-only\">Tasks</legend>\n      <div className=\"space-y-1\">\n        {filteredTodos.map(todo => (\n          <ToDo\n            key={todo.taskId} // Verwendung der taskId als Schlüssel\n            todo={todo}\n            handleCheckboxChange={() => handleCheckboxChange(todo.taskId)}\n            handleTodoClick={() => handleTodoClick(todo.taskId)}\n            handleDelete={() => handleDeleteClick(todo.taskId)}\n            handleEditClick={() => handleEditClick(todo)}\n            isDeleteMode={isDeleteMode}\n            onDateChange={handleDateChange}\n            isSelected={todo.taskId === selectedTodoId} // Übergeben des ausgewählten Zustands\n            isTodayCategory={selectedCategory.name === 'Today'}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}