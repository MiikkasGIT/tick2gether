{"ast":null,"code":"import { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nconst SOCKET_URL = 'http://localhost:8080/ws';\nclass WebSocketService {\n  constructor() {\n    this.stompClient = null;\n  }\n  connect(onMessageReceived) {\n    const socket = new SockJS(SOCKET_URL);\n    this.stompClient = Stomp.over(socket);\n    this.stompClient.connect({}, () => {\n      console.log('Connected to WebSocket');\n      this.stompClient.subscribe('/topic/tasks', message => {\n        onMessageReceived(JSON.parse(message.body));\n      });\n    });\n  }\n  disconnect() {\n    if (this.stompClient) {\n      this.stompClient.disconnect();\n    }\n  }\n  sendMessage(message) {\n    if (this.stompClient) {\n      this.stompClient.send('/app/updateTask', {}, JSON.stringify(message));\n    }\n  }\n}\nconst webSocketService = new WebSocketService();\nexport default webSocketService;","map":{"version":3,"names":["Stomp","SockJS","SOCKET_URL","WebSocketService","constructor","stompClient","connect","onMessageReceived","socket","over","console","log","subscribe","message","JSON","parse","body","disconnect","sendMessage","send","stringify","webSocketService"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/websocket.js"],"sourcesContent":["import { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nclass WebSocketService {\n  constructor() {\n    this.stompClient = null;\n  }\n\n  connect(onMessageReceived) {\n    const socket = new SockJS(SOCKET_URL);\n    this.stompClient = Stomp.over(socket);\n\n    this.stompClient.connect({}, () => {\n      console.log('Connected to WebSocket');\n      this.stompClient.subscribe('/topic/tasks', (message) => {\n        onMessageReceived(JSON.parse(message.body));\n      });\n    });\n  }\n\n  disconnect() {\n    if (this.stompClient) {\n      this.stompClient.disconnect();\n    }\n  }\n\n  sendMessage(message) {\n    if (this.stompClient) {\n      this.stompClient.send('/app/updateTask', {}, JSON.stringify(message));\n    }\n  }\n}\n\nconst webSocketService = new WebSocketService();\nexport default webSocketService;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,UAAU,GAAG,0BAA0B;AAE7C,MAAMC,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAC,OAAOA,CAACC,iBAAiB,EAAE;IACzB,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAACC,UAAU,CAAC;IACrC,IAAI,CAACG,WAAW,GAAGL,KAAK,CAACS,IAAI,CAACD,MAAM,CAAC;IAErC,IAAI,CAACH,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;MACjCI,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAACN,WAAW,CAACO,SAAS,CAAC,cAAc,EAAGC,OAAO,IAAK;QACtDN,iBAAiB,CAACO,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACZ,WAAW,EAAE;MACpB,IAAI,CAACA,WAAW,CAACY,UAAU,CAAC,CAAC;IAC/B;EACF;EAEAC,WAAWA,CAACL,OAAO,EAAE;IACnB,IAAI,IAAI,CAACR,WAAW,EAAE;MACpB,IAAI,CAACA,WAAW,CAACc,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAEL,IAAI,CAACM,SAAS,CAACP,OAAO,CAAC,CAAC;IACvE;EACF;AACF;AAEA,MAAMQ,gBAAgB,GAAG,IAAIlB,gBAAgB,CAAC,CAAC;AAC/C,eAAekB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}