{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useTasks } from './useTasks';\nimport { useCategories } from './useCategories';\nimport { useWebSocket } from './useWebSocket';\nexport function useDashboard() {\n  _s();\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const {\n    tasks,\n    handleAddTask,\n    handleDeleteTask\n  } = useTasks(userId, selectedCategory);\n  const {\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n    handleAddCategory\n  } = useCategories(userId);\n  const handleWebSocketMessage = useCallback(message => {\n    console.log('Received WebSocket message:', message);\n    const {\n      type,\n      taskId,\n      ...updatedTaskData\n    } = message;\n    if (type === 'TASK_UPDATE') {\n      setTasks(prevTasks => {\n        const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n        if (taskIndex !== -1) {\n          const updatedTasks = [...prevTasks];\n          updatedTasks[taskIndex] = {\n            ...prevTasks[taskIndex],\n            ...updatedTaskData\n          };\n          return updatedTasks;\n        } else {\n          return [...prevTasks, {\n            taskId,\n            ...updatedTaskData\n          }];\n        }\n      });\n    }\n  }, [setTasks]);\n  useWebSocket(userId, handleWebSocketMessage);\n  const handleCheckboxChange = async taskId => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null\n        };\n      }\n      return todo;\n    });\n    setTasks(updatedTodos);\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, {\n        ...updatedTask,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n  return {\n    showEditTaskPopUp,\n    showAddTaskPopUp,\n    showAddCategoryPopUp,\n    isDeleteMode,\n    currentTask,\n    setCurrentTask,\n    setShowEditTaskPopUp,\n    setShowAddTaskPopUp,\n    setShowAddCategoryPopUp,\n    setIsDeleteMode,\n    handleAddTask,\n    handleDeleteTask,\n    handleCheckboxChange,\n    handleDateChange,\n    handleAddCategory,\n    tasks,\n    categories,\n    selectedCategory,\n    setSelectedCategory\n  };\n}\n_s(useDashboard, \"HhVG7usz04CrVz7OfXFP0VPRuGQ=\", false, function () {\n  return [useTasks, useCategories, useWebSocket];\n});","map":{"version":3,"names":["useState","useCallback","useTasks","useCategories","useWebSocket","useDashboard","_s","showEditTaskPopUp","setShowEditTaskPopUp","showAddTaskPopUp","setShowAddTaskPopUp","showAddCategoryPopUp","setShowAddCategoryPopUp","isDeleteMode","setIsDeleteMode","currentTask","setCurrentTask","userId","setUserId","tasks","handleAddTask","handleDeleteTask","selectedCategory","categories","setSelectedCategory","handleAddCategory","handleWebSocketMessage","message","console","log","type","taskId","updatedTaskData","setTasks","prevTasks","taskIndex","findIndex","task","updatedTasks","handleCheckboxChange","updatedTodos","map","todo","updatedTodo","completed","categoryId","updatedTask","find","sendWebSocketMessage","error","handleDateChange","date","purpose","Date","toISOString"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/hooks/useDashboard.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useTasks } from './useTasks';\nimport { useCategories } from './useCategories';\nimport { useWebSocket } from './useWebSocket';\n\nexport function useDashboard() {\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false);\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showAddCategoryPopUp, setShowAddCategoryPopUp] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  const { tasks, handleAddTask, handleDeleteTask } = useTasks(userId, selectedCategory);\n  const { categories, selectedCategory, setSelectedCategory, handleAddCategory } = useCategories(userId);\n\n  const handleWebSocketMessage = useCallback((message) => {\n    console.log('Received WebSocket message:', message);\n\n    const { type, taskId, ...updatedTaskData } = message;\n\n    if (type === 'TASK_UPDATE') {\n      setTasks(prevTasks => {\n        const taskIndex = prevTasks.findIndex(task => task.taskId === taskId);\n        if (taskIndex !== -1) {\n          const updatedTasks = [...prevTasks];\n          updatedTasks[taskIndex] = { ...prevTasks[taskIndex], ...updatedTaskData };\n          return updatedTasks;\n        } else {\n          return [...prevTasks, { taskId, ...updatedTaskData }];\n        }\n      });\n    }\n  }, [setTasks]);\n\n  useWebSocket(userId, handleWebSocketMessage);\n\n  const handleCheckboxChange = async (taskId) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        if (updatedTodo.completed) {\n          updatedTodo.categoryId = 7; // Logbook category\n        }\n        return updatedTodo;\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message:', error);\n    }\n  };\n\n  const handleDateChange = async (taskId, date, purpose) => {\n    const updatedTodos = tasks.map(todo => {\n      if (todo.taskId === taskId) {\n        return {\n          ...todo,\n          [`${purpose}Date`]: date ? new Date(date).toISOString() : null,\n        };\n      }\n      return todo;\n    });\n\n    setTasks(updatedTodos);\n\n    const updatedTask = updatedTodos.find(todo => todo.taskId === taskId);\n    try {\n      sendWebSocketMessage(`/app/updateTask/${taskId}`, { ...updatedTask, userId });\n    } catch (error) {\n      console.error('Error sending WebSocket message for date update:', error);\n    }\n  };\n\n  return {\n    showEditTaskPopUp,\n    showAddTaskPopUp,\n    showAddCategoryPopUp,\n    isDeleteMode,\n    currentTask,\n    setCurrentTask,\n    setShowEditTaskPopUp,\n    setShowAddTaskPopUp,\n    setShowAddCategoryPopUp,\n    setIsDeleteMode,\n    handleAddTask,\n    handleDeleteTask,\n    handleCheckboxChange,\n    handleDateChange,\n    handleAddCategory,\n    tasks,\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}