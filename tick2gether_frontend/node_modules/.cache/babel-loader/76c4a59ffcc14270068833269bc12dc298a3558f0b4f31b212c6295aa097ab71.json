{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  // Deine Basis-URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('jwtToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchSharedUsers = async taskId => {\n  try {\n    const response = await api.get(`/api/v1/task/sharedUsers/${taskId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shared users:', error);\n    throw new Error('Fetching shared users failed');\n  }\n};\nexport const registerUser = async user => {\n  try {\n    const response = await api.post('/auth/register', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const accessToken = response.data;\n    if (accessToken) {\n      localStorage.setItem('jwtToken', accessToken);\n    }\n    return {\n      accessToken\n    };\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\nexport const fetchEmail = async () => {\n  try {\n    const response = await api.get('/auth/email');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email:', error);\n    throw new Error('Fetching email failed');\n  }\n};\nexport const fetchUserId = async email => {\n  try {\n    const response = await api.get(`/api/v1/user/useridByEmail?email=${email}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error);\n    throw new Error('Fetching user ID failed');\n  }\n};\nexport const fetchAllUsers = async () => {\n  try {\n    const response = await api.get('/api/v1/user/getAllUsers');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw new Error('Fetching users failed');\n  }\n};\nexport const fetchTasks = async () => {\n  try {\n    const response = await api.get('/api/v1/task/getTasks');\n    const tasks = response.data.map(task => ({\n      ...task,\n      assignedUsers: task.sharedUserIds || [] // Ensure assignedUsers is always an array\n    }));\n    return tasks;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport const fetchCategories = async userId => {\n  try {\n    const response = await api.get(`/api/v1/category/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    throw error;\n  }\n};\nexport const addCategory = async category => {\n  try {\n    const response = await api.post(`/api/v1/category/save`, category);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding category:', error);\n    throw error;\n  }\n};\nexport const deleteCategory = async categoryId => {\n  try {\n    const response = await api.delete(`/api/v1/category/delete/${categoryId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error deleting category:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const addTask = async (task, userId) => {\n  try {\n    const taskData = {\n      ...task,\n      userId,\n      // Stellen Sie sicher, dass die userId enthalten ist\n      categoryId: task.categoryId // Verwenden Sie die Kategorie-ID ohne Präfix\n    };\n    console.log('Sending task data to server:', taskData); // Debugging\n\n    const response = await api.post('/api/v1/task/save', taskData);\n    console.log('Response:', taskData); // Debugging\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error adding task:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const fetchTasksForCategory = async categoryId => {\n  try {\n    const response = await fetch(`/api/tasks?categoryId=${categoryId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch tasks');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport const deleteTask = async id => {\n  try {\n    const response = await api.delete(`/api/v1/task/delete/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\nexport const fetchUser = async userId => {\n  try {\n    const response = await api.get(`/api/v1/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\nexport const updateUser = async user => {\n  try {\n    const response = await api.put('/api/v1/user/update', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await api.delete(`/api/v1/user/deleteuser/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\nexport const shareCategoryWithUser = async (categoryId, userId) => {\n  try {\n    const response = await api.post(`/api/v1/token/generateForCategory`, null, {\n      params: {\n        categoryId,\n        userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error sharing category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForCategory = async (categoryId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForCategory', null, {\n      params: {\n        categoryId: Number(categoryId),\n        // Stellen Sie sicher, dass categoryId als long übergeben wird\n        userId: Number(userId) // Stellen Sie sicher, dass userId als long übergeben wird\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Error generating token for category:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async (taskId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForTask', null, {\n      params: {\n        taskId: taskId,\n        userId: userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    // Entferne Tokens oder andere Authentifizierungsdaten aus dem lokalen Speicher\n    localStorage.removeItem('jwtToken');\n    sessionStorage.removeItem('jwtToken');\n  } catch (error) {\n    console.error('Error logging out:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","fetchSharedUsers","taskId","response","get","data","console","Error","registerUser","user","post","loginUser","credentials","accessToken","setItem","fetchEmail","fetchUserId","email","fetchAllUsers","fetchTasks","tasks","map","task","assignedUsers","sharedUserIds","fetchCategories","userId","addCategory","category","deleteCategory","categoryId","delete","_error$response","message","addTask","taskData","log","_error$response2","fetchTasksForCategory","fetch","ok","json","deleteTask","id","fetchUser","updateUser","put","deleteUser","shareCategoryWithUser","params","generateTokenForCategory","Number","_error$response3","generateTokenForTask","logoutUser","removeItem","sessionStorage"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080', // Deine Basis-URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const fetchSharedUsers = async (taskId) => {\n  try {\n    const response = await api.get(`/api/v1/task/sharedUsers/${taskId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching shared users:', error);\n    throw new Error('Fetching shared users failed');\n  }\n};\nexport const registerUser = async (user) => {\n  try {\n    const response = await api.post('/auth/register', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    const accessToken = response.data;\n    if (accessToken) {\n      localStorage.setItem('jwtToken', accessToken);\n    }\n    return { accessToken };\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\nexport const fetchEmail = async () => {\n  try {\n    const response = await api.get('/auth/email');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email:', error);\n    throw new Error('Fetching email failed');\n  }\n};\n\n\nexport const fetchUserId = async (email) => {\n  try {\n    const response = await api.get(`/api/v1/user/useridByEmail?email=${email}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user ID:', error);\n    throw new Error('Fetching user ID failed');\n  }\n};\n\nexport const fetchAllUsers = async () => {\n  try {\n    const response = await api.get('/api/v1/user/getAllUsers');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw new Error('Fetching users failed');\n  }\n};\nexport const fetchTasks = async () => {\n  try {\n    const response = await api.get('/api/v1/task/getTasks');\n    const tasks = response.data.map(task => ({\n      ...task,\n      assignedUsers: task.sharedUserIds || [] // Ensure assignedUsers is always an array\n    }));\n    return tasks;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\n\n\nexport const fetchCategories = async (userId) => {\n  try {\n    const response = await api.get(`/api/v1/category/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    throw error;\n  }\n};\nexport const addCategory = async (category) => {\n  try {\n    const response = await api.post(`/api/v1/category/save`, category);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding category:', error);\n    throw error;\n  }\n};\n\nexport const deleteCategory = async (categoryId) => {\n  try {\n    const response = await api.delete(`/api/v1/category/delete/${categoryId}`);\n    \n    return response.data;\n  } catch (error) {\n    console.error('Error deleting category:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\nexport const addTask = async (task, userId) => {\n  try {\n    const taskData = {\n      ...task,\n      userId, // Stellen Sie sicher, dass die userId enthalten ist\n      categoryId: task.categoryId // Verwenden Sie die Kategorie-ID ohne Präfix\n    };\n\n\n    console.log('Sending task data to server:', taskData); // Debugging\n\n    const response = await api.post('/api/v1/task/save', taskData);\n    console.log('Response:', taskData); // Debugging\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n\nexport const fetchTasksForCategory = async (categoryId) => {\n  try {\n    const response = await fetch(`/api/tasks?categoryId=${categoryId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch tasks');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\n\n\n\n\nexport const deleteTask = async (id) => {\n  try {\n    const response = await api.delete(`/api/v1/task/delete/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n\nexport const fetchUser = async (userId) => {\n  try {\n    const response = await api.get(`/api/v1/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    throw error;\n  }\n};\n\nexport const updateUser = async (user) => {\n  try {\n    const response = await api.put('/api/v1/user/update', user);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    const response = await api.delete(`/api/v1/user/deleteuser/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};\n\n\n\n\n\n\nexport const shareCategoryWithUser = async (categoryId, userId) => {\n  try {\n    const response = await api.post(`/api/v1/token/generateForCategory`, null, { params: { categoryId, userId } });\n    return response.data;\n  } catch (error) {\n    console.error('Error sharing category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForCategory = async (categoryId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForCategory', null, { \n      params: { \n        categoryId: Number(categoryId), // Stellen Sie sicher, dass categoryId als long übergeben wird\n        userId: Number(userId) // Stellen Sie sicher, dass userId als long übergeben wird\n      } \n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n\nexport const generateTokenForTask = async (taskId, userId) => {\n  try {\n    const response = await api.post('/api/v1/token/generateForTask', null, {\n      params: {\n        taskId: taskId,\n        userId: userId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};\n\n\n\n\n\nexport const logoutUser = async () => {\n  try {\n    // Entferne Tokens oder andere Authentifizierungsdaten aus dem lokalen Speicher\n    localStorage.removeItem('jwtToken');\n    sessionStorage.removeItem('jwtToken');\n  } catch (error) {\n    console.error('Error logging out:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}