{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport EditTaskPopUp from '../components/EditTaskPopUp'; // Import the EditTaskPopUp\nimport { PlannedIcon } from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUsers = [{\n  id: 'user1',\n  email: 'max@example.com',\n  initials: 'M'\n}, {\n  id: 'user2',\n  email: 'erika@example.com',\n  initials: 'E'\n}];\nfunction Dashboard() {\n  _s();\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false); // State for EditTaskPopUp\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [todos, setTodos] = useState([]); // Initialize todos as an empty array\n  const [selectedCategory, setSelectedCategory] = useState({\n    name: 'All Tasks',\n    icon: PlannedIcon\n  });\n  const [currentTodo, setCurrentTodo] = useState(null); // State for the currently edited todo\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`/api/todos?category=${selectedCategory.name}`);\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchTodos();\n  }, [selectedCategory]);\n  const handleAddTask = async (taskText, planDate, deadlineDate) => {\n    const newTask = {\n      text: taskText,\n      category: selectedCategory.name !== 'All Tasks' && selectedCategory.name !== 'Planned' && selectedCategory.name !== 'Logbook' ? selectedCategory.name : 'Today',\n      planDate: planDate || null,\n      // Plan date for internal use\n      deadlineDate: deadlineDate || null,\n      // Deadline date to be shown\n      assignedUsers: []\n    };\n    try {\n      const response = await fetch('/api/add-task', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTodos([...todos, data.task]);\n        setShowAddTaskPopUp(false);\n      } else {\n        throw new Error('Failed to add task');\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleEditTask = async updatedTodo => {\n    try {\n      const response = await fetch(`/api/edit-task/${updatedTodo.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedTodo)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const updatedTodos = todos.map(todo => todo.id === updatedTodo.id ? data.task : todo);\n        setTodos(updatedTodos);\n        setShowEditTaskPopUp(false);\n      } else {\n        throw new Error('Failed to edit task');\n      }\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(!isDeleteMode);\n  };\n  const handleEditTodo = todo => {\n    setCurrentTodo(todo);\n    setShowEditTaskPopUp(true);\n  };\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === id) {\n          if (purpose === 'plan') {\n            return {\n              ...todo,\n              planDate: date\n            };\n          } else if (purpose === 'deadline') {\n            return {\n              ...todo,\n              hasCalendar: !!date,\n              deadlineDate: date\n            };\n          }\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      await fetch(`/api/set-date/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date,\n          purpose\n        })\n      });\n    } catch (error) {\n      console.error('Error setting date:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Categories, {\n          onSelectCategory: setSelectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border p-8 rounded-large flex flex-col justify-between h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-1.5 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(selectedCategory.icon, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-grayCustom-dark\",\n              children: selectedCategory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n            todos: todos,\n            setTodos: setTodos,\n            isDeleteMode: isDeleteMode,\n            initialUsers: initialUsers,\n            onEditTodo: handleEditTodo,\n            onDateChange: handleDateChange,\n            selectedCategory: selectedCategory // Pass the selected category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToDoActions, {\n            toggleAddTaskModal: () => setShowAddTaskPopUp(true),\n            toggleDeleteMode: toggleDeleteMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), showAddTaskPopUp && /*#__PURE__*/_jsxDEV(AddTaskPopUp, {\n      onAddTask: handleAddTask,\n      onClose: () => setShowAddTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), showEditTaskPopUp && currentTodo && /*#__PURE__*/_jsxDEV(EditTaskPopUp, {\n      todo: currentTodo,\n      onSaveTask: handleEditTask,\n      onClose: () => setShowEditTaskPopUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"0+J9sMVbysxgiR6P+NlMCJuaX8I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Categories","ToDoList","ToDoActions","Navbar","AddTaskPopUp","EditTaskPopUp","PlannedIcon","jsxDEV","_jsxDEV","initialUsers","id","email","initials","Dashboard","_s","showAddTaskPopUp","setShowAddTaskPopUp","showEditTaskPopUp","setShowEditTaskPopUp","isDeleteMode","setIsDeleteMode","todos","setTodos","selectedCategory","setSelectedCategory","name","icon","currentTodo","setCurrentTodo","fetchTodos","response","fetch","data","json","error","console","handleAddTask","taskText","planDate","deadlineDate","newTask","text","category","assignedUsers","method","headers","body","JSON","stringify","ok","task","Error","handleEditTask","updatedTodo","updatedTodos","map","todo","toggleDeleteMode","handleEditTodo","handleDateChange","date","purpose","hasCalendar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectCategory","onEditTodo","onDateChange","toggleAddTaskModal","onAddTask","onClose","onSaveTask","_c","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Categories from '../components/Categories';\nimport ToDoList from '../components/ToDoList';\nimport ToDoActions from '../components/ToDoActions';\nimport Navbar from '../components/Navbar';\nimport AddTaskPopUp from '../components/AddTaskPopUp';\nimport EditTaskPopUp from '../components/EditTaskPopUp'; // Import the EditTaskPopUp\nimport { PlannedIcon } from '../icons';\n\nconst initialUsers = [\n  { id: 'user1', email: 'max@example.com', initials: 'M' },\n  { id: 'user2', email: 'erika@example.com', initials: 'E' },\n];\n\nfunction Dashboard() {\n  const [showAddTaskPopUp, setShowAddTaskPopUp] = useState(false);\n  const [showEditTaskPopUp, setShowEditTaskPopUp] = useState(false); // State for EditTaskPopUp\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [todos, setTodos] = useState([]); // Initialize todos as an empty array\n  const [selectedCategory, setSelectedCategory] = useState({ name: 'All Tasks', icon: PlannedIcon });\n  const [currentTodo, setCurrentTodo] = useState(null); // State for the currently edited todo\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`/api/todos?category=${selectedCategory.name}`);\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n\n    fetchTodos();\n  }, [selectedCategory]);\n\n  const handleAddTask = async (taskText, planDate, deadlineDate) => {\n    const newTask = {\n      text: taskText,\n      category: selectedCategory.name !== 'All Tasks' && selectedCategory.name !== 'Planned' && selectedCategory.name !== 'Logbook' ? selectedCategory.name : 'Today',\n      planDate: planDate || null, // Plan date for internal use\n      deadlineDate: deadlineDate || null, // Deadline date to be shown\n      assignedUsers: [],\n    };\n\n    try {\n      const response = await fetch('/api/add-task', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newTask),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setTodos([...todos, data.task]);\n        setShowAddTaskPopUp(false);\n      } else {\n        throw new Error('Failed to add task');\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const handleEditTask = async (updatedTodo) => {\n    try {\n      const response = await fetch(`/api/edit-task/${updatedTodo.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedTodo),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const updatedTodos = todos.map(todo => todo.id === updatedTodo.id ? data.task : todo);\n        setTodos(updatedTodos);\n        setShowEditTaskPopUp(false);\n      } else {\n        throw new Error('Failed to edit task');\n      }\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  const toggleDeleteMode = () => {\n    setIsDeleteMode(!isDeleteMode);\n  };\n\n  const handleEditTodo = (todo) => {\n    setCurrentTodo(todo);\n    setShowEditTaskPopUp(true);\n  };\n\n  const handleDateChange = async (id, date, purpose) => {\n    try {\n      const updatedTodos = todos.map(todo => {\n        if (todo.id === id) {\n          if (purpose === 'plan') {\n            return { ...todo, planDate: date };\n          } else if (purpose === 'deadline') {\n            return { ...todo, hasCalendar: !!date, deadlineDate: date };\n          }\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      await fetch(`/api/set-date/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ date, purpose }),\n      });\n    } catch (error) {\n      console.error('Error setting date:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 sm:px-10 lg:px-8 mt-8\">\n      <div className=\"w-full\">\n        <div className=\"flex justify-between items-center max-w-5xl mx-auto rounded-2xl\">\n          <Navbar />\n        </div>\n      </div>\n      <div className=\"h-16\" />\n      <div className=\"flex flex-col lg:flex-row items-center lg:items-start justify-center w-full max-w-5xl mx-auto\">\n        <div className=\"w-full lg:w-1/3 lg:mr-8 mb-8 lg:mb-0\">\n          <Categories onSelectCategory={setSelectedCategory} />\n        </div>\n        <div className=\"flex-1 w-full\">\n          <div className=\"bg-white border p-8 rounded-large flex flex-col justify-between h-full\">\n            <div className=\"flex items-center gap-1.5 mb-4\">\n              <selectedCategory.icon className=\"h-6 w-6\" />\n              <span className=\"font-bold text-grayCustom-dark\">{selectedCategory.name}</span>\n            </div>\n            <ToDoList\n              todos={todos}\n              setTodos={setTodos}\n              isDeleteMode={isDeleteMode}\n              initialUsers={initialUsers}\n              onEditTodo={handleEditTodo}\n              onDateChange={handleDateChange}\n              selectedCategory={selectedCategory} // Pass the selected category\n            />\n            <ToDoActions toggleAddTaskModal={() => setShowAddTaskPopUp(true)} toggleDeleteMode={toggleDeleteMode} />\n          </div>\n        </div>\n      </div>\n      {showAddTaskPopUp && (\n        <AddTaskPopUp onAddTask={handleAddTask} onClose={() => setShowAddTaskPopUp(false)} />\n      )}\n      {showEditTaskPopUp && currentTodo && (\n        <EditTaskPopUp todo={currentTodo} onSaveTask={handleEditTask} onClose={() => setShowEditTaskPopUp(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}