{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\n\n// Axios Interceptor to add JWT token to headers\napi.interceptors.request.use(config => {\n  const token = Cookies.get('jwtToken');\n  console.debug('Interceptor: JWT token from cookies:', token);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.debug('Interceptor: Authorization header set with token');\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// API functions\nexport const loginUser = async credentials => {\n  try {\n    console.debug('Logging in with credentials:', credentials);\n    const response = await api.post('/auth/login', credentials);\n    console.debug('Login response:', response);\n    const token = response.data;\n    console.debug('Received token:', token);\n    Cookies.set('jwtToken', token);\n    console.debug('JWT token saved in cookies');\n    return 'Baerer ' + response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\n\n// Other functions...\n\n// Other functions...\n// Tasks\nexport const fetchTasks = userId => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = userId => api.get(`/user/${userId}`).then(res => res.data);\n\n// Users\nexport const registerUser = user => api.post('/auth/register', user).then(res => res.data);\nexport const fetchCurrentUser = async () => {\n  try {\n    const response = await api.get('/auth/current');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw new Error('Fetching current user failed');\n  }\n};\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","Cookies","api","create","baseURL","withCredentials","interceptors","request","use","config","token","get","console","debug","headers","error","Promise","reject","loginUser","credentials","response","post","data","set","Error","fetchTasks","userId","then","res","addTask","task","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","user","fetchCurrentUser","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\n// Axios Interceptor to add JWT token to headers\napi.interceptors.request.use(\n  config => {\n    const token = Cookies.get('jwtToken');\n    console.debug('Interceptor: JWT token from cookies:', token);\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n      console.debug('Interceptor: Authorization header set with token');\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// API functions\nexport const loginUser = async (credentials) => {\n  try {\n    console.debug('Logging in with credentials:', credentials);\n    const response = await api.post('/auth/login', credentials);\n    console.debug('Login response:', response);\n    const token = response.data;\n    console.debug('Received token:', token);\n    Cookies.set('jwtToken', token);\n    console.debug('JWT token saved in cookies');\n    return 'Baerer ' + response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\n\n// Other functions...\n\n// Other functions...\n// Tasks\nexport const fetchTasks = (userId) => api.get(`/task/getTasks?userId=${userId}`).then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = (userId) => api.get(`/user/${userId}`).then(res => res.data);\n\n// Users\nexport const registerUser = (user) => api.post('/auth/register', user).then(res => res.data);\n\n\nexport const fetchCurrentUser = async () => {\n  try {\n    const response = await api.get('/auth/current');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw new Error('Fetching current user failed');\n  }\n};\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}