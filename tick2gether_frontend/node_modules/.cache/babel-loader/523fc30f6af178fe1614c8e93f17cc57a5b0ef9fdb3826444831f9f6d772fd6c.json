{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\n\n// Tasks\nexport const fetchTasks = userId => {\n  const token = Cookies.get('token');\n  return api.get(`/task/getTasks?userId=${userId}`, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\nexport const addTask = task => {\n  const token = Cookies.get('token');\n  return api.post('/task/save', task, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\nexport const updateTask = task => {\n  const token = Cookies.get('token');\n  return api.put('/task/update', task, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\nexport const deleteTask = id => {\n  const token = Cookies.get('token');\n  return api.delete(`/task/delete/${id}`, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\n\n// Users\nexport const fetchUser = userId => {\n  const token = Cookies.get('token');\n  return api.get(`/user/${userId}`, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const loginUser = async credentials => {\n  try {\n    console.log('Attempting to login with credentials:', credentials); // Debugging-Ausgabe\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response); // Debugging-Ausgabe\n\n    const token = response.headers['authorization'];\n    console.log('Storing token:', token); // Debugging-Ausgabe\n    if (token) {\n      Cookies.set('token', token, {\n        expires: 1\n      });\n    } else {\n      console.error('No token found in response headers');\n    }\n    return response;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token); // Debugging-Ausgabe\n  const response = await api.get('/user/me', {\n    headers: {\n      Authorization: token\n    }\n  });\n  console.log('Current user:', response.data); // Debugging-Ausgabe\n  return response.data;\n};\nexport const updateUser = user => {\n  const token = Cookies.get('token');\n  return api.put('/user/update', user, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\nexport const deleteUser = id => {\n  const token = Cookies.get('token');\n  return api.delete(`/user/deleteuser/${id}`, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\n\n// Categories\nexport const addCategory = category => {\n  const token = Cookies.get('token');\n  return api.post('/category/save', category, {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => res.data);\n};\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const token = Cookies.get('token');\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const token = Cookies.get('token');\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","Cookies","api","create","baseURL","withCredentials","fetchTasks","userId","token","get","headers","Authorization","then","res","data","addTask","task","post","updateTask","put","deleteTask","id","delete","fetchUser","registerUser","user","loginUser","credentials","console","log","response","set","expires","error","fetchCurrentUser","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\n// Tasks\nexport const fetchTasks = (userId) => {\n  const token = Cookies.get('token');\n  return api.get(`/task/getTasks?userId=${userId}`, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\nexport const addTask = (task) => {\n  const token = Cookies.get('token');\n  return api.post('/task/save', task, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\nexport const updateTask = (task) => {\n  const token = Cookies.get('token');\n  return api.put('/task/update', task, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\nexport const deleteTask = (id) => {\n  const token = Cookies.get('token');\n  return api.delete(`/task/delete/${id}`, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\n// Users\nexport const fetchUser = (userId) => {\n  const token = Cookies.get('token');\n  return api.get(`/user/${userId}`, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\nexport const loginUser = async (credentials) => {\n  try {\n    console.log('Attempting to login with credentials:', credentials); // Debugging-Ausgabe\n    const response = await api.post('/user/login', credentials);\n    console.log('Login response:', response); // Debugging-Ausgabe\n\n    const token = response.headers['authorization'];\n    console.log('Storing token:', token); // Debugging-Ausgabe\n    if (token) {\n      Cookies.set('token', token, { expires: 1 });\n    } else {\n      console.error('No token found in response headers');\n    }\n\n    return response;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\nexport const fetchCurrentUser = async () => {\n  const token = Cookies.get('token');\n  console.log('Fetching current user with token:', token); // Debugging-Ausgabe\n  const response = await api.get('/user/me', {\n    headers: {\n      Authorization: token,\n    },\n  });\n  console.log('Current user:', response.data); // Debugging-Ausgabe\n  return response.data;\n};\n\nexport const updateUser = (user) => {\n  const token = Cookies.get('token');\n  return api.put('/user/update', user, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\nexport const deleteUser = (id) => {\n  const token = Cookies.get('token');\n  return api.delete(`/user/deleteuser/${id}`, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\n// Categories\nexport const addCategory = (category) => {\n  const token = Cookies.get('token');\n  return api.post('/category/save', category, {\n    headers: {\n      Authorization: token,\n    },\n  }).then(res => res.data);\n};\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const token = Cookies.get('token');\n    const response = await api.post('/token/generateForCategory', { categoryId }, {\n      headers: {\n        Authorization: token,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const token = Cookies.get('token');\n    const response = await api.post('/token/generateForTask', { taskId }, {\n      headers: {\n        Authorization: token,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK;EACpC,MAAMC,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACO,GAAG,CAAC,yBAAyBF,MAAM,EAAE,EAAE;IAChDG,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK;EAC/B,MAAMR,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACe,IAAI,CAAC,YAAY,EAAED,IAAI,EAAE;IAClCN,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIF,IAAI,IAAK;EAClC,MAAMR,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACiB,GAAG,CAAC,cAAc,EAAEH,IAAI,EAAE;IACnCN,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIC,EAAE,IAAK;EAChC,MAAMb,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACoB,MAAM,CAAC,gBAAgBD,EAAE,EAAE,EAAE;IACtCX,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMS,SAAS,GAAIhB,MAAM,IAAK;EACnC,MAAMC,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACO,GAAG,CAAC,SAASF,MAAM,EAAE,EAAE;IAChCG,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMU,YAAY,GAAIC,IAAI,IAAKvB,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEQ,IAAI,CAAC,CAACb,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAE5F,OAAO,MAAMY,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,WAAW,CAAC,CAAC,CAAC;IACnE,MAAMG,QAAQ,GAAG,MAAM5B,GAAG,CAACe,IAAI,CAAC,aAAa,EAAEU,WAAW,CAAC;IAC3DC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAAC,CAAC,CAAC;;IAE1C,MAAMtB,KAAK,GAAGsB,QAAQ,CAACpB,OAAO,CAAC,eAAe,CAAC;IAC/CkB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAErB,KAAK,CAAC,CAAC,CAAC;IACtC,IAAIA,KAAK,EAAE;MACTP,OAAO,CAAC8B,GAAG,CAAC,OAAO,EAAEvB,KAAK,EAAE;QAAEwB,OAAO,EAAE;MAAE,CAAC,CAAC;IAC7C,CAAC,MAAM;MACLJ,OAAO,CAACK,KAAK,CAAC,oCAAoC,CAAC;IACrD;IAEA,OAAOH,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAM1B,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClCmB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAErB,KAAK,CAAC,CAAC,CAAC;EACzD,MAAMsB,QAAQ,GAAG,MAAM5B,GAAG,CAACO,GAAG,CAAC,UAAU,EAAE;IACzCC,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC;EACFoB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC;EAC7C,OAAOgB,QAAQ,CAAChB,IAAI;AACtB,CAAC;AAED,OAAO,MAAMqB,UAAU,GAAIV,IAAI,IAAK;EAClC,MAAMjB,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACiB,GAAG,CAAC,cAAc,EAAEM,IAAI,EAAE;IACnCf,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMsB,UAAU,GAAIf,EAAE,IAAK;EAChC,MAAMb,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACoB,MAAM,CAAC,oBAAoBD,EAAE,EAAE,EAAE;IAC1CX,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMuB,WAAW,GAAIC,QAAQ,IAAK;EACvC,MAAM9B,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;EAClC,OAAOP,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEqB,QAAQ,EAAE;IAC1C5B,OAAO,EAAE;MACPC,aAAa,EAAEH;IACjB;EACF,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMyB,wBAAwB,GAAG,MAAOC,UAAU,IAAK;EAC5D,IAAI;IACF,MAAMhC,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;IAClC,MAAMqB,QAAQ,GAAG,MAAM5B,GAAG,CAACe,IAAI,CAAC,4BAA4B,EAAE;MAAEuB;IAAW,CAAC,EAAE;MAC5E9B,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC,CAAC;IACF,OAAOsB,QAAQ,CAAChB,IAAI;EACtB,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,IAAI;IACF,MAAMlC,KAAK,GAAGP,OAAO,CAACQ,GAAG,CAAC,OAAO,CAAC;IAClC,MAAMqB,QAAQ,GAAG,MAAM5B,GAAG,CAACe,IAAI,CAAC,wBAAwB,EAAE;MAAEyB;IAAO,CAAC,EAAE;MACpEhC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC,CAAC;IACF,OAAOsB,QAAQ,CAAChB,IAAI;EACtB,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}