{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  withCredentials: true\n});\n\n// Fehlerbehandlung für alle Anfragen\nconst handleResponse = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response.data;\n  } else {\n    throw new Error(response.statusText || 'API request failed');\n  }\n};\nconst handleError = error => {\n  console.error('API request error:', error.response ? error.response.data : error.message);\n  throw error;\n};\nexport const fetchTodos = category => api.get(`/todos?category=${category}`).then(handleResponse).catch(handleError);\nexport const addTask = task => api.post('/add-task', task).then(handleResponse).catch(handleError);\nexport const updateTask = (id, task) => api.put(`/update-task/${id}`, task).then(handleResponse).catch(handleError);\nexport const deleteTask = id => api.delete(`/delete-task/${id}`).then(handleResponse).catch(handleError);\nexport const setTaskDate = (id, dateRequest) => api.put(`/set-task-date/${id}`, dateRequest).then(handleResponse).catch(handleError);","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","handleResponse","response","status","data","Error","statusText","handleError","error","console","message","fetchTodos","category","get","then","catch","addTask","task","post","updateTask","id","put","deleteTask","delete","setTaskDate","dateRequest"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_ui/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  withCredentials: true,\n});\n\n// Fehlerbehandlung für alle Anfragen\nconst handleResponse = (response) => {\n  if (response.status >= 200 && response.status < 300) {\n    return response.data;\n  } else {\n    throw new Error(response.statusText || 'API request failed');\n  }\n};\n\nconst handleError = (error) => {\n  console.error('API request error:', error.response ? error.response.data : error.message);\n  throw error;\n};\n\nexport const fetchTodos = (category) => \n  api.get(`/todos?category=${category}`)\n    .then(handleResponse)\n    .catch(handleError);\n\nexport const addTask = (task) => \n  api.post('/add-task', task)\n    .then(handleResponse)\n    .catch(handleError);\n\nexport const updateTask = (id, task) => \n  api.put(`/update-task/${id}`, task)\n    .then(handleResponse)\n    .catch(handleError);\n\nexport const deleteTask = (id) => \n  api.delete(`/delete-task/${id}`)\n    .then(handleResponse)\n    .catch(handleError);\n\nexport const setTaskDate = (id, dateRequest) => \n  api.put(`/set-task-date/${id}`, dateRequest)\n    .then(handleResponse)\n    .catch(handleError);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EACnC,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,IAAID,QAAQ,CAACC,MAAM,GAAG,GAAG,EAAE;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,IAAI,oBAAoB,CAAC;EAC9D;AACF,CAAC;AAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7BC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,GAAGI,KAAK,CAACE,OAAO,CAAC;EACzF,MAAMF,KAAK;AACb,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,QAAQ,IACjCf,GAAG,CAACgB,GAAG,CAAC,mBAAmBD,QAAQ,EAAE,CAAC,CACnCE,IAAI,CAACb,cAAc,CAAC,CACpBc,KAAK,CAACR,WAAW,CAAC;AAEvB,OAAO,MAAMS,OAAO,GAAIC,IAAI,IAC1BpB,GAAG,CAACqB,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC,CACxBH,IAAI,CAACb,cAAc,CAAC,CACpBc,KAAK,CAACR,WAAW,CAAC;AAEvB,OAAO,MAAMY,UAAU,GAAGA,CAACC,EAAE,EAAEH,IAAI,KACjCpB,GAAG,CAACwB,GAAG,CAAC,gBAAgBD,EAAE,EAAE,EAAEH,IAAI,CAAC,CAChCH,IAAI,CAACb,cAAc,CAAC,CACpBc,KAAK,CAACR,WAAW,CAAC;AAEvB,OAAO,MAAMe,UAAU,GAAIF,EAAE,IAC3BvB,GAAG,CAAC0B,MAAM,CAAC,gBAAgBH,EAAE,EAAE,CAAC,CAC7BN,IAAI,CAACb,cAAc,CAAC,CACpBc,KAAK,CAACR,WAAW,CAAC;AAEvB,OAAO,MAAMiB,WAAW,GAAGA,CAACJ,EAAE,EAAEK,WAAW,KACzC5B,GAAG,CAACwB,GAAG,CAAC,kBAAkBD,EAAE,EAAE,EAAEK,WAAW,CAAC,CACzCX,IAAI,CAACb,cAAc,CAAC,CACpBc,KAAK,CAACR,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}