{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true\n});\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post('/api/v1/user/login', credentials);\n    if (response.headers.authorization) {\n      localStorage.setItem('token', response.headers.authorization);\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\nexport const fetchCurrentUser = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('/api/v1/user/me', {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\n// Tasks\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\nexport const addTask = task => api.post('/task/save', task).then(res => res.data);\nexport const updateTask = task => api.put('/task/update', task).then(res => res.data);\nexport const deleteTask = id => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = userId => api.get(`/user/${userId}`).then(res => res.data);\nexport const registerUser = user => api.post('/user/register', user).then(res => res.data);\nexport const updateUser = user => api.put('/user/update', user).then(res => res.data);\nexport const deleteUser = id => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = category => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async categoryId => {\n  try {\n    const response = await api.post('/token/generateForCategory', {\n      categoryId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\nexport const generateTokenForTask = async taskId => {\n  try {\n    const response = await api.post('/token/generateForTask', {\n      taskId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","loginUser","credentials","response","post","headers","authorization","localStorage","setItem","data","error","console","fetchCurrentUser","token","getItem","get","Authorization","fetchTasks","then","res","addTask","task","updateTask","put","deleteTask","id","delete","fetchUser","userId","registerUser","user","updateUser","deleteUser","addCategory","category","generateTokenForCategory","categoryId","generateTokenForTask","taskId"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api/v1',\n  withCredentials: true,\n});\n\n\n\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await axios.post('/api/v1/user/login', credentials);\n    if (response.headers.authorization) {\n      localStorage.setItem('token', response.headers.authorization);\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\n\nexport const fetchCurrentUser = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('/api/v1/user/me', {\n      headers: {\n        Authorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\n// Tasks\nexport const fetchTasks = () => api.get('/task/getTasks').then(res => res.data);\n\nexport const addTask = (task) => api.post('/task/save', task).then(res => res.data);\n\nexport const updateTask = (task) => api.put('/task/update', task).then(res => res.data);\n\nexport const deleteTask = (id) => api.delete(`/task/delete/${id}`).then(res => res.data);\n\n// Users\nexport const fetchUser = (userId) => api.get(`/user/${userId}`).then(res => res.data);\n\nexport const registerUser = (user) => api.post('/user/register', user).then(res => res.data);\n\n\nexport const updateUser = (user) => api.put('/user/update', user).then(res => res.data);\n\nexport const deleteUser = (id) => api.delete(`/user/deleteuser/${id}`).then(res => res.data);\n\n// Categories\nexport const addCategory = (category) => api.post('/category/save', category).then(res => res.data);\n\n// Tokens\nexport const generateTokenForCategory = async (categoryId) => {\n  try {\n    const response = await api.post('/token/generateForCategory', { categoryId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for category:', error);\n    throw error;\n  }\n};\n\nexport const generateTokenForTask = async (taskId) => {\n  try {\n    const response = await api.post('/token/generateForTask', { taskId });\n    return response.data;\n  } catch (error) {\n    console.error('Error generating token for task:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}