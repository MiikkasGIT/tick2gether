{"ast":null,"code":"var _jsxFileName = \"/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendTestMessage } from '../websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketTestComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // example user ID\n\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    connectWebSocket(userId, handleWebSocketMessage);\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n  const handleSendMessage = () => {\n    const message = {\n      taskId: 1,\n      text: 'Test Task',\n      userId: userId,\n      categoryId: 1,\n      type: 'TEST_MESSAGE',\n      message: 'This is a test message'\n    };\n    sendTestMessage(message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Test Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: JSON.stringify(message)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketTestComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = WebSocketTestComponent;\nexport default WebSocketTestComponent;\ns;\nvar _c;\n$RefreshReg$(_c, \"WebSocketTestComponent\");","map":{"version":3,"names":["React","useState","useEffect","connectWebSocket","disconnectWebSocket","sendTestMessage","jsxDEV","_jsxDEV","WebSocketTestComponent","_s","messages","setMessages","userId","handleWebSocketMessage","message","console","log","prevMessages","handleSendMessage","taskId","text","categoryId","type","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","JSON","stringify","_c","s","$RefreshReg$"],"sources":["/Users/finngarrels/IdeaProjects/Tick2GetherProject/tick2gether_frontend/src/pages/WebSocketTestComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connectWebSocket, disconnectWebSocket, sendTestMessage } from '../websocket';\n\nconst WebSocketTestComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const userId = 1; // example user ID\n\n  useEffect(() => {\n    const handleWebSocketMessage = (message) => {\n      console.log('Received WebSocket message:', message);\n      setMessages((prevMessages) => [...prevMessages, message]);\n    };\n\n    connectWebSocket(userId, handleWebSocketMessage);\n\n    return () => {\n      disconnectWebSocket();\n    };\n  }, [userId]);\n\n  const handleSendMessage = () => {\n    const message = {\n      taskId: 1,\n      text: 'Test Task',\n      userId: userId,\n      categoryId: 1,\n      type: 'TEST_MESSAGE',\n      message: 'This is a test message'\n    };\n    sendTestMessage(message);\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Test Component</h2>\n      <button onClick={handleSendMessage}>Send Test Message</button>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{JSON.stringify(message)}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WebSocketTestComponent;\ns"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,GAAG,CAAC,CAAC,CAAC;;EAElBV,SAAS,CAAC,MAAM;IACd,MAAMW,sBAAsB,GAAIC,OAAO,IAAK;MAC1CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,OAAO,CAAC;MACnDH,WAAW,CAAEM,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEDX,gBAAgB,CAACS,MAAM,EAAEC,sBAAsB,CAAC;IAEhD,OAAO,MAAM;MACXT,mBAAmB,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACQ,MAAM,CAAC,CAAC;EAEZ,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMJ,OAAO,GAAG;MACdK,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,WAAW;MACjBR,MAAM,EAAEA,MAAM;MACdS,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE,cAAc;MACpBR,OAAO,EAAE;IACX,CAAC;IACDT,eAAe,CAACS,OAAO,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpB,OAAA;MAAQqB,OAAO,EAAEV,iBAAkB;MAAAK,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACmB,GAAG,CAAC,CAACf,OAAO,EAAEgB,KAAK,kBAC3BvB,OAAA;QAAAgB,QAAA,EAAiBQ,IAAI,CAACC,SAAS,CAAClB,OAAO;MAAC,GAA/BgB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCID,sBAAsB;AAAAyB,EAAA,GAAtBzB,sBAAsB;AA0C5B,eAAeA,sBAAsB;AACrC0B,CAAC;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}